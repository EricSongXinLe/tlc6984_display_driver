
#ifdef CLB_SIM
/*
 *  ======== clb_systemc.cpp ========
 *  DO NOT EDIT - This file is generated by the SysConfig tool.
 */

#include "systemc.h"

#define TYPE 	3

#include "CLB_LUT4_SC_model.h"
#include "CLB_counter_SC_model.h"
#include "CLB_OutputLUT_SC_model.h"
#include "CLB_HLC_SC_model.h"
#include "CLB_FSM_SC_model.h"
#include "CLB_Input_conditioner.h"
#include "squareWave.h"
#include "customWave.h"
#include "clb_config.h"

#if TYPE == 2

#include "CLB_counter_top_SC_model.h"
#include "CLB_FSM_top_SC_model.h"
#include "CLB_LUT4_top_SC_model.h"
#include "CLB_OutputLUT_top_SC_model.h"
#include "CLB_AOC_top_SC_model.h"

#define DEVICE_CLB_OUTPUT_LUT   POTENZA_CLB_OUTPUT_LUT
#define DEVICE_CLB_HLC          POTENZA_CLB_HLC
#define DEVICE_CLB_LUT4         POTENZA_CLB_LUT4
#define DEVICE_CLB_FSM          POTENZA_CLB_FSM
#define DEVICE_CLB_COUNTER      POTENZA_CLB_COUNTER
#define DEVICE_CLB_AOC          POTENZA_CLB_AOC

#elif TYPE == 3

#include "CLB_counter_top_SC_model.h"
#include "CLB_FSM_top_SC_model.h"
#include "CLB_LUT4_top_SC_model.h"
#include "CLB_OutputLUT_top_SC_model.h"
#include "CLB_AOC_top_SC_model.h"

#define DEVICE_CLB_OUTPUT_LUT   TENOR_CLB_OUTPUT_LUT
#define DEVICE_CLB_HLC          TENOR_CLB_HLC
#define DEVICE_CLB_LUT4         TENOR_CLB_LUT4
#define DEVICE_CLB_FSM          TENOR_CLB_FSM
#define DEVICE_CLB_COUNTER      TENOR_CLB_COUNTER
#define DEVICE_CLB_AOC          TENOR_CLB_AOC

#elif   TYPE == 1

#define DEVICE_CLB_OUTPUT_LUT   SOPRANO_CLB_OUTPUT_LUT
#define DEVICE_CLB_HLC          SOPRANO_CLB_HLC
#define DEVICE_CLB_LUT4         SOPRANO_CLB_LUT4
#define DEVICE_CLB_FSM          SOPRANO_CLB_FSM
#define DEVICE_CLB_COUNTER      SOPRANO_CLB_COUNTER

#endif

#define i0 I0
#define i1 I1
#define i2 I2
#define i3 I3

SC_MODULE(Top)
{
    //Top Level Clock, Reset, Enable
    sc_clock              sc_top_clock;
    sc_signal<bool>       sc_top_reset;
    sc_signal<bool>       sc_top_enable;
    sc_signal<bool>       sc_zero;
    sc_signal<bool>       sc_one;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_0;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_0_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_0_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_1;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_1_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_1_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_2;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_2_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_2_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_3;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_3_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_3_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_4;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_4_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_4_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_5;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_5_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_5_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_6;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_6_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_6_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE1_OUTLUT_7;
    sc_signal<sc_uint<8> >  sig_TILE1_OUTLUT_7_fn;
    sc_signal<bool>  sig_TILE1_OUTLUT_7_OUT;

    DEVICE_CLB_LUT4        TILE1_LUT_0;
    sc_signal<sc_uint<16> > sig_TILE1_LUT_0_fn;
    sc_signal<bool>         sig_TILE1_LUT_0_OUT;

    DEVICE_CLB_LUT4        TILE1_LUT_1;
    sc_signal<sc_uint<16> > sig_TILE1_LUT_1_fn;
    sc_signal<bool>         sig_TILE1_LUT_1_OUT;

    DEVICE_CLB_LUT4        TILE1_LUT_2;
    sc_signal<sc_uint<16> > sig_TILE1_LUT_2_fn;
    sc_signal<bool>         sig_TILE1_LUT_2_OUT;

    DEVICE_CLB_FSM         TILE1_FSM_0;
    sc_signal<bool>         sig_TILE1_FSM_0_xe0_sel;
    sc_signal<bool>         sig_TILE1_FSM_0_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_0_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_0_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_0_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE1_FSM_0_S0;
    sc_signal<bool>         sig_TILE1_FSM_0_S1;
    sc_signal<bool>         sig_TILE1_FSM_0_OUT;

    DEVICE_CLB_FSM         TILE1_FSM_1;
    sc_signal<bool>         sig_TILE1_FSM_1_xe0_sel;
    sc_signal<bool>         sig_TILE1_FSM_1_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_1_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_1_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_1_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE1_FSM_1_S0;
    sc_signal<bool>         sig_TILE1_FSM_1_S1;
    sc_signal<bool>         sig_TILE1_FSM_1_OUT;

    DEVICE_CLB_FSM         TILE1_FSM_2;
    sc_signal<bool>         sig_TILE1_FSM_2_xe0_sel;
    sc_signal<bool>         sig_TILE1_FSM_2_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_2_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_2_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE1_FSM_2_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE1_FSM_2_S0;
    sc_signal<bool>         sig_TILE1_FSM_2_S1;
    sc_signal<bool>         sig_TILE1_FSM_2_OUT;

    DEVICE_CLB_COUNTER     TILE1_COUNTER_0;
    sc_signal<bool>         sig_TILE1_COUNTER_0_add_shift_dir;
    sc_signal<bool>         sig_TILE1_COUNTER_0_add_shift_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_0_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_global_clk_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_event_load_val;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_rst_n;
    sc_signal<bool>         sig_TILE1_COUNTER_0_match_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_match1_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_match2_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_match1_out;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_match2_out;
    sc_signal<bool>         sig_TILE1_COUNTER_0_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_0_hlc_count_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_0_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_0_count_out;
    sc_signal<bool>         sig_TILE1_COUNTER_0_count_zero;
    sc_signal<bool>         sig_TILE1_COUNTER_0_count_match1;
    sc_signal<bool>         sig_TILE1_COUNTER_0_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_0_lfsr_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_0_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_0_match1_tap;
    sc_signal<bool>         sig_TILE1_COUNTER_0_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_0_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_0_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE1_COUNTER_1;
    sc_signal<bool>         sig_TILE1_COUNTER_1_add_shift_dir;
    sc_signal<bool>         sig_TILE1_COUNTER_1_add_shift_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_1_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_global_clk_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_event_load_val;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_rst_n;
    sc_signal<bool>         sig_TILE1_COUNTER_1_match_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_match1_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_match2_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_match1_out;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_match2_out;
    sc_signal<bool>         sig_TILE1_COUNTER_1_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_1_hlc_count_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_1_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_1_count_out;
    sc_signal<bool>         sig_TILE1_COUNTER_1_count_zero;
    sc_signal<bool>         sig_TILE1_COUNTER_1_count_match1;
    sc_signal<bool>         sig_TILE1_COUNTER_1_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_1_lfsr_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_1_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_1_match1_tap;
    sc_signal<bool>         sig_TILE1_COUNTER_1_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_1_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_1_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE1_COUNTER_2;
    sc_signal<bool>         sig_TILE1_COUNTER_2_add_shift_dir;
    sc_signal<bool>         sig_TILE1_COUNTER_2_add_shift_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_2_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_global_clk_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_event_load_val;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_rst_n;
    sc_signal<bool>         sig_TILE1_COUNTER_2_match_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_match1_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_match2_val;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_match1_out;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_match2_out;
    sc_signal<bool>         sig_TILE1_COUNTER_2_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_2_hlc_count_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE1_COUNTER_2_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE1_COUNTER_2_count_out;
    sc_signal<bool>         sig_TILE1_COUNTER_2_count_zero;
    sc_signal<bool>         sig_TILE1_COUNTER_2_count_match1;
    sc_signal<bool>         sig_TILE1_COUNTER_2_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_2_lfsr_mode;
    sc_signal<bool>         sig_TILE1_COUNTER_2_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_2_match1_tap;
    sc_signal<bool>         sig_TILE1_COUNTER_2_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE1_COUNTER_2_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE1_COUNTER_2_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_HLC         TILE1_HLC;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_e0;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_e1;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_e2;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_e3;
	sc_signal<sc_uint<12> >     sig_TILE1_HLC_P_curr_instr;

    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R0_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R1_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R2_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_comm_R3_out;

    sc_signal<sc_uint<2> >      sig_TILE1_HLC_P_fifo_read_ptr;
    sc_signal<sc_uint<2> >      sig_TILE1_HLC_P_fifo_write_ptr;

    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_pull_fifo0_out;//There are 2 FIFOs in CLB, push and pull
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_pull_fifo1_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_pull_fifo2_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_pull_fifo3_out;

    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_push_fifo0_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_push_fifo1_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_push_fifo2_out;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_push_fifo3_out;

    sc_signal<bool>             sig_TILE1_HLC_P_fifo_underflow;
    sc_signal<bool>             sig_TILE1_HLC_P_fifo_overflow;

    sc_signal<bool>             sig_TILE1_HLC_P_fifo_refill_enable;

    sc_signal<bool>             sig_TILE1_HLC_P_push_data_en;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_push_data_out;
    sc_signal<bool>             sig_TILE1_HLC_P_pull_data_en;
    sc_signal<bool>             sig_TILE1_HLC_P_set_intr_flag;
    sc_signal<sc_uint<32> >     sig_TILE1_HLC_P_intr_val;

	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_0;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_1;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_2;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_3;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_4;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_5;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_6;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_7;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_8;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_9;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_10;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_11;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_12;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_13;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_14;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_15;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_16;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_17;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_18;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_19;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_20;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_21;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_22;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_23;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_24;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_25;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_26;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_27;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_28;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_29;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_30;
	sc_signal<sc_uint<32> >     sig_TILE1_HLC_hlc_instr_31;
	
    sc_signal<sc_uint<32> >     sig_TILE1_COUNTER_hlc_count_load_val;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>             sig_TILE1_HLC_ae0;
    sc_signal<bool>             sig_TILE1_HLC_ae1;
    sc_signal<bool>             sig_TILE1_HLC_ae2;
    sc_signal<bool>             sig_TILE1_HLC_ae3;
#endif

#if TYPE == 3
    sc_signal<bool>             sig_TILE1_HLC_RECONFIG_PIPELINE_EN;
    sc_signal<bool>             sig_TILE1_HLC_SPI_EN;
    sc_signal<sc_uint<5> >      sig_TILE1_HLC_SPI_EVENT_TRIGGER;
    sc_signal<sc_uint<5> >      sig_TILE1_HLC_SPI_SHIFT_VAL;
    sc_signal<sc_uint<16> >     sig_TILE1_HLC_SPI_EXPORT_RXBUFF;
#endif

    //
    // Raw inputs
    //
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in0;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in1;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in2;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in3;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in4;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in5;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in6;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_in7;

    //
    // Input configuration
    //
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl0;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl1;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl2;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl3;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl4;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl5;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl6;
    sc_signal<sc_uint<32> > sig_TILE1_BOUNDARY_IN_ctrl7;

    //
    // Inputs after delays from synchronization, pipelining, etc.
    //
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out0;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out1;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out2;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out3;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out4;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out5;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out6;
    sc_signal<bool>         sig_TILE1_BOUNDARY_IN_out7;

    //
    // Outputs from CLB
    //
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out0;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out1;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out2;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out3;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out4;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out5;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out6;
    sc_signal<bool>         sig_TILE1_BOUNDARY_OUT_out7;

    CLB_INPUT_CONDITIONER   TILE1_BOUNDARY_IN;


    DEVICE_CLB_AOC          TILE1_AOC_0;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_0_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_0_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_0_GATE;
    sc_signal<bool>         sig_TILE1_AOC_0_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_0_OUTPUT;

    customWave          TILE1_AOC_0_gate_customWave;
    customWave          TILE1_AOC_0_release_customWave;

    DEVICE_CLB_AOC          TILE1_AOC_1;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_1_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_1_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_1_GATE;
    sc_signal<bool>         sig_TILE1_AOC_1_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_1_OUTPUT;

    customWave          TILE1_AOC_1_gate_customWave;
    customWave          TILE1_AOC_1_release_customWave;

    DEVICE_CLB_AOC          TILE1_AOC_2;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_2_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_2_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_2_GATE;
    sc_signal<bool>         sig_TILE1_AOC_2_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_2_OUTPUT;

    customWave          TILE1_AOC_2_gate_customWave;
    customWave          TILE1_AOC_2_release_customWave;

    DEVICE_CLB_AOC          TILE1_AOC_3;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_3_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_3_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_3_GATE;
    sc_signal<bool>         sig_TILE1_AOC_3_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_3_OUTPUT;

    customWave          TILE1_AOC_3_gate_customWave;
    customWave          TILE1_AOC_3_release_customWave;

    DEVICE_CLB_AOC          TILE1_AOC_4;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_4_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_4_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_4_GATE;
    sc_signal<bool>         sig_TILE1_AOC_4_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_4_OUTPUT;

    customWave          TILE1_AOC_4_gate_customWave;
    customWave          TILE1_AOC_4_release_customWave;

    DEVICE_CLB_AOC          TILE1_AOC_5;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_5_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_5_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_5_GATE;
    sc_signal<bool>         sig_TILE1_AOC_5_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_5_OUTPUT;

    customWave          TILE1_AOC_5_gate_customWave;
    customWave          TILE1_AOC_5_release_customWave;

    DEVICE_CLB_AOC          TILE1_AOC_6;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_6_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_6_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_6_GATE;
    sc_signal<bool>         sig_TILE1_AOC_6_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_6_OUTPUT;

    customWave          TILE1_AOC_6_gate_customWave;
    customWave          TILE1_AOC_6_release_customWave;

    DEVICE_CLB_AOC          TILE1_AOC_7;
    sc_signal<sc_uint<16> > sig_TILE1_AOC_7_MUX_CTRL;
    sc_signal<bool>         sig_TILE1_AOC_7_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE1_AOC_7_GATE;
    sc_signal<bool>         sig_TILE1_AOC_7_RELEASE;
    sc_signal<bool>         sig_TILE1_AOC_7_OUTPUT;

    customWave          TILE1_AOC_7_gate_customWave;
    customWave          TILE1_AOC_7_release_customWave;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_0;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_0_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_0_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_1;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_1_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_1_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_2;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_2_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_2_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_3;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_3_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_3_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_4;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_4_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_4_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_5;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_5_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_5_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_6;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_6_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_6_OUT;

    DEVICE_CLB_OUTPUT_LUT  TILE2_OUTLUT_7;
    sc_signal<sc_uint<8> >  sig_TILE2_OUTLUT_7_fn;
    sc_signal<bool>  sig_TILE2_OUTLUT_7_OUT;

    DEVICE_CLB_LUT4        TILE2_LUT_0;
    sc_signal<sc_uint<16> > sig_TILE2_LUT_0_fn;
    sc_signal<bool>         sig_TILE2_LUT_0_OUT;

    DEVICE_CLB_LUT4        TILE2_LUT_1;
    sc_signal<sc_uint<16> > sig_TILE2_LUT_1_fn;
    sc_signal<bool>         sig_TILE2_LUT_1_OUT;

    DEVICE_CLB_LUT4        TILE2_LUT_2;
    sc_signal<sc_uint<16> > sig_TILE2_LUT_2_fn;
    sc_signal<bool>         sig_TILE2_LUT_2_OUT;

    DEVICE_CLB_FSM         TILE2_FSM_0;
    sc_signal<bool>         sig_TILE2_FSM_0_xe0_sel;
    sc_signal<bool>         sig_TILE2_FSM_0_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_0_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_0_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_0_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE2_FSM_0_S0;
    sc_signal<bool>         sig_TILE2_FSM_0_S1;
    sc_signal<bool>         sig_TILE2_FSM_0_OUT;

    DEVICE_CLB_FSM         TILE2_FSM_1;
    sc_signal<bool>         sig_TILE2_FSM_1_xe0_sel;
    sc_signal<bool>         sig_TILE2_FSM_1_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_1_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_1_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_1_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE2_FSM_1_S0;
    sc_signal<bool>         sig_TILE2_FSM_1_S1;
    sc_signal<bool>         sig_TILE2_FSM_1_OUT;

    DEVICE_CLB_FSM         TILE2_FSM_2;
    sc_signal<bool>         sig_TILE2_FSM_2_xe0_sel;
    sc_signal<bool>         sig_TILE2_FSM_2_xe1_sel;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_2_S0_fn;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_2_S1_fn;
    sc_signal<sc_uint<16> > sig_TILE2_FSM_2_OUT_LUT_fn;
    sc_signal<bool>         sig_TILE2_FSM_2_S0;
    sc_signal<bool>         sig_TILE2_FSM_2_S1;
    sc_signal<bool>         sig_TILE2_FSM_2_OUT;

    DEVICE_CLB_COUNTER     TILE2_COUNTER_0;
    sc_signal<bool>         sig_TILE2_COUNTER_0_add_shift_dir;
    sc_signal<bool>         sig_TILE2_COUNTER_0_add_shift_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_0_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE2_COUNTER_0_global_clk_en;
    sc_signal<bool>         sig_TILE2_COUNTER_0_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_0_event_load_val;
    sc_signal<bool>         sig_TILE2_COUNTER_0_glbl_en;
    sc_signal<bool>         sig_TILE2_COUNTER_0_glbl_rst_n;
    sc_signal<bool>         sig_TILE2_COUNTER_0_match_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_0_match1_val;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_0_match2_val;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_0_match1_out;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_0_match2_out;
    sc_signal<bool>         sig_TILE2_COUNTER_0_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_0_hlc_count_load_en;
    sc_signal<bool>         sig_TILE2_COUNTER_0_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE2_COUNTER_0_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_0_count_out;
    sc_signal<bool>         sig_TILE2_COUNTER_0_count_zero;
    sc_signal<bool>         sig_TILE2_COUNTER_0_count_match1;
    sc_signal<bool>         sig_TILE2_COUNTER_0_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE2_COUNTER_0_lfsr_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_0_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE2_COUNTER_0_match1_tap;
    sc_signal<bool>         sig_TILE2_COUNTER_0_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE2_COUNTER_0_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE2_COUNTER_0_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE2_COUNTER_1;
    sc_signal<bool>         sig_TILE2_COUNTER_1_add_shift_dir;
    sc_signal<bool>         sig_TILE2_COUNTER_1_add_shift_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_1_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE2_COUNTER_1_global_clk_en;
    sc_signal<bool>         sig_TILE2_COUNTER_1_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_1_event_load_val;
    sc_signal<bool>         sig_TILE2_COUNTER_1_glbl_en;
    sc_signal<bool>         sig_TILE2_COUNTER_1_glbl_rst_n;
    sc_signal<bool>         sig_TILE2_COUNTER_1_match_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_1_match1_val;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_1_match2_val;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_1_match1_out;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_1_match2_out;
    sc_signal<bool>         sig_TILE2_COUNTER_1_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_1_hlc_count_load_en;
    sc_signal<bool>         sig_TILE2_COUNTER_1_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE2_COUNTER_1_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_1_count_out;
    sc_signal<bool>         sig_TILE2_COUNTER_1_count_zero;
    sc_signal<bool>         sig_TILE2_COUNTER_1_count_match1;
    sc_signal<bool>         sig_TILE2_COUNTER_1_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE2_COUNTER_1_lfsr_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_1_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE2_COUNTER_1_match1_tap;
    sc_signal<bool>         sig_TILE2_COUNTER_1_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE2_COUNTER_1_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE2_COUNTER_1_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_COUNTER     TILE2_COUNTER_2;
    sc_signal<bool>         sig_TILE2_COUNTER_2_add_shift_dir;
    sc_signal<bool>         sig_TILE2_COUNTER_2_add_shift_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_2_add_shift_on_event_en;
    sc_signal<bool>         sig_TILE2_COUNTER_2_global_clk_en;
    sc_signal<bool>         sig_TILE2_COUNTER_2_glbl_load_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_2_event_load_val;
    sc_signal<bool>         sig_TILE2_COUNTER_2_glbl_en;
    sc_signal<bool>         sig_TILE2_COUNTER_2_glbl_rst_n;
    sc_signal<bool>         sig_TILE2_COUNTER_2_match_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_2_match1_val;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_2_match2_val;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_2_match1_out;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_2_match2_out;
    sc_signal<bool>         sig_TILE2_COUNTER_2_glbl_serializer_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_2_hlc_count_load_en;
    sc_signal<bool>         sig_TILE2_COUNTER_2_hlc_match1_load_en;
    sc_signal<bool>         sig_TILE2_COUNTER_2_hlc_match2_load_en;
    sc_signal<sc_uint<32> > sig_TILE2_COUNTER_2_count_out;
    sc_signal<bool>         sig_TILE2_COUNTER_2_count_zero;
    sc_signal<bool>         sig_TILE2_COUNTER_2_count_match1;
    sc_signal<bool>         sig_TILE2_COUNTER_2_count_match2;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>         sig_TILE2_COUNTER_2_lfsr_mode;
    sc_signal<bool>         sig_TILE2_COUNTER_2_match1_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE2_COUNTER_2_match1_tap;
    sc_signal<bool>         sig_TILE2_COUNTER_2_match2_tap_en;
    sc_signal<sc_uint<5> >  sig_TILE2_COUNTER_2_match2_tap;
#endif
#if TYPE == 3
    sc_signal<bool>         sig_TILE2_COUNTER_2_RECONFIG_PIPELINE_EN;
#endif
    DEVICE_CLB_HLC         TILE2_HLC;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_e0;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_e1;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_e2;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_e3;
	sc_signal<sc_uint<12> >     sig_TILE2_HLC_P_curr_instr;

    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_comm_R0_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_comm_R1_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_comm_R2_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_comm_R3_out;

    sc_signal<sc_uint<2> >      sig_TILE2_HLC_P_fifo_read_ptr;
    sc_signal<sc_uint<2> >      sig_TILE2_HLC_P_fifo_write_ptr;

    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_pull_fifo0_out;//There are 2 FIFOs in CLB, push and pull
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_pull_fifo1_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_pull_fifo2_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_pull_fifo3_out;

    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_push_fifo0_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_push_fifo1_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_push_fifo2_out;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_push_fifo3_out;

    sc_signal<bool>             sig_TILE2_HLC_P_fifo_underflow;
    sc_signal<bool>             sig_TILE2_HLC_P_fifo_overflow;

    sc_signal<bool>             sig_TILE2_HLC_P_fifo_refill_enable;

    sc_signal<bool>             sig_TILE2_HLC_P_push_data_en;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_push_data_out;
    sc_signal<bool>             sig_TILE2_HLC_P_pull_data_en;
    sc_signal<bool>             sig_TILE2_HLC_P_set_intr_flag;
    sc_signal<sc_uint<32> >     sig_TILE2_HLC_P_intr_val;

	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_0;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_1;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_2;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_3;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_4;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_5;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_6;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_7;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_8;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_9;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_10;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_11;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_12;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_13;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_14;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_15;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_16;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_17;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_18;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_19;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_20;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_21;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_22;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_23;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_24;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_25;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_26;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_27;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_28;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_29;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_30;
	sc_signal<sc_uint<32> >     sig_TILE2_HLC_hlc_instr_31;
	
    sc_signal<sc_uint<32> >     sig_TILE2_COUNTER_hlc_count_load_val;
#if TYPE == 2 || TYPE == 3
    sc_signal<bool>             sig_TILE2_HLC_ae0;
    sc_signal<bool>             sig_TILE2_HLC_ae1;
    sc_signal<bool>             sig_TILE2_HLC_ae2;
    sc_signal<bool>             sig_TILE2_HLC_ae3;
#endif

#if TYPE == 3
    sc_signal<bool>             sig_TILE2_HLC_RECONFIG_PIPELINE_EN;
    sc_signal<bool>             sig_TILE2_HLC_SPI_EN;
    sc_signal<sc_uint<5> >      sig_TILE2_HLC_SPI_EVENT_TRIGGER;
    sc_signal<sc_uint<5> >      sig_TILE2_HLC_SPI_SHIFT_VAL;
    sc_signal<sc_uint<16> >     sig_TILE2_HLC_SPI_EXPORT_RXBUFF;
#endif

    //
    // Raw inputs
    //
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in0;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in1;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in2;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in3;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in4;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in5;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in6;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_in7;

    //
    // Input configuration
    //
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl0;
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl1;
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl2;
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl3;
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl4;
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl5;
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl6;
    sc_signal<sc_uint<32> > sig_TILE2_BOUNDARY_IN_ctrl7;

    //
    // Inputs after delays from synchronization, pipelining, etc.
    //
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out0;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out1;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out2;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out3;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out4;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out5;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out6;
    sc_signal<bool>         sig_TILE2_BOUNDARY_IN_out7;

    //
    // Outputs from CLB
    //
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out0;
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out1;
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out2;
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out3;
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out4;
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out5;
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out6;
    sc_signal<bool>         sig_TILE2_BOUNDARY_OUT_out7;

    CLB_INPUT_CONDITIONER   TILE2_BOUNDARY_IN;


    DEVICE_CLB_AOC          TILE2_AOC_0;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_0_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_0_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_0_GATE;
    sc_signal<bool>         sig_TILE2_AOC_0_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_0_OUTPUT;

    customWave          TILE2_AOC_0_gate_customWave;
    customWave          TILE2_AOC_0_release_customWave;

    DEVICE_CLB_AOC          TILE2_AOC_1;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_1_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_1_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_1_GATE;
    sc_signal<bool>         sig_TILE2_AOC_1_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_1_OUTPUT;

    customWave          TILE2_AOC_1_gate_customWave;
    customWave          TILE2_AOC_1_release_customWave;

    DEVICE_CLB_AOC          TILE2_AOC_2;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_2_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_2_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_2_GATE;
    sc_signal<bool>         sig_TILE2_AOC_2_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_2_OUTPUT;

    customWave          TILE2_AOC_2_gate_customWave;
    customWave          TILE2_AOC_2_release_customWave;

    DEVICE_CLB_AOC          TILE2_AOC_3;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_3_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_3_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_3_GATE;
    sc_signal<bool>         sig_TILE2_AOC_3_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_3_OUTPUT;

    customWave          TILE2_AOC_3_gate_customWave;
    customWave          TILE2_AOC_3_release_customWave;

    DEVICE_CLB_AOC          TILE2_AOC_4;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_4_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_4_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_4_GATE;
    sc_signal<bool>         sig_TILE2_AOC_4_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_4_OUTPUT;

    customWave          TILE2_AOC_4_gate_customWave;
    customWave          TILE2_AOC_4_release_customWave;

    DEVICE_CLB_AOC          TILE2_AOC_5;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_5_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_5_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_5_GATE;
    sc_signal<bool>         sig_TILE2_AOC_5_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_5_OUTPUT;

    customWave          TILE2_AOC_5_gate_customWave;
    customWave          TILE2_AOC_5_release_customWave;

    DEVICE_CLB_AOC          TILE2_AOC_6;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_6_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_6_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_6_GATE;
    sc_signal<bool>         sig_TILE2_AOC_6_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_6_OUTPUT;

    customWave          TILE2_AOC_6_gate_customWave;
    customWave          TILE2_AOC_6_release_customWave;

    DEVICE_CLB_AOC          TILE2_AOC_7;
    sc_signal<sc_uint<16> > sig_TILE2_AOC_7_MUX_CTRL;
    sc_signal<bool>         sig_TILE2_AOC_7_BOUNDARY_INPUT;
    sc_signal<bool>         sig_TILE2_AOC_7_GATE;
    sc_signal<bool>         sig_TILE2_AOC_7_RELEASE;
    sc_signal<bool>         sig_TILE2_AOC_7_OUTPUT;

    customWave          TILE2_AOC_7_gate_customWave;
    customWave          TILE2_AOC_7_release_customWave;


    sc_trace_file *tf;
    SC_HAS_PROCESS(Top);

    //Top Constructor
    Top(const sc_module_name &name, sc_trace_file *_tf):

        TILE1_OUTLUT_0("TILE1_OUTLUT_0"),
        TILE1_OUTLUT_1("TILE1_OUTLUT_1"),
        TILE1_OUTLUT_2("TILE1_OUTLUT_2"),
        TILE1_OUTLUT_3("TILE1_OUTLUT_3"),
        TILE1_OUTLUT_4("TILE1_OUTLUT_4"),
        TILE1_OUTLUT_5("TILE1_OUTLUT_5"),
        TILE1_OUTLUT_6("TILE1_OUTLUT_6"),
        TILE1_OUTLUT_7("TILE1_OUTLUT_7"),
        TILE1_LUT_0("TILE1_LUT_0"),
        TILE1_LUT_1("TILE1_LUT_1"),
        TILE1_LUT_2("TILE1_LUT_2"),
        TILE1_FSM_0("TILE1_FSM_0"),
        TILE1_FSM_1("TILE1_FSM_1"),
        TILE1_FSM_2("TILE1_FSM_2"),
        TILE1_COUNTER_0("TILE1_COUNTER_0"),
        TILE1_COUNTER_1("TILE1_COUNTER_1"),
        TILE1_COUNTER_2("TILE1_COUNTER_2"),
        TILE1_HLC("TILE1_HLC",
            (unsigned long) TILE1_HLC_R0_INIT,
            (unsigned long) TILE1_HLC_R1_INIT,
            (unsigned long) TILE1_HLC_R2_INIT,
            (unsigned long) TILE1_HLC_R3_INIT,
            (unsigned long) TILE1_HLC_FIFO0_INIT,
            (unsigned long) TILE1_HLC_FIFO1_INIT,
            (unsigned long) TILE1_HLC_FIFO2_INIT,
            (unsigned long) TILE1_HLC_FIFO3_INIT,
            (unsigned long) 0,
            (unsigned long) 0,
            (unsigned long) 0,
            (unsigned long) 0),

        TILE1_BOUNDARY_IN("TILE1_BOUNDARY_IN"),



        TILE1_AOC_0("TILE1_AOC_0"),

        TILE1_AOC_0_gate_customWave("TILE1_AOC_0_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_0_release_customWave("TILE1_AOC_0_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE1_AOC_1("TILE1_AOC_1"),

        TILE1_AOC_1_gate_customWave("TILE1_AOC_1_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_1_release_customWave("TILE1_AOC_1_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE1_AOC_2("TILE1_AOC_2"),

        TILE1_AOC_2_gate_customWave("TILE1_AOC_2_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_2_release_customWave("TILE1_AOC_2_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE1_AOC_3("TILE1_AOC_3"),

        TILE1_AOC_3_gate_customWave("TILE1_AOC_3_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_3_release_customWave("TILE1_AOC_3_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE1_AOC_4("TILE1_AOC_4"),

        TILE1_AOC_4_gate_customWave("TILE1_AOC_4_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_4_release_customWave("TILE1_AOC_4_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE1_AOC_5("TILE1_AOC_5"),

        TILE1_AOC_5_gate_customWave("TILE1_AOC_5_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_5_release_customWave("TILE1_AOC_5_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE1_AOC_6("TILE1_AOC_6"),

        TILE1_AOC_6_gate_customWave("TILE1_AOC_6_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_6_release_customWave("TILE1_AOC_6_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE1_AOC_7("TILE1_AOC_7"),

        TILE1_AOC_7_gate_customWave("TILE1_AOC_7_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE1_AOC_7_release_customWave("TILE1_AOC_7_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),

        TILE2_OUTLUT_0("TILE2_OUTLUT_0"),
        TILE2_OUTLUT_1("TILE2_OUTLUT_1"),
        TILE2_OUTLUT_2("TILE2_OUTLUT_2"),
        TILE2_OUTLUT_3("TILE2_OUTLUT_3"),
        TILE2_OUTLUT_4("TILE2_OUTLUT_4"),
        TILE2_OUTLUT_5("TILE2_OUTLUT_5"),
        TILE2_OUTLUT_6("TILE2_OUTLUT_6"),
        TILE2_OUTLUT_7("TILE2_OUTLUT_7"),
        TILE2_LUT_0("TILE2_LUT_0"),
        TILE2_LUT_1("TILE2_LUT_1"),
        TILE2_LUT_2("TILE2_LUT_2"),
        TILE2_FSM_0("TILE2_FSM_0"),
        TILE2_FSM_1("TILE2_FSM_1"),
        TILE2_FSM_2("TILE2_FSM_2"),
        TILE2_COUNTER_0("TILE2_COUNTER_0"),
        TILE2_COUNTER_1("TILE2_COUNTER_1"),
        TILE2_COUNTER_2("TILE2_COUNTER_2"),
        TILE2_HLC("TILE2_HLC",
            (unsigned long) TILE2_HLC_R0_INIT,
            (unsigned long) TILE2_HLC_R1_INIT,
            (unsigned long) TILE2_HLC_R2_INIT,
            (unsigned long) TILE2_HLC_R3_INIT,
            (unsigned long) TILE2_HLC_FIFO0_INIT,
            (unsigned long) TILE2_HLC_FIFO1_INIT,
            (unsigned long) TILE2_HLC_FIFO2_INIT,
            (unsigned long) TILE2_HLC_FIFO3_INIT,
            (unsigned long) 0,
            (unsigned long) 0,
            (unsigned long) 0,
            (unsigned long) 0),

        TILE2_BOUNDARY_IN("TILE2_BOUNDARY_IN"),



        TILE2_AOC_0("TILE2_AOC_0"),

        TILE2_AOC_0_gate_customWave("TILE2_AOC_0_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_0_release_customWave("TILE2_AOC_0_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE2_AOC_1("TILE2_AOC_1"),

        TILE2_AOC_1_gate_customWave("TILE2_AOC_1_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_1_release_customWave("TILE2_AOC_1_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE2_AOC_2("TILE2_AOC_2"),

        TILE2_AOC_2_gate_customWave("TILE2_AOC_2_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_2_release_customWave("TILE2_AOC_2_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE2_AOC_3("TILE2_AOC_3"),

        TILE2_AOC_3_gate_customWave("TILE2_AOC_3_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_3_release_customWave("TILE2_AOC_3_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE2_AOC_4("TILE2_AOC_4"),

        TILE2_AOC_4_gate_customWave("TILE2_AOC_4_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_4_release_customWave("TILE2_AOC_4_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE2_AOC_5("TILE2_AOC_5"),

        TILE2_AOC_5_gate_customWave("TILE2_AOC_5_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_5_release_customWave("TILE2_AOC_5_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE2_AOC_6("TILE2_AOC_6"),

        TILE2_AOC_6_gate_customWave("TILE2_AOC_6_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_6_release_customWave("TILE2_AOC_6_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),


        TILE2_AOC_7("TILE2_AOC_7"),

        TILE2_AOC_7_gate_customWave("TILE2_AOC_7_gate_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
        TILE2_AOC_7_release_customWave("TILE2_AOC_7_release_customWave", "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),

        sc_module(name),
        sc_top_clock("sc_top_clock", 8, SC_PS)
    {
        SC_THREAD(reset_generator);
        tf = _tf;

        TILE1_OUTLUT_0.i0        (sc_zero);
        TILE1_OUTLUT_0.i1        (sc_zero);
        TILE1_OUTLUT_0.i2        (sc_zero);

        TILE1_OUTLUT_0.OUT      (sig_TILE1_OUTLUT_0_OUT);
        TILE1_OUTLUT_0.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_0_fn);

        sc_trace(tf, TILE1_OUTLUT_0.i0,  "TILE1_OUTLUT_0.TILE1_OUTLUT_0_input0");
        sc_trace(tf, TILE1_OUTLUT_0.i1,  "TILE1_OUTLUT_0.TILE1_OUTLUT_0_input1");
        sc_trace(tf, TILE1_OUTLUT_0.i2,  "TILE1_OUTLUT_0.TILE1_OUTLUT_0_input2");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_OUTLUT_0.TILE1_OUTLUT_0_output");
        sc_trace(tf, TILE1_OUTLUT_0.OUTPUT_LUT_fn,  "TILE1_OUTLUT_0.TILE1_OUTLUT_0_output_equation");

        TILE1_OUTLUT_1.i0        (sc_zero);
        TILE1_OUTLUT_1.i1        (sc_zero);
        TILE1_OUTLUT_1.i2        (sc_zero);

        TILE1_OUTLUT_1.OUT      (sig_TILE1_OUTLUT_1_OUT);
        TILE1_OUTLUT_1.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_1_fn);

        sc_trace(tf, TILE1_OUTLUT_1.i0,  "TILE1_OUTLUT_1.TILE1_OUTLUT_1_input0");
        sc_trace(tf, TILE1_OUTLUT_1.i1,  "TILE1_OUTLUT_1.TILE1_OUTLUT_1_input1");
        sc_trace(tf, TILE1_OUTLUT_1.i2,  "TILE1_OUTLUT_1.TILE1_OUTLUT_1_input2");
        sc_trace(tf, TILE1_OUTLUT_1.OUT, "TILE1_OUTLUT_1.TILE1_OUTLUT_1_output");
        sc_trace(tf, TILE1_OUTLUT_1.OUTPUT_LUT_fn,  "TILE1_OUTLUT_1.TILE1_OUTLUT_1_output_equation");

        TILE1_OUTLUT_2.i0        (sc_zero);
        TILE1_OUTLUT_2.i1        (sc_zero);
        TILE1_OUTLUT_2.i2        (sc_zero);

        TILE1_OUTLUT_2.OUT      (sig_TILE1_OUTLUT_2_OUT);
        TILE1_OUTLUT_2.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_2_fn);

        sc_trace(tf, TILE1_OUTLUT_2.i0,  "TILE1_OUTLUT_2.TILE1_OUTLUT_2_input0");
        sc_trace(tf, TILE1_OUTLUT_2.i1,  "TILE1_OUTLUT_2.TILE1_OUTLUT_2_input1");
        sc_trace(tf, TILE1_OUTLUT_2.i2,  "TILE1_OUTLUT_2.TILE1_OUTLUT_2_input2");
        sc_trace(tf, TILE1_OUTLUT_2.OUT, "TILE1_OUTLUT_2.TILE1_OUTLUT_2_output");
        sc_trace(tf, TILE1_OUTLUT_2.OUTPUT_LUT_fn,  "TILE1_OUTLUT_2.TILE1_OUTLUT_2_output_equation");

        TILE1_OUTLUT_3.i0        (sc_zero);
        TILE1_OUTLUT_3.i1        (sc_zero);
        TILE1_OUTLUT_3.i2        (sc_zero);

        TILE1_OUTLUT_3.OUT      (sig_TILE1_OUTLUT_3_OUT);
        TILE1_OUTLUT_3.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_3_fn);

        sc_trace(tf, TILE1_OUTLUT_3.i0,  "TILE1_OUTLUT_3.TILE1_OUTLUT_3_input0");
        sc_trace(tf, TILE1_OUTLUT_3.i1,  "TILE1_OUTLUT_3.TILE1_OUTLUT_3_input1");
        sc_trace(tf, TILE1_OUTLUT_3.i2,  "TILE1_OUTLUT_3.TILE1_OUTLUT_3_input2");
        sc_trace(tf, TILE1_OUTLUT_3.OUT, "TILE1_OUTLUT_3.TILE1_OUTLUT_3_output");
        sc_trace(tf, TILE1_OUTLUT_3.OUTPUT_LUT_fn,  "TILE1_OUTLUT_3.TILE1_OUTLUT_3_output_equation");

        TILE1_OUTLUT_4.i0        (sc_zero);
        TILE1_OUTLUT_4.i1        (sc_zero);
        TILE1_OUTLUT_4.i2        (sc_zero);

        TILE1_OUTLUT_4.OUT      (sig_TILE1_OUTLUT_4_OUT);
        TILE1_OUTLUT_4.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_4_fn);

        sc_trace(tf, TILE1_OUTLUT_4.i0,  "TILE1_OUTLUT_4.TILE1_OUTLUT_4_input0");
        sc_trace(tf, TILE1_OUTLUT_4.i1,  "TILE1_OUTLUT_4.TILE1_OUTLUT_4_input1");
        sc_trace(tf, TILE1_OUTLUT_4.i2,  "TILE1_OUTLUT_4.TILE1_OUTLUT_4_input2");
        sc_trace(tf, TILE1_OUTLUT_4.OUT, "TILE1_OUTLUT_4.TILE1_OUTLUT_4_output");
        sc_trace(tf, TILE1_OUTLUT_4.OUTPUT_LUT_fn,  "TILE1_OUTLUT_4.TILE1_OUTLUT_4_output_equation");

        TILE1_OUTLUT_5.i0        (sc_zero);
        TILE1_OUTLUT_5.i1        (sc_zero);
        TILE1_OUTLUT_5.i2        (sc_zero);

        TILE1_OUTLUT_5.OUT      (sig_TILE1_OUTLUT_5_OUT);
        TILE1_OUTLUT_5.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_5_fn);

        sc_trace(tf, TILE1_OUTLUT_5.i0,  "TILE1_OUTLUT_5.TILE1_OUTLUT_5_input0");
        sc_trace(tf, TILE1_OUTLUT_5.i1,  "TILE1_OUTLUT_5.TILE1_OUTLUT_5_input1");
        sc_trace(tf, TILE1_OUTLUT_5.i2,  "TILE1_OUTLUT_5.TILE1_OUTLUT_5_input2");
        sc_trace(tf, TILE1_OUTLUT_5.OUT, "TILE1_OUTLUT_5.TILE1_OUTLUT_5_output");
        sc_trace(tf, TILE1_OUTLUT_5.OUTPUT_LUT_fn,  "TILE1_OUTLUT_5.TILE1_OUTLUT_5_output_equation");

        TILE1_OUTLUT_6.i0        (sc_zero);
        TILE1_OUTLUT_6.i1        (sc_zero);
        TILE1_OUTLUT_6.i2        (sc_zero);

        TILE1_OUTLUT_6.OUT      (sig_TILE1_OUTLUT_6_OUT);
        TILE1_OUTLUT_6.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_6_fn);

        sc_trace(tf, TILE1_OUTLUT_6.i0,  "TILE1_OUTLUT_6.TILE1_OUTLUT_6_input0");
        sc_trace(tf, TILE1_OUTLUT_6.i1,  "TILE1_OUTLUT_6.TILE1_OUTLUT_6_input1");
        sc_trace(tf, TILE1_OUTLUT_6.i2,  "TILE1_OUTLUT_6.TILE1_OUTLUT_6_input2");
        sc_trace(tf, TILE1_OUTLUT_6.OUT, "TILE1_OUTLUT_6.TILE1_OUTLUT_6_output");
        sc_trace(tf, TILE1_OUTLUT_6.OUTPUT_LUT_fn,  "TILE1_OUTLUT_6.TILE1_OUTLUT_6_output_equation");

        TILE1_OUTLUT_7.i0        (sc_zero);
        TILE1_OUTLUT_7.i1        (sc_zero);
        TILE1_OUTLUT_7.i2        (sc_zero);

        TILE1_OUTLUT_7.OUT      (sig_TILE1_OUTLUT_7_OUT);
        TILE1_OUTLUT_7.OUTPUT_LUT_fn (sig_TILE1_OUTLUT_7_fn);

        sc_trace(tf, TILE1_OUTLUT_7.i0,  "TILE1_OUTLUT_7.TILE1_OUTLUT_7_input0");
        sc_trace(tf, TILE1_OUTLUT_7.i1,  "TILE1_OUTLUT_7.TILE1_OUTLUT_7_input1");
        sc_trace(tf, TILE1_OUTLUT_7.i2,  "TILE1_OUTLUT_7.TILE1_OUTLUT_7_input2");
        sc_trace(tf, TILE1_OUTLUT_7.OUT, "TILE1_OUTLUT_7.TILE1_OUTLUT_7_output");
        sc_trace(tf, TILE1_OUTLUT_7.OUTPUT_LUT_fn,  "TILE1_OUTLUT_7.TILE1_OUTLUT_7_output_equation");

        TILE1_LUT_0.i0        (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_LUT_0.i1        (sig_TILE1_BOUNDARY_IN_out2);
        TILE1_LUT_0.i2        (sig_TILE1_BOUNDARY_IN_out3);
        TILE1_LUT_0.i3        (sc_zero);
        TILE1_LUT_0.OUT      (sig_TILE1_LUT_0_OUT);
        TILE1_LUT_0.LUT4_fn  (sig_TILE1_LUT_0_fn);

        sc_trace(tf, TILE1_LUT_0.i0,  "TILE1_LUT_0.TILE1_LUT_0_input0");
        sc_trace(tf, TILE1_LUT_0.i1,  "TILE1_LUT_0.TILE1_LUT_0_input1");
        sc_trace(tf, TILE1_LUT_0.i2,  "TILE1_LUT_0.TILE1_LUT_0_input2");
        sc_trace(tf, TILE1_LUT_0.i3,  "TILE1_LUT_0.TILE1_LUT_0_input3");
        sc_trace(tf, TILE1_LUT_0.OUT, "TILE1_LUT_0.TILE1_LUT_0_output");
        sc_trace(tf, TILE1_LUT_0.LUT4_fn, "TILE1_LUT_0.TILE1_LUT_0_output_equation");

        TILE1_LUT_1.i0        (sig_TILE1_COUNTER_2_count_match2);
        TILE1_LUT_1.i1        (sig_TILE1_COUNTER_1_count_match1);
        TILE1_LUT_1.i2        (sig_TILE1_COUNTER_1_count_match2);
        TILE1_LUT_1.i3        (sig_TILE1_FSM_0_OUT);
        TILE1_LUT_1.OUT      (sig_TILE1_LUT_1_OUT);
        TILE1_LUT_1.LUT4_fn  (sig_TILE1_LUT_1_fn);

        sc_trace(tf, TILE1_LUT_1.i0,  "TILE1_LUT_1.TILE1_LUT_1_input0");
        sc_trace(tf, TILE1_LUT_1.i1,  "TILE1_LUT_1.TILE1_LUT_1_input1");
        sc_trace(tf, TILE1_LUT_1.i2,  "TILE1_LUT_1.TILE1_LUT_1_input2");
        sc_trace(tf, TILE1_LUT_1.i3,  "TILE1_LUT_1.TILE1_LUT_1_input3");
        sc_trace(tf, TILE1_LUT_1.OUT, "TILE1_LUT_1.TILE1_LUT_1_output");
        sc_trace(tf, TILE1_LUT_1.LUT4_fn, "TILE1_LUT_1.TILE1_LUT_1_output_equation");

        TILE1_LUT_2.i0        (sig_TILE1_COUNTER_2_count_match2);
        TILE1_LUT_2.i1        (sig_TILE1_FSM_0_OUT);
        TILE1_LUT_2.i2        (sc_zero);
        TILE1_LUT_2.i3        (sc_zero);
        TILE1_LUT_2.OUT      (sig_TILE1_LUT_2_OUT);
        TILE1_LUT_2.LUT4_fn  (sig_TILE1_LUT_2_fn);

        sc_trace(tf, TILE1_LUT_2.i0,  "TILE1_LUT_2.TILE1_LUT_2_input0");
        sc_trace(tf, TILE1_LUT_2.i1,  "TILE1_LUT_2.TILE1_LUT_2_input1");
        sc_trace(tf, TILE1_LUT_2.i2,  "TILE1_LUT_2.TILE1_LUT_2_input2");
        sc_trace(tf, TILE1_LUT_2.i3,  "TILE1_LUT_2.TILE1_LUT_2_input3");
        sc_trace(tf, TILE1_LUT_2.OUT, "TILE1_LUT_2.TILE1_LUT_2_output");
        sc_trace(tf, TILE1_LUT_2.LUT4_fn, "TILE1_LUT_2.TILE1_LUT_2_output_equation");

        TILE1_FSM_0.e0        (sig_TILE1_COUNTER_0_count_match1);
        TILE1_FSM_0.e1        (sig_TILE1_LUT_0_OUT);
        TILE1_FSM_0.xe0        (sc_zero);
        TILE1_FSM_0.xe1        (sc_zero);
        TILE1_FSM_0.clk      (sc_top_clock);
        TILE1_FSM_0.glbl_en  (sc_top_enable);
        TILE1_FSM_0.glbl_rst_n(sc_top_reset);
        TILE1_FSM_0.EXT_SEL0 (sig_TILE1_FSM_0_xe0_sel);
        TILE1_FSM_0.EXT_SEL1 (sig_TILE1_FSM_0_xe1_sel);
        TILE1_FSM_0.S0_fn    (sig_TILE1_FSM_0_S0_fn);
        TILE1_FSM_0.S1_fn    (sig_TILE1_FSM_0_S1_fn);
        TILE1_FSM_0.OUT_LUT_fn(sig_TILE1_FSM_0_OUT_LUT_fn);
        TILE1_FSM_0.S0       (sig_TILE1_FSM_0_S0);
        TILE1_FSM_0.S1       (sig_TILE1_FSM_0_S1);
        TILE1_FSM_0.OUT      (sig_TILE1_FSM_0_OUT);

        sc_trace(tf, TILE1_FSM_0.clk,        "TILE1_FSM_0.TILE1_FSM_0_clock");
        sc_trace(tf, TILE1_FSM_0.glbl_en,    "TILE1_FSM_0.TILE1_FSM_0_global_en");
        sc_trace(tf, TILE1_FSM_0.glbl_rst_n, "TILE1_FSM_0.TILE1_FSM_0_global_reset");
        sc_trace(tf, TILE1_FSM_0.e0,         "TILE1_FSM_0.TILE1_FSM_0_external_input0");
        sc_trace(tf, TILE1_FSM_0.e1,         "TILE1_FSM_0.TILE1_FSM_0_external_input1");
        sc_trace(tf, TILE1_FSM_0.xe0,        "TILE1_FSM_0.TILE1_FSM_0_extra_external_input0");
        sc_trace(tf, TILE1_FSM_0.xe1,        "TILE1_FSM_0.TILE1_FSM_0_extra_external_input1");
        sc_trace(tf, TILE1_FSM_0.EXT_SEL0,   "TILE1_FSM_0.TILE1_FSM_0_extra_external_input_select0");
        sc_trace(tf, TILE1_FSM_0.EXT_SEL1,   "TILE1_FSM_0.TILE1_FSM_0_extra_external_input_select1");
        sc_trace(tf, TILE1_FSM_0.S0_fn,      "TILE1_FSM_0.TILE1_FSM_0_state0_equation_output");
        sc_trace(tf, TILE1_FSM_0.S1_fn,      "TILE1_FSM_0.TILE1_FSM_0_state1_equation_output");
        sc_trace(tf, TILE1_FSM_0.OUT_LUT_fn, "TILE1_FSM_0.TILE1_FSM_0_LUT_output_equation");
        sc_trace(tf, TILE1_FSM_0.S0,         "TILE1_FSM_0.TILE1_FSM_0_fsm_s0_output");
        sc_trace(tf, TILE1_FSM_0.S1,         "TILE1_FSM_0.TILE1_FSM_0_fsm_s1_output");
        sc_trace(tf, TILE1_FSM_0.OUT,        "TILE1_FSM_0.TILE1_FSM_0_fsm_lut_output");

        TILE1_FSM_1.e0        (sig_TILE1_COUNTER_2_count_match2);
        TILE1_FSM_1.e1        (sig_TILE1_FSM_0_OUT);
        TILE1_FSM_1.xe0        (sc_zero);
        TILE1_FSM_1.xe1        (sc_zero);
        TILE1_FSM_1.clk      (sc_top_clock);
        TILE1_FSM_1.glbl_en  (sc_top_enable);
        TILE1_FSM_1.glbl_rst_n(sc_top_reset);
        TILE1_FSM_1.EXT_SEL0 (sig_TILE1_FSM_1_xe0_sel);
        TILE1_FSM_1.EXT_SEL1 (sig_TILE1_FSM_1_xe1_sel);
        TILE1_FSM_1.S0_fn    (sig_TILE1_FSM_1_S0_fn);
        TILE1_FSM_1.S1_fn    (sig_TILE1_FSM_1_S1_fn);
        TILE1_FSM_1.OUT_LUT_fn(sig_TILE1_FSM_1_OUT_LUT_fn);
        TILE1_FSM_1.S0       (sig_TILE1_FSM_1_S0);
        TILE1_FSM_1.S1       (sig_TILE1_FSM_1_S1);
        TILE1_FSM_1.OUT      (sig_TILE1_FSM_1_OUT);

        sc_trace(tf, TILE1_FSM_1.clk,        "TILE1_FSM_1.TILE1_FSM_1_clock");
        sc_trace(tf, TILE1_FSM_1.glbl_en,    "TILE1_FSM_1.TILE1_FSM_1_global_en");
        sc_trace(tf, TILE1_FSM_1.glbl_rst_n, "TILE1_FSM_1.TILE1_FSM_1_global_reset");
        sc_trace(tf, TILE1_FSM_1.e0,         "TILE1_FSM_1.TILE1_FSM_1_external_input0");
        sc_trace(tf, TILE1_FSM_1.e1,         "TILE1_FSM_1.TILE1_FSM_1_external_input1");
        sc_trace(tf, TILE1_FSM_1.xe0,        "TILE1_FSM_1.TILE1_FSM_1_extra_external_input0");
        sc_trace(tf, TILE1_FSM_1.xe1,        "TILE1_FSM_1.TILE1_FSM_1_extra_external_input1");
        sc_trace(tf, TILE1_FSM_1.EXT_SEL0,   "TILE1_FSM_1.TILE1_FSM_1_extra_external_input_select0");
        sc_trace(tf, TILE1_FSM_1.EXT_SEL1,   "TILE1_FSM_1.TILE1_FSM_1_extra_external_input_select1");
        sc_trace(tf, TILE1_FSM_1.S0_fn,      "TILE1_FSM_1.TILE1_FSM_1_state0_equation_output");
        sc_trace(tf, TILE1_FSM_1.S1_fn,      "TILE1_FSM_1.TILE1_FSM_1_state1_equation_output");
        sc_trace(tf, TILE1_FSM_1.OUT_LUT_fn, "TILE1_FSM_1.TILE1_FSM_1_LUT_output_equation");
        sc_trace(tf, TILE1_FSM_1.S0,         "TILE1_FSM_1.TILE1_FSM_1_fsm_s0_output");
        sc_trace(tf, TILE1_FSM_1.S1,         "TILE1_FSM_1.TILE1_FSM_1_fsm_s1_output");
        sc_trace(tf, TILE1_FSM_1.OUT,        "TILE1_FSM_1.TILE1_FSM_1_fsm_lut_output");

        TILE1_FSM_2.e0        (sig_TILE1_COUNTER_0_count_match1);
        TILE1_FSM_2.e1        (sig_TILE1_FSM_0_OUT);
        TILE1_FSM_2.xe0        (sc_zero);
        TILE1_FSM_2.xe1        (sc_zero);
        TILE1_FSM_2.clk      (sc_top_clock);
        TILE1_FSM_2.glbl_en  (sc_top_enable);
        TILE1_FSM_2.glbl_rst_n(sc_top_reset);
        TILE1_FSM_2.EXT_SEL0 (sig_TILE1_FSM_2_xe0_sel);
        TILE1_FSM_2.EXT_SEL1 (sig_TILE1_FSM_2_xe1_sel);
        TILE1_FSM_2.S0_fn    (sig_TILE1_FSM_2_S0_fn);
        TILE1_FSM_2.S1_fn    (sig_TILE1_FSM_2_S1_fn);
        TILE1_FSM_2.OUT_LUT_fn(sig_TILE1_FSM_2_OUT_LUT_fn);
        TILE1_FSM_2.S0       (sig_TILE1_FSM_2_S0);
        TILE1_FSM_2.S1       (sig_TILE1_FSM_2_S1);
        TILE1_FSM_2.OUT      (sig_TILE1_FSM_2_OUT);

        sc_trace(tf, TILE1_FSM_2.clk,        "TILE1_FSM_2.TILE1_FSM_2_clock");
        sc_trace(tf, TILE1_FSM_2.glbl_en,    "TILE1_FSM_2.TILE1_FSM_2_global_en");
        sc_trace(tf, TILE1_FSM_2.glbl_rst_n, "TILE1_FSM_2.TILE1_FSM_2_global_reset");
        sc_trace(tf, TILE1_FSM_2.e0,         "TILE1_FSM_2.TILE1_FSM_2_external_input0");
        sc_trace(tf, TILE1_FSM_2.e1,         "TILE1_FSM_2.TILE1_FSM_2_external_input1");
        sc_trace(tf, TILE1_FSM_2.xe0,        "TILE1_FSM_2.TILE1_FSM_2_extra_external_input0");
        sc_trace(tf, TILE1_FSM_2.xe1,        "TILE1_FSM_2.TILE1_FSM_2_extra_external_input1");
        sc_trace(tf, TILE1_FSM_2.EXT_SEL0,   "TILE1_FSM_2.TILE1_FSM_2_extra_external_input_select0");
        sc_trace(tf, TILE1_FSM_2.EXT_SEL1,   "TILE1_FSM_2.TILE1_FSM_2_extra_external_input_select1");
        sc_trace(tf, TILE1_FSM_2.S0_fn,      "TILE1_FSM_2.TILE1_FSM_2_state0_equation_output");
        sc_trace(tf, TILE1_FSM_2.S1_fn,      "TILE1_FSM_2.TILE1_FSM_2_state1_equation_output");
        sc_trace(tf, TILE1_FSM_2.OUT_LUT_fn, "TILE1_FSM_2.TILE1_FSM_2_LUT_output_equation");
        sc_trace(tf, TILE1_FSM_2.S0,         "TILE1_FSM_2.TILE1_FSM_2_fsm_s0_output");
        sc_trace(tf, TILE1_FSM_2.S1,         "TILE1_FSM_2.TILE1_FSM_2_fsm_s1_output");
        sc_trace(tf, TILE1_FSM_2.OUT,        "TILE1_FSM_2.TILE1_FSM_2_fsm_lut_output");

        TILE1_COUNTER_0.reset        (sig_TILE1_LUT_0_OUT);
        TILE1_COUNTER_0.event        (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_COUNTER_0.mode0        (sig_TILE1_BOUNDARY_IN_out2);
        TILE1_COUNTER_0.mode1        (sc_one);
        TILE1_COUNTER_0.clk                  (sc_top_clock);
        TILE1_COUNTER_0.glbl_en              (sc_top_enable);
        TILE1_COUNTER_0.glbl_rst_n           (sc_top_reset);
        TILE1_COUNTER_0.add_shift_dir        (sig_TILE1_COUNTER_0_add_shift_dir);
        TILE1_COUNTER_0.add_shift_mode       (sig_TILE1_COUNTER_0_add_shift_mode);
        TILE1_COUNTER_0.add_shift_on_event_en(sig_TILE1_COUNTER_0_add_shift_on_event_en);
        TILE1_COUNTER_0.global_clk_en        (sig_TILE1_COUNTER_0_global_clk_en);//Unused
        TILE1_COUNTER_0.glbl_load_en         (sig_TILE1_COUNTER_0_glbl_load_en);//Unused
        TILE1_COUNTER_0.event_load_val       (sig_TILE1_COUNTER_0_event_load_val);
        TILE1_COUNTER_0.match_en             (sig_TILE1_COUNTER_0_match_en);//Unused
        TILE1_COUNTER_0.match1_val           (sig_TILE1_COUNTER_0_match1_val);
        TILE1_COUNTER_0.match2_val           (sig_TILE1_COUNTER_0_match2_val);
        TILE1_COUNTER_0.match1_reg_out       (sig_TILE1_COUNTER_0_match1_out);
        TILE1_COUNTER_0.match2_reg_out       (sig_TILE1_COUNTER_0_match2_out);
        TILE1_COUNTER_0.glbl_serializer_mode (sig_TILE1_COUNTER_0_glbl_serializer_mode);
        TILE1_COUNTER_0.hlc_count_load_val   (sig_TILE1_COUNTER_hlc_count_load_val);
        TILE1_COUNTER_0.hlc_count_load_en    (sig_TILE1_COUNTER_0_hlc_count_load_en);
        TILE1_COUNTER_0.hlc_match1_load_en   (sig_TILE1_COUNTER_0_hlc_match1_load_en);
        TILE1_COUNTER_0.hlc_match2_load_en   (sig_TILE1_COUNTER_0_hlc_match2_load_en);
        TILE1_COUNTER_0.count_out            (sig_TILE1_COUNTER_0_count_out);
        TILE1_COUNTER_0.count_zero           (sig_TILE1_COUNTER_0_count_zero);
        TILE1_COUNTER_0.count_match1         (sig_TILE1_COUNTER_0_count_match1);
        TILE1_COUNTER_0.count_match2         (sig_TILE1_COUNTER_0_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE1_COUNTER_0.lfsr_mode               (sig_TILE1_COUNTER_0_lfsr_mode);
        TILE1_COUNTER_0.match1_tap_en           (sig_TILE1_COUNTER_0_match1_tap_en);
        TILE1_COUNTER_0.match1_tap              (sig_TILE1_COUNTER_0_match1_tap);
        TILE1_COUNTER_0.match2_tap_en           (sig_TILE1_COUNTER_0_match2_tap_en);
        TILE1_COUNTER_0.match2_tap              (sig_TILE1_COUNTER_0_match2_tap);
#endif
#if TYPE == 3
        TILE1_COUNTER_0.RECONFIG_PIPELINE_EN    (sig_TILE1_COUNTER_0_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE1_COUNTER_0.clk,                 "TILE1_COUNTER_0.TILE1_COUNTER_0_clock");
        sc_trace(tf, TILE1_COUNTER_0.glbl_en,             "TILE1_COUNTER_0.TILE1_COUNTER_0_global_en");
        sc_trace(tf, TILE1_COUNTER_0.glbl_rst_n,          "TILE1_COUNTER_0.TILE1_COUNTER_0_global_reset");
        sc_trace(tf, TILE1_COUNTER_0.add_shift_dir,       "TILE1_COUNTER_0.TILE1_COUNTER_0_add_or_shift_dir");
        sc_trace(tf, TILE1_COUNTER_0.add_shift_mode,      "TILE1_COUNTER_0.TILE1_COUNTER_0_add_or_shift_mode");
        sc_trace(tf, TILE1_COUNTER_0.add_shift_on_event_en, "TILE1_COUNTER_0.TILE1_COUNTER_0_add_or_shift_on_event_en");
        sc_trace(tf, TILE1_COUNTER_0.event_load_val,      "TILE1_COUNTER_0.TILE1_COUNTER_0_event_load_val");
        sc_trace(tf, TILE1_COUNTER_0.match1_reg_out,      "TILE1_COUNTER_0.TILE1_COUNTER_0_match1_val");
        sc_trace(tf, TILE1_COUNTER_0.match2_reg_out,      "TILE1_COUNTER_0.TILE1_COUNTER_0_match2_val");
        sc_trace(tf, TILE1_COUNTER_0.glbl_serializer_mode,"TILE1_COUNTER_0.TILE1_COUNTER_0_global_serializer_en");
        sc_trace(tf, TILE1_COUNTER_0.hlc_count_load_val,  "TILE1_COUNTER_0.TILE1_COUNTER_0_hlc_counter_load_val");
        sc_trace(tf, TILE1_COUNTER_0.hlc_count_load_en,   "TILE1_COUNTER_0.TILE1_COUNTER_0_hlc_counter_load_en");
        sc_trace(tf, TILE1_COUNTER_0.hlc_match1_load_en,  "TILE1_COUNTER_0.TILE1_COUNTER_0_hlc_match1_load_en");
        sc_trace(tf, TILE1_COUNTER_0.hlc_match2_load_en,  "TILE1_COUNTER_0.TILE1_COUNTER_0_hlc_match2_load_en");
        sc_trace(tf, TILE1_COUNTER_0.count_out,           "TILE1_COUNTER_0.TILE1_COUNTER_0_counter_output");
        sc_trace(tf, TILE1_COUNTER_0.count_zero,          "TILE1_COUNTER_0.TILE1_COUNTER_0_counter_equals_zero");
        sc_trace(tf, TILE1_COUNTER_0.count_match1,        "TILE1_COUNTER_0.TILE1_COUNTER_0_counter_equals_match1");
        sc_trace(tf, TILE1_COUNTER_0.count_match2,        "TILE1_COUNTER_0.TILE1_COUNTER_0_counter_equals_match2");
        sc_trace(tf, TILE1_COUNTER_0.reset,               "TILE1_COUNTER_0.TILE1_COUNTER_0_counter_reset");
        sc_trace(tf, TILE1_COUNTER_0.event,               "TILE1_COUNTER_0.TILE1_COUNTER_0_event");
        sc_trace(tf, TILE1_COUNTER_0.mode0,        	 "TILE1_COUNTER_0.TILE1_COUNTER_0_mode0");
        sc_trace(tf, TILE1_COUNTER_0.mode1,        	 "TILE1_COUNTER_0.TILE1_COUNTER_0_mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE1_COUNTER_0.lfsr_mode    ,     "TILE1_COUNTER_0.TILE1_COUNTER_0_lfsr_en");
        sc_trace(tf, TILE1_COUNTER_0.match1_tap_en,     "TILE1_COUNTER_0.TILE1_COUNTER_0_match1_tap_en");
        sc_trace(tf, TILE1_COUNTER_0.match1_tap   ,     "TILE1_COUNTER_0.TILE1_COUNTER_0_match1_tap");
        sc_trace(tf, TILE1_COUNTER_0.match2_tap_en,     "TILE1_COUNTER_0.TILE1_COUNTER_0_match2_tap_en");
        sc_trace(tf, TILE1_COUNTER_0.match2_tap   ,     "TILE1_COUNTER_0.TILE1_COUNTER_0_match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE1_COUNTER_0.RECONFIG_PIPELINE_EN,     "TILE1_COUNTER_0.TILE1_COUNTER_0_reconfig_pipeline_en");
#endif
        TILE1_COUNTER_1.reset        (sig_TILE1_LUT_2_OUT);
        TILE1_COUNTER_1.event        (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_COUNTER_1.mode0        (sig_TILE1_BOUNDARY_IN_out2);
        TILE1_COUNTER_1.mode1        (sc_one);
        TILE1_COUNTER_1.clk                  (sc_top_clock);
        TILE1_COUNTER_1.glbl_en              (sc_top_enable);
        TILE1_COUNTER_1.glbl_rst_n           (sc_top_reset);
        TILE1_COUNTER_1.add_shift_dir        (sig_TILE1_COUNTER_1_add_shift_dir);
        TILE1_COUNTER_1.add_shift_mode       (sig_TILE1_COUNTER_1_add_shift_mode);
        TILE1_COUNTER_1.add_shift_on_event_en(sig_TILE1_COUNTER_1_add_shift_on_event_en);
        TILE1_COUNTER_1.global_clk_en        (sig_TILE1_COUNTER_1_global_clk_en);//Unused
        TILE1_COUNTER_1.glbl_load_en         (sig_TILE1_COUNTER_1_glbl_load_en);//Unused
        TILE1_COUNTER_1.event_load_val       (sig_TILE1_COUNTER_1_event_load_val);
        TILE1_COUNTER_1.match_en             (sig_TILE1_COUNTER_1_match_en);//Unused
        TILE1_COUNTER_1.match1_val           (sig_TILE1_COUNTER_1_match1_val);
        TILE1_COUNTER_1.match2_val           (sig_TILE1_COUNTER_1_match2_val);
        TILE1_COUNTER_1.match1_reg_out       (sig_TILE1_COUNTER_1_match1_out);
        TILE1_COUNTER_1.match2_reg_out       (sig_TILE1_COUNTER_1_match2_out);
        TILE1_COUNTER_1.glbl_serializer_mode (sig_TILE1_COUNTER_1_glbl_serializer_mode);
        TILE1_COUNTER_1.hlc_count_load_val   (sig_TILE1_COUNTER_hlc_count_load_val);
        TILE1_COUNTER_1.hlc_count_load_en    (sig_TILE1_COUNTER_1_hlc_count_load_en);
        TILE1_COUNTER_1.hlc_match1_load_en   (sig_TILE1_COUNTER_1_hlc_match1_load_en);
        TILE1_COUNTER_1.hlc_match2_load_en   (sig_TILE1_COUNTER_1_hlc_match2_load_en);
        TILE1_COUNTER_1.count_out            (sig_TILE1_COUNTER_1_count_out);
        TILE1_COUNTER_1.count_zero           (sig_TILE1_COUNTER_1_count_zero);
        TILE1_COUNTER_1.count_match1         (sig_TILE1_COUNTER_1_count_match1);
        TILE1_COUNTER_1.count_match2         (sig_TILE1_COUNTER_1_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE1_COUNTER_1.lfsr_mode               (sig_TILE1_COUNTER_1_lfsr_mode);
        TILE1_COUNTER_1.match1_tap_en           (sig_TILE1_COUNTER_1_match1_tap_en);
        TILE1_COUNTER_1.match1_tap              (sig_TILE1_COUNTER_1_match1_tap);
        TILE1_COUNTER_1.match2_tap_en           (sig_TILE1_COUNTER_1_match2_tap_en);
        TILE1_COUNTER_1.match2_tap              (sig_TILE1_COUNTER_1_match2_tap);
#endif
#if TYPE == 3
        TILE1_COUNTER_1.RECONFIG_PIPELINE_EN    (sig_TILE1_COUNTER_1_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE1_COUNTER_1.clk,                 "TILE1_COUNTER_1.TILE1_COUNTER_1_clock");
        sc_trace(tf, TILE1_COUNTER_1.glbl_en,             "TILE1_COUNTER_1.TILE1_COUNTER_1_global_en");
        sc_trace(tf, TILE1_COUNTER_1.glbl_rst_n,          "TILE1_COUNTER_1.TILE1_COUNTER_1_global_reset");
        sc_trace(tf, TILE1_COUNTER_1.add_shift_dir,       "TILE1_COUNTER_1.TILE1_COUNTER_1_add_or_shift_dir");
        sc_trace(tf, TILE1_COUNTER_1.add_shift_mode,      "TILE1_COUNTER_1.TILE1_COUNTER_1_add_or_shift_mode");
        sc_trace(tf, TILE1_COUNTER_1.add_shift_on_event_en, "TILE1_COUNTER_1.TILE1_COUNTER_1_add_or_shift_on_event_en");
        sc_trace(tf, TILE1_COUNTER_1.event_load_val,      "TILE1_COUNTER_1.TILE1_COUNTER_1_event_load_val");
        sc_trace(tf, TILE1_COUNTER_1.match1_reg_out,      "TILE1_COUNTER_1.TILE1_COUNTER_1_match1_val");
        sc_trace(tf, TILE1_COUNTER_1.match2_reg_out,      "TILE1_COUNTER_1.TILE1_COUNTER_1_match2_val");
        sc_trace(tf, TILE1_COUNTER_1.glbl_serializer_mode,"TILE1_COUNTER_1.TILE1_COUNTER_1_global_serializer_en");
        sc_trace(tf, TILE1_COUNTER_1.hlc_count_load_val,  "TILE1_COUNTER_1.TILE1_COUNTER_1_hlc_counter_load_val");
        sc_trace(tf, TILE1_COUNTER_1.hlc_count_load_en,   "TILE1_COUNTER_1.TILE1_COUNTER_1_hlc_counter_load_en");
        sc_trace(tf, TILE1_COUNTER_1.hlc_match1_load_en,  "TILE1_COUNTER_1.TILE1_COUNTER_1_hlc_match1_load_en");
        sc_trace(tf, TILE1_COUNTER_1.hlc_match2_load_en,  "TILE1_COUNTER_1.TILE1_COUNTER_1_hlc_match2_load_en");
        sc_trace(tf, TILE1_COUNTER_1.count_out,           "TILE1_COUNTER_1.TILE1_COUNTER_1_counter_output");
        sc_trace(tf, TILE1_COUNTER_1.count_zero,          "TILE1_COUNTER_1.TILE1_COUNTER_1_counter_equals_zero");
        sc_trace(tf, TILE1_COUNTER_1.count_match1,        "TILE1_COUNTER_1.TILE1_COUNTER_1_counter_equals_match1");
        sc_trace(tf, TILE1_COUNTER_1.count_match2,        "TILE1_COUNTER_1.TILE1_COUNTER_1_counter_equals_match2");
        sc_trace(tf, TILE1_COUNTER_1.reset,               "TILE1_COUNTER_1.TILE1_COUNTER_1_counter_reset");
        sc_trace(tf, TILE1_COUNTER_1.event,               "TILE1_COUNTER_1.TILE1_COUNTER_1_event");
        sc_trace(tf, TILE1_COUNTER_1.mode0,        	 "TILE1_COUNTER_1.TILE1_COUNTER_1_mode0");
        sc_trace(tf, TILE1_COUNTER_1.mode1,        	 "TILE1_COUNTER_1.TILE1_COUNTER_1_mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE1_COUNTER_1.lfsr_mode    ,     "TILE1_COUNTER_1.TILE1_COUNTER_1_lfsr_en");
        sc_trace(tf, TILE1_COUNTER_1.match1_tap_en,     "TILE1_COUNTER_1.TILE1_COUNTER_1_match1_tap_en");
        sc_trace(tf, TILE1_COUNTER_1.match1_tap   ,     "TILE1_COUNTER_1.TILE1_COUNTER_1_match1_tap");
        sc_trace(tf, TILE1_COUNTER_1.match2_tap_en,     "TILE1_COUNTER_1.TILE1_COUNTER_1_match2_tap_en");
        sc_trace(tf, TILE1_COUNTER_1.match2_tap   ,     "TILE1_COUNTER_1.TILE1_COUNTER_1_match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE1_COUNTER_1.RECONFIG_PIPELINE_EN,     "TILE1_COUNTER_1.TILE1_COUNTER_1_reconfig_pipeline_en");
#endif
        TILE1_COUNTER_2.reset        (sig_TILE1_LUT_2_OUT);
        TILE1_COUNTER_2.event        (sc_zero);
        TILE1_COUNTER_2.mode0        (sig_TILE1_BOUNDARY_IN_out2);
        TILE1_COUNTER_2.mode1        (sc_one);
        TILE1_COUNTER_2.clk                  (sc_top_clock);
        TILE1_COUNTER_2.glbl_en              (sc_top_enable);
        TILE1_COUNTER_2.glbl_rst_n           (sc_top_reset);
        TILE1_COUNTER_2.add_shift_dir        (sig_TILE1_COUNTER_2_add_shift_dir);
        TILE1_COUNTER_2.add_shift_mode       (sig_TILE1_COUNTER_2_add_shift_mode);
        TILE1_COUNTER_2.add_shift_on_event_en(sig_TILE1_COUNTER_2_add_shift_on_event_en);
        TILE1_COUNTER_2.global_clk_en        (sig_TILE1_COUNTER_2_global_clk_en);//Unused
        TILE1_COUNTER_2.glbl_load_en         (sig_TILE1_COUNTER_2_glbl_load_en);//Unused
        TILE1_COUNTER_2.event_load_val       (sig_TILE1_COUNTER_2_event_load_val);
        TILE1_COUNTER_2.match_en             (sig_TILE1_COUNTER_2_match_en);//Unused
        TILE1_COUNTER_2.match1_val           (sig_TILE1_COUNTER_2_match1_val);
        TILE1_COUNTER_2.match2_val           (sig_TILE1_COUNTER_2_match2_val);
        TILE1_COUNTER_2.match1_reg_out       (sig_TILE1_COUNTER_2_match1_out);
        TILE1_COUNTER_2.match2_reg_out       (sig_TILE1_COUNTER_2_match2_out);
        TILE1_COUNTER_2.glbl_serializer_mode (sig_TILE1_COUNTER_2_glbl_serializer_mode);
        TILE1_COUNTER_2.hlc_count_load_val   (sig_TILE1_COUNTER_hlc_count_load_val);
        TILE1_COUNTER_2.hlc_count_load_en    (sig_TILE1_COUNTER_2_hlc_count_load_en);
        TILE1_COUNTER_2.hlc_match1_load_en   (sig_TILE1_COUNTER_2_hlc_match1_load_en);
        TILE1_COUNTER_2.hlc_match2_load_en   (sig_TILE1_COUNTER_2_hlc_match2_load_en);
        TILE1_COUNTER_2.count_out            (sig_TILE1_COUNTER_2_count_out);
        TILE1_COUNTER_2.count_zero           (sig_TILE1_COUNTER_2_count_zero);
        TILE1_COUNTER_2.count_match1         (sig_TILE1_COUNTER_2_count_match1);
        TILE1_COUNTER_2.count_match2         (sig_TILE1_COUNTER_2_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE1_COUNTER_2.lfsr_mode               (sig_TILE1_COUNTER_2_lfsr_mode);
        TILE1_COUNTER_2.match1_tap_en           (sig_TILE1_COUNTER_2_match1_tap_en);
        TILE1_COUNTER_2.match1_tap              (sig_TILE1_COUNTER_2_match1_tap);
        TILE1_COUNTER_2.match2_tap_en           (sig_TILE1_COUNTER_2_match2_tap_en);
        TILE1_COUNTER_2.match2_tap              (sig_TILE1_COUNTER_2_match2_tap);
#endif
#if TYPE == 3
        TILE1_COUNTER_2.RECONFIG_PIPELINE_EN    (sig_TILE1_COUNTER_2_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE1_COUNTER_2.clk,                 "TILE1_COUNTER_2.TILE1_COUNTER_2_clock");
        sc_trace(tf, TILE1_COUNTER_2.glbl_en,             "TILE1_COUNTER_2.TILE1_COUNTER_2_global_en");
        sc_trace(tf, TILE1_COUNTER_2.glbl_rst_n,          "TILE1_COUNTER_2.TILE1_COUNTER_2_global_reset");
        sc_trace(tf, TILE1_COUNTER_2.add_shift_dir,       "TILE1_COUNTER_2.TILE1_COUNTER_2_add_or_shift_dir");
        sc_trace(tf, TILE1_COUNTER_2.add_shift_mode,      "TILE1_COUNTER_2.TILE1_COUNTER_2_add_or_shift_mode");
        sc_trace(tf, TILE1_COUNTER_2.add_shift_on_event_en, "TILE1_COUNTER_2.TILE1_COUNTER_2_add_or_shift_on_event_en");
        sc_trace(tf, TILE1_COUNTER_2.event_load_val,      "TILE1_COUNTER_2.TILE1_COUNTER_2_event_load_val");
        sc_trace(tf, TILE1_COUNTER_2.match1_reg_out,      "TILE1_COUNTER_2.TILE1_COUNTER_2_match1_val");
        sc_trace(tf, TILE1_COUNTER_2.match2_reg_out,      "TILE1_COUNTER_2.TILE1_COUNTER_2_match2_val");
        sc_trace(tf, TILE1_COUNTER_2.glbl_serializer_mode,"TILE1_COUNTER_2.TILE1_COUNTER_2_global_serializer_en");
        sc_trace(tf, TILE1_COUNTER_2.hlc_count_load_val,  "TILE1_COUNTER_2.TILE1_COUNTER_2_hlc_counter_load_val");
        sc_trace(tf, TILE1_COUNTER_2.hlc_count_load_en,   "TILE1_COUNTER_2.TILE1_COUNTER_2_hlc_counter_load_en");
        sc_trace(tf, TILE1_COUNTER_2.hlc_match1_load_en,  "TILE1_COUNTER_2.TILE1_COUNTER_2_hlc_match1_load_en");
        sc_trace(tf, TILE1_COUNTER_2.hlc_match2_load_en,  "TILE1_COUNTER_2.TILE1_COUNTER_2_hlc_match2_load_en");
        sc_trace(tf, TILE1_COUNTER_2.count_out,           "TILE1_COUNTER_2.TILE1_COUNTER_2_counter_output");
        sc_trace(tf, TILE1_COUNTER_2.count_zero,          "TILE1_COUNTER_2.TILE1_COUNTER_2_counter_equals_zero");
        sc_trace(tf, TILE1_COUNTER_2.count_match1,        "TILE1_COUNTER_2.TILE1_COUNTER_2_counter_equals_match1");
        sc_trace(tf, TILE1_COUNTER_2.count_match2,        "TILE1_COUNTER_2.TILE1_COUNTER_2_counter_equals_match2");
        sc_trace(tf, TILE1_COUNTER_2.reset,               "TILE1_COUNTER_2.TILE1_COUNTER_2_counter_reset");
        sc_trace(tf, TILE1_COUNTER_2.event,               "TILE1_COUNTER_2.TILE1_COUNTER_2_event");
        sc_trace(tf, TILE1_COUNTER_2.mode0,        	 "TILE1_COUNTER_2.TILE1_COUNTER_2_mode0");
        sc_trace(tf, TILE1_COUNTER_2.mode1,        	 "TILE1_COUNTER_2.TILE1_COUNTER_2_mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE1_COUNTER_2.lfsr_mode    ,     "TILE1_COUNTER_2.TILE1_COUNTER_2_lfsr_en");
        sc_trace(tf, TILE1_COUNTER_2.match1_tap_en,     "TILE1_COUNTER_2.TILE1_COUNTER_2_match1_tap_en");
        sc_trace(tf, TILE1_COUNTER_2.match1_tap   ,     "TILE1_COUNTER_2.TILE1_COUNTER_2_match1_tap");
        sc_trace(tf, TILE1_COUNTER_2.match2_tap_en,     "TILE1_COUNTER_2.TILE1_COUNTER_2_match2_tap_en");
        sc_trace(tf, TILE1_COUNTER_2.match2_tap   ,     "TILE1_COUNTER_2.TILE1_COUNTER_2_match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE1_COUNTER_2.RECONFIG_PIPELINE_EN,     "TILE1_COUNTER_2.TILE1_COUNTER_2_reconfig_pipeline_en");
#endif
        TILE1_HLC.e0        (sig_TILE1_HLC_e0);
        sc_trace(tf, TILE1_HLC.e0, "TILE1_HLC.TILE1_HLC_program0_event_source");
        TILE1_HLC.e1        (sig_TILE1_HLC_e1);
        sc_trace(tf, TILE1_HLC.e1, "TILE1_HLC.TILE1_HLC_program1_event_source");
        TILE1_HLC.e2        (sig_TILE1_HLC_e2);
        sc_trace(tf, TILE1_HLC.e2, "TILE1_HLC.TILE1_HLC_program2_event_source");
        TILE1_HLC.e3        (sig_TILE1_HLC_e3);
        sc_trace(tf, TILE1_HLC.e3, "TILE1_HLC.TILE1_HLC_program3_event_source");
#if TYPE == 2 || TYPE == 3
        TILE1_HLC.ae0       (sig_TILE1_HLC_ae0);
        TILE1_HLC.ae1       (sig_TILE1_HLC_ae1);
        TILE1_HLC.ae2       (sig_TILE1_HLC_ae2);
        TILE1_HLC.ae3       (sig_TILE1_HLC_ae3);
        sc_trace(tf, TILE1_HLC.ae0,            "TILE1_HLC.TILE1_HLC_alternate_event_input_select0");
        sc_trace(tf, TILE1_HLC.ae1,            "TILE1_HLC.TILE1_HLC_alternate_event_input_select1");
        sc_trace(tf, TILE1_HLC.ae2,            "TILE1_HLC.TILE1_HLC_alternate_event_input_select2");
        sc_trace(tf, TILE1_HLC.ae3,            "TILE1_HLC.TILE1_HLC_alternate_event_input_select3");

        TILE1_HLC.clb_result_in[0] (sig_TILE1_OUTLUT_0_OUT);
        TILE1_HLC.clb_result_in[1] (sig_TILE1_OUTLUT_1_OUT);
        TILE1_HLC.clb_result_in[2] (sig_TILE1_OUTLUT_2_OUT);
        TILE1_HLC.clb_result_in[3] (sig_TILE1_OUTLUT_3_OUT);
        TILE1_HLC.clb_result_in[4] (sig_TILE1_OUTLUT_4_OUT);
        TILE1_HLC.clb_result_in[5] (sig_TILE1_OUTLUT_5_OUT);
        TILE1_HLC.clb_result_in[6] (sig_TILE1_OUTLUT_6_OUT);
        TILE1_HLC.clb_result_in[7] (sig_TILE1_OUTLUT_7_OUT);
        sc_trace(tf, TILE1_HLC.clb_result_in[0],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(0)");
        sc_trace(tf, TILE1_HLC.clb_result_in[1],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(1)");
        sc_trace(tf, TILE1_HLC.clb_result_in[2],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(2)");
        sc_trace(tf, TILE1_HLC.clb_result_in[3],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(3)");
        sc_trace(tf, TILE1_HLC.clb_result_in[4],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(4)");
        sc_trace(tf, TILE1_HLC.clb_result_in[5],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(5)");
        sc_trace(tf, TILE1_HLC.clb_result_in[6],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(6)");
        sc_trace(tf, TILE1_HLC.clb_result_in[7],           "TILE1_HLC.TILE1_HLC_alternate_event_clb_output(7)");

        TILE1_HLC.clb_async_result_in[0] (sig_TILE1_BOUNDARY_OUT_out0);
        TILE1_HLC.clb_async_result_in[1] (sig_TILE1_BOUNDARY_OUT_out1);
        TILE1_HLC.clb_async_result_in[2] (sig_TILE1_BOUNDARY_OUT_out2);
        TILE1_HLC.clb_async_result_in[3] (sig_TILE1_BOUNDARY_OUT_out3);
        TILE1_HLC.clb_async_result_in[4] (sig_TILE1_BOUNDARY_OUT_out4);
        TILE1_HLC.clb_async_result_in[5] (sig_TILE1_BOUNDARY_OUT_out5);
        TILE1_HLC.clb_async_result_in[6] (sig_TILE1_BOUNDARY_OUT_out6);
        TILE1_HLC.clb_async_result_in[7] (sig_TILE1_BOUNDARY_OUT_out7);
        sc_trace(tf, TILE1_HLC.clb_async_result_in[0],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(0)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[1],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(1)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[2],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(2)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[3],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(3)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[4],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(4)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[5],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(5)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[6],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(6)");
        sc_trace(tf, TILE1_HLC.clb_async_result_in[7],     "TILE1_HLC.TILE1_HLC_alternate_event_clb_async_output(7)");
#endif
#if TYPE == 3
        TILE1_HLC.RECONFIG_PIPELINE_EN       (sig_TILE1_HLC_RECONFIG_PIPELINE_EN);
        sc_trace(tf, TILE1_HLC.RECONFIG_PIPELINE_EN,            "TILE1_HLC.TILE1_HLC_reconfig_pipeline_enable");

        TILE1_HLC.SPI_RXBUFF_EN                    (sig_TILE1_HLC_SPI_EN);
        TILE1_HLC.P_spi_event_trig                 (sig_TILE1_HLC_SPI_EVENT_TRIGGER);
        TILE1_HLC.P_spi_shift_val                  (sig_TILE1_HLC_SPI_SHIFT_VAL);
        TILE1_HLC.P_spi_export                     (sig_TILE1_HLC_SPI_EXPORT_RXBUFF);

        sc_trace(tf, TILE1_HLC.SPI_RXBUFF_EN,      "TILE1_HLC.TILE1_HLC_spi_export_enable");
        sc_trace(tf, TILE1_HLC.P_spi_event_trig,   "TILE1_HLC.TILE1_HLC_spi_event_trigger");
        sc_trace(tf, TILE1_HLC.P_spi_shift_val,    "TILE1_HLC.TILE1_HLC_spi_shift_value");
        sc_trace(tf, TILE1_HLC.P_spi_export,       "TILE1_HLC.TILE1_HLC_spi_export_receive_buffer");
#endif
        TILE1_HLC.P_clk(sc_top_clock);
        TILE1_HLC.P_glbl_load_en(sc_top_enable);
        TILE1_HLC.P_rst_n(sc_top_reset);
        TILE1_HLC.P_curr_instr(sig_TILE1_HLC_P_curr_instr);
        TILE1_HLC.P_counter_in_0(sig_TILE1_COUNTER_0_count_out);
        TILE1_HLC.P_counter_in_1(sig_TILE1_COUNTER_1_count_out);
        TILE1_HLC.P_counter_in_2(sig_TILE1_COUNTER_2_count_out);
        TILE1_HLC.P_local_count_load_enable_0(sig_TILE1_COUNTER_0_hlc_count_load_en);
        TILE1_HLC.P_local_count_load_enable_1(sig_TILE1_COUNTER_1_hlc_count_load_en);
        TILE1_HLC.P_local_count_load_enable_2(sig_TILE1_COUNTER_2_hlc_count_load_en);
        TILE1_HLC.P_local_count_match1_enable_0(sig_TILE1_COUNTER_0_hlc_match1_load_en);
        TILE1_HLC.P_local_count_match1_enable_1(sig_TILE1_COUNTER_1_hlc_match1_load_en);
        TILE1_HLC.P_local_count_match1_enable_2(sig_TILE1_COUNTER_2_hlc_match1_load_en);
        TILE1_HLC.P_local_count_match2_enable_0(sig_TILE1_COUNTER_0_hlc_match2_load_en);
        TILE1_HLC.P_local_count_match2_enable_1(sig_TILE1_COUNTER_1_hlc_match2_load_en);
        TILE1_HLC.P_local_count_match2_enable_2(sig_TILE1_COUNTER_2_hlc_match2_load_en);

        sc_trace(tf, TILE1_HLC.P_clk,                              "TILE1_HLC.TILE1_HLC_program_clock");
        sc_trace(tf, TILE1_HLC.P_glbl_load_en,                     "TILE1_HLC.TILE1_HLC_program_global_load_en");
        sc_trace(tf, TILE1_HLC.P_rst_n,                            "TILE1_HLC.TILE1_HLC_program_reset");
        sc_trace(tf, TILE1_HLC.P_curr_instr,                       "TILE1_HLC.TILE1_HLC_program_current_instruction");
        sc_trace(tf, TILE1_HLC.P_counter_in_0,                     "TILE1_HLC.TILE1_HLC_counter0_value");
        sc_trace(tf, TILE1_HLC.P_counter_in_1,                     "TILE1_HLC.TILE1_HLC_counter1_value");
        sc_trace(tf, TILE1_HLC.P_counter_in_2,                     "TILE1_HLC.TILE1_HLC_counter2_value");

        sc_trace(tf, TILE1_HLC.P_local_count_load_enable_0,        "TILE1_HLC.TILE1_HLC_hlc_counter0_load_en");
        sc_trace(tf, TILE1_HLC.P_local_count_load_enable_1,        "TILE1_HLC.TILE1_HLC_hlc_counter1_load_en");
        sc_trace(tf, TILE1_HLC.P_local_count_load_enable_2,        "TILE1_HLC.TILE1_HLC_hlc_counter2_load_en");

        sc_trace(tf, TILE1_HLC.P_local_count_match1_enable_0,      "TILE1_HLC.TILE1_HLC_hlc_counter0_match1_load_en");
        sc_trace(tf, TILE1_HLC.P_local_count_match1_enable_1,      "TILE1_HLC.TILE1_HLC_hlc_counter1_match1_load_en");
        sc_trace(tf, TILE1_HLC.P_local_count_match1_enable_2,      "TILE1_HLC.TILE1_HLC_hlc_counter2_match1_load_en");

        sc_trace(tf, TILE1_HLC.P_local_count_match2_enable_0,      "TILE1_HLC.TILE1_HLC_hlc_counter0_match2_load_en");
        sc_trace(tf, TILE1_HLC.P_local_count_match2_enable_1,      "TILE1_HLC.TILE1_HLC_hlc_counter1_match2_load_en");
        sc_trace(tf, TILE1_HLC.P_local_count_match2_enable_2,      "TILE1_HLC.TILE1_HLC_hlc_counter2_match2_load_en");

        TILE1_HLC.P_EVENT_BUS_IN[0](sc_zero);
        TILE1_HLC.P_EVENT_BUS_IN[1](sig_TILE1_COUNTER_0_count_match2);
        TILE1_HLC.P_EVENT_BUS_IN[2](sig_TILE1_COUNTER_0_count_zero);
        TILE1_HLC.P_EVENT_BUS_IN[3](sig_TILE1_COUNTER_0_count_match1);
        TILE1_HLC.P_EVENT_BUS_IN[4](sig_TILE1_FSM_0_S0);
        TILE1_HLC.P_EVENT_BUS_IN[5](sig_TILE1_FSM_0_S1);
        TILE1_HLC.P_EVENT_BUS_IN[6](sig_TILE1_FSM_0_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[7](sig_TILE1_LUT_0_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[8](sc_one);
        TILE1_HLC.P_EVENT_BUS_IN[9](sig_TILE1_COUNTER_1_count_match2);
        TILE1_HLC.P_EVENT_BUS_IN[10](sig_TILE1_COUNTER_1_count_zero);
        TILE1_HLC.P_EVENT_BUS_IN[11](sig_TILE1_COUNTER_1_count_match1);
        TILE1_HLC.P_EVENT_BUS_IN[12](sig_TILE1_FSM_1_S0);
        TILE1_HLC.P_EVENT_BUS_IN[13](sig_TILE1_FSM_1_S1);
        TILE1_HLC.P_EVENT_BUS_IN[14](sig_TILE1_FSM_1_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[15](sig_TILE1_LUT_1_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[16](sc_zero);
        TILE1_HLC.P_EVENT_BUS_IN[17](sig_TILE1_COUNTER_2_count_match2);
        TILE1_HLC.P_EVENT_BUS_IN[18](sig_TILE1_COUNTER_2_count_zero);
        TILE1_HLC.P_EVENT_BUS_IN[19](sig_TILE1_COUNTER_2_count_match1);
        TILE1_HLC.P_EVENT_BUS_IN[20](sig_TILE1_FSM_2_S0);
        TILE1_HLC.P_EVENT_BUS_IN[21](sig_TILE1_FSM_2_S1);
        TILE1_HLC.P_EVENT_BUS_IN[22](sig_TILE1_FSM_2_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[23](sig_TILE1_LUT_2_OUT);
        TILE1_HLC.P_EVENT_BUS_IN[24](sig_TILE1_BOUNDARY_IN_out0);
        TILE1_HLC.P_EVENT_BUS_IN[25](sig_TILE1_BOUNDARY_IN_out1);
        TILE1_HLC.P_EVENT_BUS_IN[26](sig_TILE1_BOUNDARY_IN_out2);
        TILE1_HLC.P_EVENT_BUS_IN[27](sig_TILE1_BOUNDARY_IN_out3);
        TILE1_HLC.P_EVENT_BUS_IN[28](sig_TILE1_BOUNDARY_IN_out4);
        TILE1_HLC.P_EVENT_BUS_IN[29](sig_TILE1_BOUNDARY_IN_out5);
        TILE1_HLC.P_EVENT_BUS_IN[30](sig_TILE1_BOUNDARY_IN_out6);
        TILE1_HLC.P_EVENT_BUS_IN[31](sig_TILE1_BOUNDARY_IN_out7);

        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[0], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(0)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[1], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(1)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[2], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(2)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[3], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(3)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[4], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(4)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[5], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(5)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[6], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(6)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[7], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(7)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[8], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(8)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[9], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(9)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[10], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(10)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[11], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(11)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[12], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(12)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[13], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(13)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[14], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(14)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[15], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(15)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[16], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(16)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[17], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(17)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[18], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(18)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[19], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(19)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[20], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(20)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[21], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(21)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[22], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(22)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[23], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(23)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[24], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(24)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[25], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(25)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[26], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(26)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[27], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(27)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[28], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(28)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[29], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(29)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[30], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(30)");
        sc_trace(tf, TILE1_HLC.P_EVENT_BUS_IN[31], "TILE1_HLC.TILE1_HLC_hlc_event_trigger(31)");


		TILE1_HLC.hlc_instructions[0](sig_TILE1_HLC_hlc_instr_0);
		TILE1_HLC.hlc_instructions[1](sig_TILE1_HLC_hlc_instr_1);
		TILE1_HLC.hlc_instructions[2](sig_TILE1_HLC_hlc_instr_2);
		TILE1_HLC.hlc_instructions[3](sig_TILE1_HLC_hlc_instr_3);
		TILE1_HLC.hlc_instructions[4](sig_TILE1_HLC_hlc_instr_4);
		TILE1_HLC.hlc_instructions[5](sig_TILE1_HLC_hlc_instr_5);
		TILE1_HLC.hlc_instructions[6](sig_TILE1_HLC_hlc_instr_6);
		TILE1_HLC.hlc_instructions[7](sig_TILE1_HLC_hlc_instr_7);
		TILE1_HLC.hlc_instructions[8](sig_TILE1_HLC_hlc_instr_8);
		TILE1_HLC.hlc_instructions[9](sig_TILE1_HLC_hlc_instr_9);
		TILE1_HLC.hlc_instructions[10](sig_TILE1_HLC_hlc_instr_10);
		TILE1_HLC.hlc_instructions[11](sig_TILE1_HLC_hlc_instr_11);
		TILE1_HLC.hlc_instructions[12](sig_TILE1_HLC_hlc_instr_12);
		TILE1_HLC.hlc_instructions[13](sig_TILE1_HLC_hlc_instr_13);
		TILE1_HLC.hlc_instructions[14](sig_TILE1_HLC_hlc_instr_14);
		TILE1_HLC.hlc_instructions[15](sig_TILE1_HLC_hlc_instr_15);
		TILE1_HLC.hlc_instructions[16](sig_TILE1_HLC_hlc_instr_16);
		TILE1_HLC.hlc_instructions[17](sig_TILE1_HLC_hlc_instr_17);
		TILE1_HLC.hlc_instructions[18](sig_TILE1_HLC_hlc_instr_18);
		TILE1_HLC.hlc_instructions[19](sig_TILE1_HLC_hlc_instr_19);
		TILE1_HLC.hlc_instructions[20](sig_TILE1_HLC_hlc_instr_20);
		TILE1_HLC.hlc_instructions[21](sig_TILE1_HLC_hlc_instr_21);
		TILE1_HLC.hlc_instructions[22](sig_TILE1_HLC_hlc_instr_22);
		TILE1_HLC.hlc_instructions[23](sig_TILE1_HLC_hlc_instr_23);
		TILE1_HLC.hlc_instructions[24](sig_TILE1_HLC_hlc_instr_24);
		TILE1_HLC.hlc_instructions[25](sig_TILE1_HLC_hlc_instr_25);
		TILE1_HLC.hlc_instructions[26](sig_TILE1_HLC_hlc_instr_26);
		TILE1_HLC.hlc_instructions[27](sig_TILE1_HLC_hlc_instr_27);
		TILE1_HLC.hlc_instructions[28](sig_TILE1_HLC_hlc_instr_28);
		TILE1_HLC.hlc_instructions[29](sig_TILE1_HLC_hlc_instr_29);
		TILE1_HLC.hlc_instructions[30](sig_TILE1_HLC_hlc_instr_30);
		TILE1_HLC.hlc_instructions[31](sig_TILE1_HLC_hlc_instr_31);

        //sc_trace(tf, TILE1_HLC.hlc_instructions[0], "TILE1_HLC.TILE1_HLC_hlc_instruction(0)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[1], "TILE1_HLC.TILE1_HLC_hlc_instruction(1)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[2], "TILE1_HLC.TILE1_HLC_hlc_instruction(2)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[3], "TILE1_HLC.TILE1_HLC_hlc_instruction(3)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[4], "TILE1_HLC.TILE1_HLC_hlc_instruction(4)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[5], "TILE1_HLC.TILE1_HLC_hlc_instruction(5)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[6], "TILE1_HLC.TILE1_HLC_hlc_instruction(6)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[7], "TILE1_HLC.TILE1_HLC_hlc_instruction(7)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[8], "TILE1_HLC.TILE1_HLC_hlc_instruction(8)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[9], "TILE1_HLC.TILE1_HLC_hlc_instruction(9)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[10], "TILE1_HLC.TILE1_HLC_hlc_instruction(10)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[11], "TILE1_HLC.TILE1_HLC_hlc_instruction(11)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[12], "TILE1_HLC.TILE1_HLC_hlc_instruction(12)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[13], "TILE1_HLC.TILE1_HLC_hlc_instruction(13)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[14], "TILE1_HLC.TILE1_HLC_hlc_instruction(14)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[15], "TILE1_HLC.TILE1_HLC_hlc_instruction(15)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[16], "TILE1_HLC.TILE1_HLC_hlc_instruction(16)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[17], "TILE1_HLC.TILE1_HLC_hlc_instruction(17)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[18], "TILE1_HLC.TILE1_HLC_hlc_instruction(18)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[19], "TILE1_HLC.TILE1_HLC_hlc_instruction(19)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[20], "TILE1_HLC.TILE1_HLC_hlc_instruction(20)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[21], "TILE1_HLC.TILE1_HLC_hlc_instruction(21)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[22], "TILE1_HLC.TILE1_HLC_hlc_instruction(22)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[23], "TILE1_HLC.TILE1_HLC_hlc_instruction(23)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[24], "TILE1_HLC.TILE1_HLC_hlc_instruction(24)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[25], "TILE1_HLC.TILE1_HLC_hlc_instruction(25)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[26], "TILE1_HLC.TILE1_HLC_hlc_instruction(26)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[27], "TILE1_HLC.TILE1_HLC_hlc_instruction(27)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[28], "TILE1_HLC.TILE1_HLC_hlc_instruction(28)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[29], "TILE1_HLC.TILE1_HLC_hlc_instruction(29)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[30], "TILE1_HLC.TILE1_HLC_hlc_instruction(30)");
        //sc_trace(tf, TILE1_HLC.hlc_instructions[31], "TILE1_HLC.TILE1_HLC_hlc_instruction(31)");
		
		
        TILE1_HLC.P_counter_load_bus(sig_TILE1_COUNTER_hlc_count_load_val);
        sc_trace(tf, TILE1_HLC.P_counter_load_bus, "TILE1_HLC.TILE1_HLC_counter_hlc_load_value");

        TILE1_HLC.P_comm_R0_out(sig_TILE1_HLC_P_comm_R0_out);
        TILE1_HLC.P_comm_R1_out(sig_TILE1_HLC_P_comm_R1_out);
        TILE1_HLC.P_comm_R2_out(sig_TILE1_HLC_P_comm_R2_out);
        TILE1_HLC.P_comm_R3_out(sig_TILE1_HLC_P_comm_R3_out);

        sc_trace(tf, TILE1_HLC.P_comm_R0_out, "TILE1_HLC.TILE1_HLC_register(0)");
        sc_trace(tf, TILE1_HLC.P_comm_R1_out, "TILE1_HLC.TILE1_HLC_register(1)");
        sc_trace(tf, TILE1_HLC.P_comm_R2_out, "TILE1_HLC.TILE1_HLC_register(2)");
        sc_trace(tf, TILE1_HLC.P_comm_R3_out, "TILE1_HLC.TILE1_HLC_register(3)");

        TILE1_HLC.P_pull_fifo[0](sig_TILE1_HLC_P_pull_fifo0_out);
        TILE1_HLC.P_pull_fifo[1](sig_TILE1_HLC_P_pull_fifo1_out);
        TILE1_HLC.P_pull_fifo[2](sig_TILE1_HLC_P_pull_fifo2_out);
        TILE1_HLC.P_pull_fifo[3](sig_TILE1_HLC_P_pull_fifo3_out);
        
        TILE1_HLC.P_push_fifo[0](sig_TILE1_HLC_P_push_fifo0_out);
        TILE1_HLC.P_push_fifo[1](sig_TILE1_HLC_P_push_fifo1_out);
        TILE1_HLC.P_push_fifo[2](sig_TILE1_HLC_P_push_fifo2_out);
        TILE1_HLC.P_push_fifo[3](sig_TILE1_HLC_P_push_fifo3_out);

        TILE1_HLC.P_fifo_read_ptr(sig_TILE1_HLC_P_fifo_read_ptr);
        TILE1_HLC.P_fifo_write_ptr(sig_TILE1_HLC_P_fifo_write_ptr);
        TILE1_HLC.P_fifo_underflow(sig_TILE1_HLC_P_fifo_underflow);
        TILE1_HLC.P_fifo_overflow(sig_TILE1_HLC_P_fifo_overflow);
        TILE1_HLC.fifo_refill_enable(sig_TILE1_HLC_P_fifo_refill_enable);

        sc_trace(tf, TILE1_HLC.P_pull_fifo[0], "TILE1_HLC.TILE1_HLC_pull_fifo(0)");
        sc_trace(tf, TILE1_HLC.P_pull_fifo[1], "TILE1_HLC.TILE1_HLC_pull_fifo(1)");
        sc_trace(tf, TILE1_HLC.P_pull_fifo[2], "TILE1_HLC.TILE1_HLC_pull_fifo(2)");
        sc_trace(tf, TILE1_HLC.P_pull_fifo[3], "TILE1_HLC.TILE1_HLC_pull_fifo(3)");
        
        sc_trace(tf, TILE1_HLC.P_push_fifo[0], "TILE1_HLC.TILE1_HLC_push_fifo(0)");
        sc_trace(tf, TILE1_HLC.P_push_fifo[1], "TILE1_HLC.TILE1_HLC_push_fifo(1)");
        sc_trace(tf, TILE1_HLC.P_push_fifo[2], "TILE1_HLC.TILE1_HLC_push_fifo(2)");
        sc_trace(tf, TILE1_HLC.P_push_fifo[3], "TILE1_HLC.TILE1_HLC_push_fifo(3)");

        sc_trace(tf, TILE1_HLC.P_fifo_read_ptr,    "TILE1_HLC.TILE1_HLC_fifo_read_pointer");
        sc_trace(tf, TILE1_HLC.P_fifo_write_ptr,   "TILE1_HLC.TILE1_HLC_fifo_write_pointer");
        sc_trace(tf, TILE1_HLC.P_fifo_underflow,   "TILE1_HLC.TILE1_HLC_fifo_underflow_signal");
        sc_trace(tf, TILE1_HLC.P_fifo_overflow,    "TILE1_HLC.TILE1_HLC_fifo_overflow_signal");

        TILE1_HLC.P_push_data_en  (sig_TILE1_HLC_P_push_data_en);
        TILE1_HLC.P_push_data_out (sig_TILE1_HLC_P_push_data_out);
        TILE1_HLC.P_pull_data_en  (sig_TILE1_HLC_P_pull_data_en);
        TILE1_HLC.P_set_intr_flag (sig_TILE1_HLC_P_set_intr_flag);
        TILE1_HLC.P_intr_val      (sig_TILE1_HLC_P_intr_val);

        //sc_trace(tf, TILE1_HLC.P_push_data_en,  "TILE1_HLC.TILE1_HLC_program_push_data_en");
        //sc_trace(tf, TILE1_HLC.P_push_data_out, "TILE1_HLC.TILE1_HLC_program_push_data_out");
        //sc_trace(tf, TILE1_HLC.P_pull_data_en,  "TILE1_HLC.TILE1_HLC_program_pull_data_en");
        sc_trace(tf, TILE1_HLC.P_set_intr_flag, "TILE1_HLC.TILE1_HLC_program_interrupt_flag");
        sc_trace(tf, TILE1_HLC.P_intr_val,      "TILE1_HLC.TILE1_HLC_program_interrupt_number");

        TILE1_BOUNDARY_IN.clk                  (sc_top_clock);
        TILE1_BOUNDARY_IN.in0_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl0);
        TILE1_BOUNDARY_IN.in1_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl1);
        TILE1_BOUNDARY_IN.in2_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl2);
        TILE1_BOUNDARY_IN.in3_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl3);
        TILE1_BOUNDARY_IN.in4_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl4);
        TILE1_BOUNDARY_IN.in5_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl5);
        TILE1_BOUNDARY_IN.in6_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl6);
        TILE1_BOUNDARY_IN.in7_ctrl             (sig_TILE1_BOUNDARY_IN_ctrl7);
        TILE1_BOUNDARY_IN.out0                 (sig_TILE1_BOUNDARY_IN_out0);
        TILE1_BOUNDARY_IN.out1                 (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_BOUNDARY_IN.out2                 (sig_TILE1_BOUNDARY_IN_out2);
        TILE1_BOUNDARY_IN.out3                 (sig_TILE1_BOUNDARY_IN_out3);
        TILE1_BOUNDARY_IN.out4                 (sig_TILE1_BOUNDARY_IN_out4);
        TILE1_BOUNDARY_IN.out5                 (sig_TILE1_BOUNDARY_IN_out5);
        TILE1_BOUNDARY_IN.out6                 (sig_TILE1_BOUNDARY_IN_out6);
        TILE1_BOUNDARY_IN.out7                 (sig_TILE1_BOUNDARY_IN_out7);

        if (TILE1_BOUNDARY_IN.in0.size() == 0) TILE1_BOUNDARY_IN.in0(sc_zero);
        if (TILE1_BOUNDARY_IN.in1.size() == 0) TILE1_BOUNDARY_IN.in1(sc_zero);
        if (TILE1_BOUNDARY_IN.in2.size() == 0) TILE1_BOUNDARY_IN.in2(sc_zero);
        if (TILE1_BOUNDARY_IN.in3.size() == 0) TILE1_BOUNDARY_IN.in3(sc_zero);
        if (TILE1_BOUNDARY_IN.in4.size() == 0) TILE1_BOUNDARY_IN.in4(sc_zero);
        if (TILE1_BOUNDARY_IN.in5.size() == 0) TILE1_BOUNDARY_IN.in5(sc_zero);
        if (TILE1_BOUNDARY_IN.in6.size() == 0) TILE1_BOUNDARY_IN.in6(sc_zero);
        if (TILE1_BOUNDARY_IN.in7.size() == 0) TILE1_BOUNDARY_IN.in7(sc_zero);
        sc_trace(tf, TILE1_BOUNDARY_IN.clk, "TILE1_BOUNDARY.TILE1_BOUNDARY_clock");
        sc_trace(tf, TILE1_BOUNDARY_IN.in0, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input0");
        sc_trace(tf, TILE1_BOUNDARY_IN.in1, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input1");
        sc_trace(tf, TILE1_BOUNDARY_IN.in2, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input2");
        sc_trace(tf, TILE1_BOUNDARY_IN.in3, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input3");
        sc_trace(tf, TILE1_BOUNDARY_IN.in4, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input4");
        sc_trace(tf, TILE1_BOUNDARY_IN.in5, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input5");
        sc_trace(tf, TILE1_BOUNDARY_IN.in6, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input6");
        sc_trace(tf, TILE1_BOUNDARY_IN.in7, "TILE1_BOUNDARY.TILE1_BOUNDARY_original_input7");
        sc_trace(tf, TILE1_BOUNDARY_IN.in0_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input0_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in1_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input1_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in2_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input2_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in3_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input3_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in4_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input4_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in5_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input5_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in6_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input6_ctrl");
        sc_trace(tf, TILE1_BOUNDARY_IN.in7_ctrl, "TILE1_BOUNDARY.TILE1_BOUNDARY_input7_ctrl");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE1_AOC_0.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output0");
        sc_trace(tf, TILE1_AOC_1.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output1");
        sc_trace(tf, TILE1_AOC_2.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output2");
        sc_trace(tf, TILE1_AOC_3.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output3");
        sc_trace(tf, TILE1_AOC_4.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output4");
        sc_trace(tf, TILE1_AOC_5.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output5");
        sc_trace(tf, TILE1_AOC_6.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output6");
        sc_trace(tf, TILE1_AOC_7.aoc_out, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output7");
#elif TYPE == 1
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output0");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output1");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output2");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output3");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output4");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output5");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output6");
        sc_trace(tf, TILE1_OUTLUT_0.OUT, "TILE1_BOUNDARY.TILE1_BOUNDARY_CLB_output7");
#endif
        sc_trace(tf, TILE1_BOUNDARY_IN.out0, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input0");
        sc_trace(tf, TILE1_BOUNDARY_IN.out1, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input1");
        sc_trace(tf, TILE1_BOUNDARY_IN.out2, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input2");
        sc_trace(tf, TILE1_BOUNDARY_IN.out3, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input3");
        sc_trace(tf, TILE1_BOUNDARY_IN.out4, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input4");
        sc_trace(tf, TILE1_BOUNDARY_IN.out5, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input5");
        sc_trace(tf, TILE1_BOUNDARY_IN.out6, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input6");
        sc_trace(tf, TILE1_BOUNDARY_IN.out7, "TILE1_BOUNDARY.TILE1_BOUNDARY_muxed_and_filtered_input7");

        TILE1_AOC_0.clk                  (sc_top_clock);
        TILE1_AOC_0.aoc_mux_ctrl         (sig_TILE1_AOC_0_MUX_CTRL);
        TILE1_AOC_0.boundary_in          (sig_TILE1_BOUNDARY_IN_out0);
        TILE1_AOC_0.clb_tile_output      (sig_TILE1_OUTLUT_0_OUT);
        TILE1_AOC_0.aoc_gate_signal      (sig_TILE1_AOC_0_GATE);
        TILE1_AOC_0.aoc_release_signal   (sig_TILE1_AOC_0_RELEASE);
        TILE1_AOC_0.aoc_out              (sig_TILE1_BOUNDARY_OUT_out0);

        sc_trace(tf, TILE1_AOC_0.aoc_mux_ctrl,       "TILE1_AOC_0.TILE1_AOC_0_mux_ctrl");
        sc_trace(tf, TILE1_AOC_0.boundary_in,        "TILE1_AOC_0.TILE1_AOC_0_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_0.clb_tile_output,    "TILE1_AOC_0.TILE1_AOC_0_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_0.aoc_gate_signal,    "TILE1_AOC_0.TILE1_AOC_0_gate_signal");
        sc_trace(tf, TILE1_AOC_0.aoc_release_signal, "TILE1_AOC_0.TILE1_AOC_0_release_signal");
        sc_trace(tf, TILE1_AOC_0.aoc_out,            "TILE1_AOC_0.TILE1_AOC_0_clb_output");

        TILE1_AOC_0_gate_customWave.out   (sig_TILE1_AOC_0_GATE);
        TILE1_AOC_0_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_0_release_customWave.out   (sig_TILE1_AOC_0_RELEASE);
        TILE1_AOC_0_release_customWave.clk   (sc_top_clock);

        TILE1_AOC_1.clk                  (sc_top_clock);
        TILE1_AOC_1.aoc_mux_ctrl         (sig_TILE1_AOC_1_MUX_CTRL);
        TILE1_AOC_1.boundary_in          (sig_TILE1_BOUNDARY_IN_out1);
        TILE1_AOC_1.clb_tile_output      (sig_TILE1_OUTLUT_1_OUT);
        TILE1_AOC_1.aoc_gate_signal      (sig_TILE1_AOC_1_GATE);
        TILE1_AOC_1.aoc_release_signal   (sig_TILE1_AOC_1_RELEASE);
        TILE1_AOC_1.aoc_out              (sig_TILE1_BOUNDARY_OUT_out1);

        sc_trace(tf, TILE1_AOC_1.aoc_mux_ctrl,       "TILE1_AOC_1.TILE1_AOC_1_mux_ctrl");
        sc_trace(tf, TILE1_AOC_1.boundary_in,        "TILE1_AOC_1.TILE1_AOC_1_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_1.clb_tile_output,    "TILE1_AOC_1.TILE1_AOC_1_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_1.aoc_gate_signal,    "TILE1_AOC_1.TILE1_AOC_1_gate_signal");
        sc_trace(tf, TILE1_AOC_1.aoc_release_signal, "TILE1_AOC_1.TILE1_AOC_1_release_signal");
        sc_trace(tf, TILE1_AOC_1.aoc_out,            "TILE1_AOC_1.TILE1_AOC_1_clb_output");

        TILE1_AOC_1_gate_customWave.out   (sig_TILE1_AOC_1_GATE);
        TILE1_AOC_1_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_1_release_customWave.out   (sig_TILE1_AOC_1_RELEASE);
        TILE1_AOC_1_release_customWave.clk   (sc_top_clock);

        TILE1_AOC_2.clk                  (sc_top_clock);
        TILE1_AOC_2.aoc_mux_ctrl         (sig_TILE1_AOC_2_MUX_CTRL);
        TILE1_AOC_2.boundary_in          (sig_TILE1_BOUNDARY_IN_out2);
        TILE1_AOC_2.clb_tile_output      (sig_TILE1_OUTLUT_2_OUT);
        TILE1_AOC_2.aoc_gate_signal      (sig_TILE1_AOC_2_GATE);
        TILE1_AOC_2.aoc_release_signal   (sig_TILE1_AOC_2_RELEASE);
        TILE1_AOC_2.aoc_out              (sig_TILE1_BOUNDARY_OUT_out2);

        sc_trace(tf, TILE1_AOC_2.aoc_mux_ctrl,       "TILE1_AOC_2.TILE1_AOC_2_mux_ctrl");
        sc_trace(tf, TILE1_AOC_2.boundary_in,        "TILE1_AOC_2.TILE1_AOC_2_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_2.clb_tile_output,    "TILE1_AOC_2.TILE1_AOC_2_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_2.aoc_gate_signal,    "TILE1_AOC_2.TILE1_AOC_2_gate_signal");
        sc_trace(tf, TILE1_AOC_2.aoc_release_signal, "TILE1_AOC_2.TILE1_AOC_2_release_signal");
        sc_trace(tf, TILE1_AOC_2.aoc_out,            "TILE1_AOC_2.TILE1_AOC_2_clb_output");

        TILE1_AOC_2_gate_customWave.out   (sig_TILE1_AOC_2_GATE);
        TILE1_AOC_2_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_2_release_customWave.out   (sig_TILE1_AOC_2_RELEASE);
        TILE1_AOC_2_release_customWave.clk   (sc_top_clock);

        TILE1_AOC_3.clk                  (sc_top_clock);
        TILE1_AOC_3.aoc_mux_ctrl         (sig_TILE1_AOC_3_MUX_CTRL);
        TILE1_AOC_3.boundary_in          (sig_TILE1_BOUNDARY_IN_out3);
        TILE1_AOC_3.clb_tile_output      (sig_TILE1_OUTLUT_3_OUT);
        TILE1_AOC_3.aoc_gate_signal      (sig_TILE1_AOC_3_GATE);
        TILE1_AOC_3.aoc_release_signal   (sig_TILE1_AOC_3_RELEASE);
        TILE1_AOC_3.aoc_out              (sig_TILE1_BOUNDARY_OUT_out3);

        sc_trace(tf, TILE1_AOC_3.aoc_mux_ctrl,       "TILE1_AOC_3.TILE1_AOC_3_mux_ctrl");
        sc_trace(tf, TILE1_AOC_3.boundary_in,        "TILE1_AOC_3.TILE1_AOC_3_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_3.clb_tile_output,    "TILE1_AOC_3.TILE1_AOC_3_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_3.aoc_gate_signal,    "TILE1_AOC_3.TILE1_AOC_3_gate_signal");
        sc_trace(tf, TILE1_AOC_3.aoc_release_signal, "TILE1_AOC_3.TILE1_AOC_3_release_signal");
        sc_trace(tf, TILE1_AOC_3.aoc_out,            "TILE1_AOC_3.TILE1_AOC_3_clb_output");

        TILE1_AOC_3_gate_customWave.out   (sig_TILE1_AOC_3_GATE);
        TILE1_AOC_3_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_3_release_customWave.out   (sig_TILE1_AOC_3_RELEASE);
        TILE1_AOC_3_release_customWave.clk   (sc_top_clock);

        TILE1_AOC_4.clk                  (sc_top_clock);
        TILE1_AOC_4.aoc_mux_ctrl         (sig_TILE1_AOC_4_MUX_CTRL);
        TILE1_AOC_4.boundary_in          (sig_TILE1_BOUNDARY_IN_out4);
        TILE1_AOC_4.clb_tile_output      (sig_TILE1_OUTLUT_4_OUT);
        TILE1_AOC_4.aoc_gate_signal      (sig_TILE1_AOC_4_GATE);
        TILE1_AOC_4.aoc_release_signal   (sig_TILE1_AOC_4_RELEASE);
        TILE1_AOC_4.aoc_out              (sig_TILE1_BOUNDARY_OUT_out4);

        sc_trace(tf, TILE1_AOC_4.aoc_mux_ctrl,       "TILE1_AOC_4.TILE1_AOC_4_mux_ctrl");
        sc_trace(tf, TILE1_AOC_4.boundary_in,        "TILE1_AOC_4.TILE1_AOC_4_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_4.clb_tile_output,    "TILE1_AOC_4.TILE1_AOC_4_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_4.aoc_gate_signal,    "TILE1_AOC_4.TILE1_AOC_4_gate_signal");
        sc_trace(tf, TILE1_AOC_4.aoc_release_signal, "TILE1_AOC_4.TILE1_AOC_4_release_signal");
        sc_trace(tf, TILE1_AOC_4.aoc_out,            "TILE1_AOC_4.TILE1_AOC_4_clb_output");

        TILE1_AOC_4_gate_customWave.out   (sig_TILE1_AOC_4_GATE);
        TILE1_AOC_4_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_4_release_customWave.out   (sig_TILE1_AOC_4_RELEASE);
        TILE1_AOC_4_release_customWave.clk   (sc_top_clock);

        TILE1_AOC_5.clk                  (sc_top_clock);
        TILE1_AOC_5.aoc_mux_ctrl         (sig_TILE1_AOC_5_MUX_CTRL);
        TILE1_AOC_5.boundary_in          (sig_TILE1_BOUNDARY_IN_out5);
        TILE1_AOC_5.clb_tile_output      (sig_TILE1_OUTLUT_5_OUT);
        TILE1_AOC_5.aoc_gate_signal      (sig_TILE1_AOC_5_GATE);
        TILE1_AOC_5.aoc_release_signal   (sig_TILE1_AOC_5_RELEASE);
        TILE1_AOC_5.aoc_out              (sig_TILE1_BOUNDARY_OUT_out5);

        sc_trace(tf, TILE1_AOC_5.aoc_mux_ctrl,       "TILE1_AOC_5.TILE1_AOC_5_mux_ctrl");
        sc_trace(tf, TILE1_AOC_5.boundary_in,        "TILE1_AOC_5.TILE1_AOC_5_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_5.clb_tile_output,    "TILE1_AOC_5.TILE1_AOC_5_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_5.aoc_gate_signal,    "TILE1_AOC_5.TILE1_AOC_5_gate_signal");
        sc_trace(tf, TILE1_AOC_5.aoc_release_signal, "TILE1_AOC_5.TILE1_AOC_5_release_signal");
        sc_trace(tf, TILE1_AOC_5.aoc_out,            "TILE1_AOC_5.TILE1_AOC_5_clb_output");

        TILE1_AOC_5_gate_customWave.out   (sig_TILE1_AOC_5_GATE);
        TILE1_AOC_5_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_5_release_customWave.out   (sig_TILE1_AOC_5_RELEASE);
        TILE1_AOC_5_release_customWave.clk   (sc_top_clock);

        TILE1_AOC_6.clk                  (sc_top_clock);
        TILE1_AOC_6.aoc_mux_ctrl         (sig_TILE1_AOC_6_MUX_CTRL);
        TILE1_AOC_6.boundary_in          (sig_TILE1_BOUNDARY_IN_out6);
        TILE1_AOC_6.clb_tile_output      (sig_TILE1_OUTLUT_6_OUT);
        TILE1_AOC_6.aoc_gate_signal      (sig_TILE1_AOC_6_GATE);
        TILE1_AOC_6.aoc_release_signal   (sig_TILE1_AOC_6_RELEASE);
        TILE1_AOC_6.aoc_out              (sig_TILE1_BOUNDARY_OUT_out6);

        sc_trace(tf, TILE1_AOC_6.aoc_mux_ctrl,       "TILE1_AOC_6.TILE1_AOC_6_mux_ctrl");
        sc_trace(tf, TILE1_AOC_6.boundary_in,        "TILE1_AOC_6.TILE1_AOC_6_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_6.clb_tile_output,    "TILE1_AOC_6.TILE1_AOC_6_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_6.aoc_gate_signal,    "TILE1_AOC_6.TILE1_AOC_6_gate_signal");
        sc_trace(tf, TILE1_AOC_6.aoc_release_signal, "TILE1_AOC_6.TILE1_AOC_6_release_signal");
        sc_trace(tf, TILE1_AOC_6.aoc_out,            "TILE1_AOC_6.TILE1_AOC_6_clb_output");

        TILE1_AOC_6_gate_customWave.out   (sig_TILE1_AOC_6_GATE);
        TILE1_AOC_6_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_6_release_customWave.out   (sig_TILE1_AOC_6_RELEASE);
        TILE1_AOC_6_release_customWave.clk   (sc_top_clock);

        TILE1_AOC_7.clk                  (sc_top_clock);
        TILE1_AOC_7.aoc_mux_ctrl         (sig_TILE1_AOC_7_MUX_CTRL);
        TILE1_AOC_7.boundary_in          (sig_TILE1_BOUNDARY_IN_out7);
        TILE1_AOC_7.clb_tile_output      (sig_TILE1_OUTLUT_7_OUT);
        TILE1_AOC_7.aoc_gate_signal      (sig_TILE1_AOC_7_GATE);
        TILE1_AOC_7.aoc_release_signal   (sig_TILE1_AOC_7_RELEASE);
        TILE1_AOC_7.aoc_out              (sig_TILE1_BOUNDARY_OUT_out7);

        sc_trace(tf, TILE1_AOC_7.aoc_mux_ctrl,       "TILE1_AOC_7.TILE1_AOC_7_mux_ctrl");
        sc_trace(tf, TILE1_AOC_7.boundary_in,        "TILE1_AOC_7.TILE1_AOC_7_mux_input_boundary_input");
        sc_trace(tf, TILE1_AOC_7.clb_tile_output,    "TILE1_AOC_7.TILE1_AOC_7_mux_input_clb_tile_output");
        sc_trace(tf, TILE1_AOC_7.aoc_gate_signal,    "TILE1_AOC_7.TILE1_AOC_7_gate_signal");
        sc_trace(tf, TILE1_AOC_7.aoc_release_signal, "TILE1_AOC_7.TILE1_AOC_7_release_signal");
        sc_trace(tf, TILE1_AOC_7.aoc_out,            "TILE1_AOC_7.TILE1_AOC_7_clb_output");

        TILE1_AOC_7_gate_customWave.out   (sig_TILE1_AOC_7_GATE);
        TILE1_AOC_7_gate_customWave.clk   (sc_top_clock);
        TILE1_AOC_7_release_customWave.out   (sig_TILE1_AOC_7_RELEASE);
        TILE1_AOC_7_release_customWave.clk   (sc_top_clock);

        TILE2_OUTLUT_0.i0        (sig_TILE2_BOUNDARY_IN_out3);
        TILE2_OUTLUT_0.i1        (sc_zero);
        TILE2_OUTLUT_0.i2        (sc_zero);

        TILE2_OUTLUT_0.OUT      (sig_TILE2_OUTLUT_0_OUT);
        TILE2_OUTLUT_0.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_0_fn);

        sc_trace(tf, TILE2_OUTLUT_0.i0,  "TILE2_OUTLUT_0.TILE2_OUTLUT_0_input0");
        sc_trace(tf, TILE2_OUTLUT_0.i1,  "TILE2_OUTLUT_0.TILE2_OUTLUT_0_input1");
        sc_trace(tf, TILE2_OUTLUT_0.i2,  "TILE2_OUTLUT_0.TILE2_OUTLUT_0_input2");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_OUTLUT_0.TILE2_OUTLUT_0_output");
        sc_trace(tf, TILE2_OUTLUT_0.OUTPUT_LUT_fn,  "TILE2_OUTLUT_0.TILE2_OUTLUT_0_output_equation");

        TILE2_OUTLUT_1.i0        (sig_TILE2_BOUNDARY_IN_out4);
        TILE2_OUTLUT_1.i1        (sc_zero);
        TILE2_OUTLUT_1.i2        (sc_zero);

        TILE2_OUTLUT_1.OUT      (sig_TILE2_OUTLUT_1_OUT);
        TILE2_OUTLUT_1.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_1_fn);

        sc_trace(tf, TILE2_OUTLUT_1.i0,  "TILE2_OUTLUT_1.TILE2_OUTLUT_1_input0");
        sc_trace(tf, TILE2_OUTLUT_1.i1,  "TILE2_OUTLUT_1.TILE2_OUTLUT_1_input1");
        sc_trace(tf, TILE2_OUTLUT_1.i2,  "TILE2_OUTLUT_1.TILE2_OUTLUT_1_input2");
        sc_trace(tf, TILE2_OUTLUT_1.OUT, "TILE2_OUTLUT_1.TILE2_OUTLUT_1_output");
        sc_trace(tf, TILE2_OUTLUT_1.OUTPUT_LUT_fn,  "TILE2_OUTLUT_1.TILE2_OUTLUT_1_output_equation");

        TILE2_OUTLUT_2.i0        (sc_zero);
        TILE2_OUTLUT_2.i1        (sc_zero);
        TILE2_OUTLUT_2.i2        (sc_zero);

        TILE2_OUTLUT_2.OUT      (sig_TILE2_OUTLUT_2_OUT);
        TILE2_OUTLUT_2.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_2_fn);

        sc_trace(tf, TILE2_OUTLUT_2.i0,  "TILE2_OUTLUT_2.TILE2_OUTLUT_2_input0");
        sc_trace(tf, TILE2_OUTLUT_2.i1,  "TILE2_OUTLUT_2.TILE2_OUTLUT_2_input1");
        sc_trace(tf, TILE2_OUTLUT_2.i2,  "TILE2_OUTLUT_2.TILE2_OUTLUT_2_input2");
        sc_trace(tf, TILE2_OUTLUT_2.OUT, "TILE2_OUTLUT_2.TILE2_OUTLUT_2_output");
        sc_trace(tf, TILE2_OUTLUT_2.OUTPUT_LUT_fn,  "TILE2_OUTLUT_2.TILE2_OUTLUT_2_output_equation");

        TILE2_OUTLUT_3.i0        (sc_zero);
        TILE2_OUTLUT_3.i1        (sc_zero);
        TILE2_OUTLUT_3.i2        (sc_zero);

        TILE2_OUTLUT_3.OUT      (sig_TILE2_OUTLUT_3_OUT);
        TILE2_OUTLUT_3.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_3_fn);

        sc_trace(tf, TILE2_OUTLUT_3.i0,  "TILE2_OUTLUT_3.TILE2_OUTLUT_3_input0");
        sc_trace(tf, TILE2_OUTLUT_3.i1,  "TILE2_OUTLUT_3.TILE2_OUTLUT_3_input1");
        sc_trace(tf, TILE2_OUTLUT_3.i2,  "TILE2_OUTLUT_3.TILE2_OUTLUT_3_input2");
        sc_trace(tf, TILE2_OUTLUT_3.OUT, "TILE2_OUTLUT_3.TILE2_OUTLUT_3_output");
        sc_trace(tf, TILE2_OUTLUT_3.OUTPUT_LUT_fn,  "TILE2_OUTLUT_3.TILE2_OUTLUT_3_output_equation");

        TILE2_OUTLUT_4.i0        (sig_TILE2_COUNTER_1_count_match1);
        TILE2_OUTLUT_4.i1        (sig_TILE2_FSM_0_OUT);
        TILE2_OUTLUT_4.i2        (sc_zero);

        TILE2_OUTLUT_4.OUT      (sig_TILE2_OUTLUT_4_OUT);
        TILE2_OUTLUT_4.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_4_fn);

        sc_trace(tf, TILE2_OUTLUT_4.i0,  "TILE2_OUTLUT_4.TILE2_OUTLUT_4_input0");
        sc_trace(tf, TILE2_OUTLUT_4.i1,  "TILE2_OUTLUT_4.TILE2_OUTLUT_4_input1");
        sc_trace(tf, TILE2_OUTLUT_4.i2,  "TILE2_OUTLUT_4.TILE2_OUTLUT_4_input2");
        sc_trace(tf, TILE2_OUTLUT_4.OUT, "TILE2_OUTLUT_4.TILE2_OUTLUT_4_output");
        sc_trace(tf, TILE2_OUTLUT_4.OUTPUT_LUT_fn,  "TILE2_OUTLUT_4.TILE2_OUTLUT_4_output_equation");

        TILE2_OUTLUT_5.i0        (sig_TILE2_BOUNDARY_IN_out6);
        TILE2_OUTLUT_5.i1        (sc_zero);
        TILE2_OUTLUT_5.i2        (sc_zero);

        TILE2_OUTLUT_5.OUT      (sig_TILE2_OUTLUT_5_OUT);
        TILE2_OUTLUT_5.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_5_fn);

        sc_trace(tf, TILE2_OUTLUT_5.i0,  "TILE2_OUTLUT_5.TILE2_OUTLUT_5_input0");
        sc_trace(tf, TILE2_OUTLUT_5.i1,  "TILE2_OUTLUT_5.TILE2_OUTLUT_5_input1");
        sc_trace(tf, TILE2_OUTLUT_5.i2,  "TILE2_OUTLUT_5.TILE2_OUTLUT_5_input2");
        sc_trace(tf, TILE2_OUTLUT_5.OUT, "TILE2_OUTLUT_5.TILE2_OUTLUT_5_output");
        sc_trace(tf, TILE2_OUTLUT_5.OUTPUT_LUT_fn,  "TILE2_OUTLUT_5.TILE2_OUTLUT_5_output_equation");

        TILE2_OUTLUT_6.i0        (sc_zero);
        TILE2_OUTLUT_6.i1        (sc_zero);
        TILE2_OUTLUT_6.i2        (sc_zero);

        TILE2_OUTLUT_6.OUT      (sig_TILE2_OUTLUT_6_OUT);
        TILE2_OUTLUT_6.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_6_fn);

        sc_trace(tf, TILE2_OUTLUT_6.i0,  "TILE2_OUTLUT_6.TILE2_OUTLUT_6_input0");
        sc_trace(tf, TILE2_OUTLUT_6.i1,  "TILE2_OUTLUT_6.TILE2_OUTLUT_6_input1");
        sc_trace(tf, TILE2_OUTLUT_6.i2,  "TILE2_OUTLUT_6.TILE2_OUTLUT_6_input2");
        sc_trace(tf, TILE2_OUTLUT_6.OUT, "TILE2_OUTLUT_6.TILE2_OUTLUT_6_output");
        sc_trace(tf, TILE2_OUTLUT_6.OUTPUT_LUT_fn,  "TILE2_OUTLUT_6.TILE2_OUTLUT_6_output_equation");

        TILE2_OUTLUT_7.i0        (sc_zero);
        TILE2_OUTLUT_7.i1        (sc_zero);
        TILE2_OUTLUT_7.i2        (sc_zero);

        TILE2_OUTLUT_7.OUT      (sig_TILE2_OUTLUT_7_OUT);
        TILE2_OUTLUT_7.OUTPUT_LUT_fn (sig_TILE2_OUTLUT_7_fn);

        sc_trace(tf, TILE2_OUTLUT_7.i0,  "TILE2_OUTLUT_7.TILE2_OUTLUT_7_input0");
        sc_trace(tf, TILE2_OUTLUT_7.i1,  "TILE2_OUTLUT_7.TILE2_OUTLUT_7_input1");
        sc_trace(tf, TILE2_OUTLUT_7.i2,  "TILE2_OUTLUT_7.TILE2_OUTLUT_7_input2");
        sc_trace(tf, TILE2_OUTLUT_7.OUT, "TILE2_OUTLUT_7.TILE2_OUTLUT_7_output");
        sc_trace(tf, TILE2_OUTLUT_7.OUTPUT_LUT_fn,  "TILE2_OUTLUT_7.TILE2_OUTLUT_7_output_equation");

        TILE2_LUT_0.i0        (sig_TILE2_BOUNDARY_IN_out1);
        TILE2_LUT_0.i1        (sig_TILE2_BOUNDARY_IN_out5);
        TILE2_LUT_0.i2        (sc_zero);
        TILE2_LUT_0.i3        (sc_zero);
        TILE2_LUT_0.OUT      (sig_TILE2_LUT_0_OUT);
        TILE2_LUT_0.LUT4_fn  (sig_TILE2_LUT_0_fn);

        sc_trace(tf, TILE2_LUT_0.i0,  "TILE2_LUT_0.TILE2_LUT_0_input0");
        sc_trace(tf, TILE2_LUT_0.i1,  "TILE2_LUT_0.TILE2_LUT_0_input1");
        sc_trace(tf, TILE2_LUT_0.i2,  "TILE2_LUT_0.TILE2_LUT_0_input2");
        sc_trace(tf, TILE2_LUT_0.i3,  "TILE2_LUT_0.TILE2_LUT_0_input3");
        sc_trace(tf, TILE2_LUT_0.OUT, "TILE2_LUT_0.TILE2_LUT_0_output");
        sc_trace(tf, TILE2_LUT_0.LUT4_fn, "TILE2_LUT_0.TILE2_LUT_0_output_equation");

        TILE2_LUT_1.i0        (sig_TILE2_COUNTER_1_count_match2);
        TILE2_LUT_1.i1        (sig_TILE2_FSM_0_OUT);
        TILE2_LUT_1.i2        (sc_zero);
        TILE2_LUT_1.i3        (sc_zero);
        TILE2_LUT_1.OUT      (sig_TILE2_LUT_1_OUT);
        TILE2_LUT_1.LUT4_fn  (sig_TILE2_LUT_1_fn);

        sc_trace(tf, TILE2_LUT_1.i0,  "TILE2_LUT_1.TILE2_LUT_1_input0");
        sc_trace(tf, TILE2_LUT_1.i1,  "TILE2_LUT_1.TILE2_LUT_1_input1");
        sc_trace(tf, TILE2_LUT_1.i2,  "TILE2_LUT_1.TILE2_LUT_1_input2");
        sc_trace(tf, TILE2_LUT_1.i3,  "TILE2_LUT_1.TILE2_LUT_1_input3");
        sc_trace(tf, TILE2_LUT_1.OUT, "TILE2_LUT_1.TILE2_LUT_1_output");
        sc_trace(tf, TILE2_LUT_1.LUT4_fn, "TILE2_LUT_1.TILE2_LUT_1_output_equation");

        TILE2_LUT_2.i0        (sig_TILE2_COUNTER_2_count_match1);
        TILE2_LUT_2.i1        (sig_TILE2_FSM_0_OUT);
        TILE2_LUT_2.i2        (sc_zero);
        TILE2_LUT_2.i3        (sc_zero);
        TILE2_LUT_2.OUT      (sig_TILE2_LUT_2_OUT);
        TILE2_LUT_2.LUT4_fn  (sig_TILE2_LUT_2_fn);

        sc_trace(tf, TILE2_LUT_2.i0,  "TILE2_LUT_2.TILE2_LUT_2_input0");
        sc_trace(tf, TILE2_LUT_2.i1,  "TILE2_LUT_2.TILE2_LUT_2_input1");
        sc_trace(tf, TILE2_LUT_2.i2,  "TILE2_LUT_2.TILE2_LUT_2_input2");
        sc_trace(tf, TILE2_LUT_2.i3,  "TILE2_LUT_2.TILE2_LUT_2_input3");
        sc_trace(tf, TILE2_LUT_2.OUT, "TILE2_LUT_2.TILE2_LUT_2_output");
        sc_trace(tf, TILE2_LUT_2.LUT4_fn, "TILE2_LUT_2.TILE2_LUT_2_output_equation");

        TILE2_FSM_0.e0        (sig_TILE2_COUNTER_0_count_match1);
        TILE2_FSM_0.e1        (sig_TILE2_LUT_0_OUT);
        TILE2_FSM_0.xe0        (sc_zero);
        TILE2_FSM_0.xe1        (sc_zero);
        TILE2_FSM_0.clk      (sc_top_clock);
        TILE2_FSM_0.glbl_en  (sc_top_enable);
        TILE2_FSM_0.glbl_rst_n(sc_top_reset);
        TILE2_FSM_0.EXT_SEL0 (sig_TILE2_FSM_0_xe0_sel);
        TILE2_FSM_0.EXT_SEL1 (sig_TILE2_FSM_0_xe1_sel);
        TILE2_FSM_0.S0_fn    (sig_TILE2_FSM_0_S0_fn);
        TILE2_FSM_0.S1_fn    (sig_TILE2_FSM_0_S1_fn);
        TILE2_FSM_0.OUT_LUT_fn(sig_TILE2_FSM_0_OUT_LUT_fn);
        TILE2_FSM_0.S0       (sig_TILE2_FSM_0_S0);
        TILE2_FSM_0.S1       (sig_TILE2_FSM_0_S1);
        TILE2_FSM_0.OUT      (sig_TILE2_FSM_0_OUT);

        sc_trace(tf, TILE2_FSM_0.clk,        "TILE2_FSM_0.TILE2_FSM_0_clock");
        sc_trace(tf, TILE2_FSM_0.glbl_en,    "TILE2_FSM_0.TILE2_FSM_0_global_en");
        sc_trace(tf, TILE2_FSM_0.glbl_rst_n, "TILE2_FSM_0.TILE2_FSM_0_global_reset");
        sc_trace(tf, TILE2_FSM_0.e0,         "TILE2_FSM_0.TILE2_FSM_0_external_input0");
        sc_trace(tf, TILE2_FSM_0.e1,         "TILE2_FSM_0.TILE2_FSM_0_external_input1");
        sc_trace(tf, TILE2_FSM_0.xe0,        "TILE2_FSM_0.TILE2_FSM_0_extra_external_input0");
        sc_trace(tf, TILE2_FSM_0.xe1,        "TILE2_FSM_0.TILE2_FSM_0_extra_external_input1");
        sc_trace(tf, TILE2_FSM_0.EXT_SEL0,   "TILE2_FSM_0.TILE2_FSM_0_extra_external_input_select0");
        sc_trace(tf, TILE2_FSM_0.EXT_SEL1,   "TILE2_FSM_0.TILE2_FSM_0_extra_external_input_select1");
        sc_trace(tf, TILE2_FSM_0.S0_fn,      "TILE2_FSM_0.TILE2_FSM_0_state0_equation_output");
        sc_trace(tf, TILE2_FSM_0.S1_fn,      "TILE2_FSM_0.TILE2_FSM_0_state1_equation_output");
        sc_trace(tf, TILE2_FSM_0.OUT_LUT_fn, "TILE2_FSM_0.TILE2_FSM_0_LUT_output_equation");
        sc_trace(tf, TILE2_FSM_0.S0,         "TILE2_FSM_0.TILE2_FSM_0_fsm_s0_output");
        sc_trace(tf, TILE2_FSM_0.S1,         "TILE2_FSM_0.TILE2_FSM_0_fsm_s1_output");
        sc_trace(tf, TILE2_FSM_0.OUT,        "TILE2_FSM_0.TILE2_FSM_0_fsm_lut_output");

        TILE2_FSM_1.e0        (sc_zero);
        TILE2_FSM_1.e1        (sc_zero);
        TILE2_FSM_1.xe0        (sc_zero);
        TILE2_FSM_1.xe1        (sc_zero);
        TILE2_FSM_1.clk      (sc_top_clock);
        TILE2_FSM_1.glbl_en  (sc_top_enable);
        TILE2_FSM_1.glbl_rst_n(sc_top_reset);
        TILE2_FSM_1.EXT_SEL0 (sig_TILE2_FSM_1_xe0_sel);
        TILE2_FSM_1.EXT_SEL1 (sig_TILE2_FSM_1_xe1_sel);
        TILE2_FSM_1.S0_fn    (sig_TILE2_FSM_1_S0_fn);
        TILE2_FSM_1.S1_fn    (sig_TILE2_FSM_1_S1_fn);
        TILE2_FSM_1.OUT_LUT_fn(sig_TILE2_FSM_1_OUT_LUT_fn);
        TILE2_FSM_1.S0       (sig_TILE2_FSM_1_S0);
        TILE2_FSM_1.S1       (sig_TILE2_FSM_1_S1);
        TILE2_FSM_1.OUT      (sig_TILE2_FSM_1_OUT);

        sc_trace(tf, TILE2_FSM_1.clk,        "TILE2_FSM_1.TILE2_FSM_1_clock");
        sc_trace(tf, TILE2_FSM_1.glbl_en,    "TILE2_FSM_1.TILE2_FSM_1_global_en");
        sc_trace(tf, TILE2_FSM_1.glbl_rst_n, "TILE2_FSM_1.TILE2_FSM_1_global_reset");
        sc_trace(tf, TILE2_FSM_1.e0,         "TILE2_FSM_1.TILE2_FSM_1_external_input0");
        sc_trace(tf, TILE2_FSM_1.e1,         "TILE2_FSM_1.TILE2_FSM_1_external_input1");
        sc_trace(tf, TILE2_FSM_1.xe0,        "TILE2_FSM_1.TILE2_FSM_1_extra_external_input0");
        sc_trace(tf, TILE2_FSM_1.xe1,        "TILE2_FSM_1.TILE2_FSM_1_extra_external_input1");
        sc_trace(tf, TILE2_FSM_1.EXT_SEL0,   "TILE2_FSM_1.TILE2_FSM_1_extra_external_input_select0");
        sc_trace(tf, TILE2_FSM_1.EXT_SEL1,   "TILE2_FSM_1.TILE2_FSM_1_extra_external_input_select1");
        sc_trace(tf, TILE2_FSM_1.S0_fn,      "TILE2_FSM_1.TILE2_FSM_1_state0_equation_output");
        sc_trace(tf, TILE2_FSM_1.S1_fn,      "TILE2_FSM_1.TILE2_FSM_1_state1_equation_output");
        sc_trace(tf, TILE2_FSM_1.OUT_LUT_fn, "TILE2_FSM_1.TILE2_FSM_1_LUT_output_equation");
        sc_trace(tf, TILE2_FSM_1.S0,         "TILE2_FSM_1.TILE2_FSM_1_fsm_s0_output");
        sc_trace(tf, TILE2_FSM_1.S1,         "TILE2_FSM_1.TILE2_FSM_1_fsm_s1_output");
        sc_trace(tf, TILE2_FSM_1.OUT,        "TILE2_FSM_1.TILE2_FSM_1_fsm_lut_output");

        TILE2_FSM_2.e0        (sig_TILE2_COUNTER_2_count_match1);
        TILE2_FSM_2.e1        (sig_TILE2_FSM_0_OUT);
        TILE2_FSM_2.xe0        (sc_zero);
        TILE2_FSM_2.xe1        (sc_zero);
        TILE2_FSM_2.clk      (sc_top_clock);
        TILE2_FSM_2.glbl_en  (sc_top_enable);
        TILE2_FSM_2.glbl_rst_n(sc_top_reset);
        TILE2_FSM_2.EXT_SEL0 (sig_TILE2_FSM_2_xe0_sel);
        TILE2_FSM_2.EXT_SEL1 (sig_TILE2_FSM_2_xe1_sel);
        TILE2_FSM_2.S0_fn    (sig_TILE2_FSM_2_S0_fn);
        TILE2_FSM_2.S1_fn    (sig_TILE2_FSM_2_S1_fn);
        TILE2_FSM_2.OUT_LUT_fn(sig_TILE2_FSM_2_OUT_LUT_fn);
        TILE2_FSM_2.S0       (sig_TILE2_FSM_2_S0);
        TILE2_FSM_2.S1       (sig_TILE2_FSM_2_S1);
        TILE2_FSM_2.OUT      (sig_TILE2_FSM_2_OUT);

        sc_trace(tf, TILE2_FSM_2.clk,        "TILE2_FSM_2.TILE2_FSM_2_clock");
        sc_trace(tf, TILE2_FSM_2.glbl_en,    "TILE2_FSM_2.TILE2_FSM_2_global_en");
        sc_trace(tf, TILE2_FSM_2.glbl_rst_n, "TILE2_FSM_2.TILE2_FSM_2_global_reset");
        sc_trace(tf, TILE2_FSM_2.e0,         "TILE2_FSM_2.TILE2_FSM_2_external_input0");
        sc_trace(tf, TILE2_FSM_2.e1,         "TILE2_FSM_2.TILE2_FSM_2_external_input1");
        sc_trace(tf, TILE2_FSM_2.xe0,        "TILE2_FSM_2.TILE2_FSM_2_extra_external_input0");
        sc_trace(tf, TILE2_FSM_2.xe1,        "TILE2_FSM_2.TILE2_FSM_2_extra_external_input1");
        sc_trace(tf, TILE2_FSM_2.EXT_SEL0,   "TILE2_FSM_2.TILE2_FSM_2_extra_external_input_select0");
        sc_trace(tf, TILE2_FSM_2.EXT_SEL1,   "TILE2_FSM_2.TILE2_FSM_2_extra_external_input_select1");
        sc_trace(tf, TILE2_FSM_2.S0_fn,      "TILE2_FSM_2.TILE2_FSM_2_state0_equation_output");
        sc_trace(tf, TILE2_FSM_2.S1_fn,      "TILE2_FSM_2.TILE2_FSM_2_state1_equation_output");
        sc_trace(tf, TILE2_FSM_2.OUT_LUT_fn, "TILE2_FSM_2.TILE2_FSM_2_LUT_output_equation");
        sc_trace(tf, TILE2_FSM_2.S0,         "TILE2_FSM_2.TILE2_FSM_2_fsm_s0_output");
        sc_trace(tf, TILE2_FSM_2.S1,         "TILE2_FSM_2.TILE2_FSM_2_fsm_s1_output");
        sc_trace(tf, TILE2_FSM_2.OUT,        "TILE2_FSM_2.TILE2_FSM_2_fsm_lut_output");

        TILE2_COUNTER_0.reset        (sig_TILE2_COUNTER_0_count_match1);
        TILE2_COUNTER_0.event        (sc_zero);
        TILE2_COUNTER_0.mode0        (sig_TILE2_COUNTER_2_count_match1);
        TILE2_COUNTER_0.mode1        (sc_one);
        TILE2_COUNTER_0.clk                  (sc_top_clock);
        TILE2_COUNTER_0.glbl_en              (sc_top_enable);
        TILE2_COUNTER_0.glbl_rst_n           (sc_top_reset);
        TILE2_COUNTER_0.add_shift_dir        (sig_TILE2_COUNTER_0_add_shift_dir);
        TILE2_COUNTER_0.add_shift_mode       (sig_TILE2_COUNTER_0_add_shift_mode);
        TILE2_COUNTER_0.add_shift_on_event_en(sig_TILE2_COUNTER_0_add_shift_on_event_en);
        TILE2_COUNTER_0.global_clk_en        (sig_TILE2_COUNTER_0_global_clk_en);//Unused
        TILE2_COUNTER_0.glbl_load_en         (sig_TILE2_COUNTER_0_glbl_load_en);//Unused
        TILE2_COUNTER_0.event_load_val       (sig_TILE2_COUNTER_0_event_load_val);
        TILE2_COUNTER_0.match_en             (sig_TILE2_COUNTER_0_match_en);//Unused
        TILE2_COUNTER_0.match1_val           (sig_TILE2_COUNTER_0_match1_val);
        TILE2_COUNTER_0.match2_val           (sig_TILE2_COUNTER_0_match2_val);
        TILE2_COUNTER_0.match1_reg_out       (sig_TILE2_COUNTER_0_match1_out);
        TILE2_COUNTER_0.match2_reg_out       (sig_TILE2_COUNTER_0_match2_out);
        TILE2_COUNTER_0.glbl_serializer_mode (sig_TILE2_COUNTER_0_glbl_serializer_mode);
        TILE2_COUNTER_0.hlc_count_load_val   (sig_TILE2_COUNTER_hlc_count_load_val);
        TILE2_COUNTER_0.hlc_count_load_en    (sig_TILE2_COUNTER_0_hlc_count_load_en);
        TILE2_COUNTER_0.hlc_match1_load_en   (sig_TILE2_COUNTER_0_hlc_match1_load_en);
        TILE2_COUNTER_0.hlc_match2_load_en   (sig_TILE2_COUNTER_0_hlc_match2_load_en);
        TILE2_COUNTER_0.count_out            (sig_TILE2_COUNTER_0_count_out);
        TILE2_COUNTER_0.count_zero           (sig_TILE2_COUNTER_0_count_zero);
        TILE2_COUNTER_0.count_match1         (sig_TILE2_COUNTER_0_count_match1);
        TILE2_COUNTER_0.count_match2         (sig_TILE2_COUNTER_0_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE2_COUNTER_0.lfsr_mode               (sig_TILE2_COUNTER_0_lfsr_mode);
        TILE2_COUNTER_0.match1_tap_en           (sig_TILE2_COUNTER_0_match1_tap_en);
        TILE2_COUNTER_0.match1_tap              (sig_TILE2_COUNTER_0_match1_tap);
        TILE2_COUNTER_0.match2_tap_en           (sig_TILE2_COUNTER_0_match2_tap_en);
        TILE2_COUNTER_0.match2_tap              (sig_TILE2_COUNTER_0_match2_tap);
#endif
#if TYPE == 3
        TILE2_COUNTER_0.RECONFIG_PIPELINE_EN    (sig_TILE2_COUNTER_0_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE2_COUNTER_0.clk,                 "TILE2_COUNTER_0.TILE2_COUNTER_0_clock");
        sc_trace(tf, TILE2_COUNTER_0.glbl_en,             "TILE2_COUNTER_0.TILE2_COUNTER_0_global_en");
        sc_trace(tf, TILE2_COUNTER_0.glbl_rst_n,          "TILE2_COUNTER_0.TILE2_COUNTER_0_global_reset");
        sc_trace(tf, TILE2_COUNTER_0.add_shift_dir,       "TILE2_COUNTER_0.TILE2_COUNTER_0_add_or_shift_dir");
        sc_trace(tf, TILE2_COUNTER_0.add_shift_mode,      "TILE2_COUNTER_0.TILE2_COUNTER_0_add_or_shift_mode");
        sc_trace(tf, TILE2_COUNTER_0.add_shift_on_event_en, "TILE2_COUNTER_0.TILE2_COUNTER_0_add_or_shift_on_event_en");
        sc_trace(tf, TILE2_COUNTER_0.event_load_val,      "TILE2_COUNTER_0.TILE2_COUNTER_0_event_load_val");
        sc_trace(tf, TILE2_COUNTER_0.match1_reg_out,      "TILE2_COUNTER_0.TILE2_COUNTER_0_match1_val");
        sc_trace(tf, TILE2_COUNTER_0.match2_reg_out,      "TILE2_COUNTER_0.TILE2_COUNTER_0_match2_val");
        sc_trace(tf, TILE2_COUNTER_0.glbl_serializer_mode,"TILE2_COUNTER_0.TILE2_COUNTER_0_global_serializer_en");
        sc_trace(tf, TILE2_COUNTER_0.hlc_count_load_val,  "TILE2_COUNTER_0.TILE2_COUNTER_0_hlc_counter_load_val");
        sc_trace(tf, TILE2_COUNTER_0.hlc_count_load_en,   "TILE2_COUNTER_0.TILE2_COUNTER_0_hlc_counter_load_en");
        sc_trace(tf, TILE2_COUNTER_0.hlc_match1_load_en,  "TILE2_COUNTER_0.TILE2_COUNTER_0_hlc_match1_load_en");
        sc_trace(tf, TILE2_COUNTER_0.hlc_match2_load_en,  "TILE2_COUNTER_0.TILE2_COUNTER_0_hlc_match2_load_en");
        sc_trace(tf, TILE2_COUNTER_0.count_out,           "TILE2_COUNTER_0.TILE2_COUNTER_0_counter_output");
        sc_trace(tf, TILE2_COUNTER_0.count_zero,          "TILE2_COUNTER_0.TILE2_COUNTER_0_counter_equals_zero");
        sc_trace(tf, TILE2_COUNTER_0.count_match1,        "TILE2_COUNTER_0.TILE2_COUNTER_0_counter_equals_match1");
        sc_trace(tf, TILE2_COUNTER_0.count_match2,        "TILE2_COUNTER_0.TILE2_COUNTER_0_counter_equals_match2");
        sc_trace(tf, TILE2_COUNTER_0.reset,               "TILE2_COUNTER_0.TILE2_COUNTER_0_counter_reset");
        sc_trace(tf, TILE2_COUNTER_0.event,               "TILE2_COUNTER_0.TILE2_COUNTER_0_event");
        sc_trace(tf, TILE2_COUNTER_0.mode0,        	 "TILE2_COUNTER_0.TILE2_COUNTER_0_mode0");
        sc_trace(tf, TILE2_COUNTER_0.mode1,        	 "TILE2_COUNTER_0.TILE2_COUNTER_0_mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE2_COUNTER_0.lfsr_mode    ,     "TILE2_COUNTER_0.TILE2_COUNTER_0_lfsr_en");
        sc_trace(tf, TILE2_COUNTER_0.match1_tap_en,     "TILE2_COUNTER_0.TILE2_COUNTER_0_match1_tap_en");
        sc_trace(tf, TILE2_COUNTER_0.match1_tap   ,     "TILE2_COUNTER_0.TILE2_COUNTER_0_match1_tap");
        sc_trace(tf, TILE2_COUNTER_0.match2_tap_en,     "TILE2_COUNTER_0.TILE2_COUNTER_0_match2_tap_en");
        sc_trace(tf, TILE2_COUNTER_0.match2_tap   ,     "TILE2_COUNTER_0.TILE2_COUNTER_0_match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE2_COUNTER_0.RECONFIG_PIPELINE_EN,     "TILE2_COUNTER_0.TILE2_COUNTER_0_reconfig_pipeline_en");
#endif
        TILE2_COUNTER_1.reset        (sc_zero);
        TILE2_COUNTER_1.event        (sig_TILE2_LUT_1_OUT);
        TILE2_COUNTER_1.mode0        (sig_TILE2_BOUNDARY_IN_out0);
        TILE2_COUNTER_1.mode1        (sc_one);
        TILE2_COUNTER_1.clk                  (sc_top_clock);
        TILE2_COUNTER_1.glbl_en              (sc_top_enable);
        TILE2_COUNTER_1.glbl_rst_n           (sc_top_reset);
        TILE2_COUNTER_1.add_shift_dir        (sig_TILE2_COUNTER_1_add_shift_dir);
        TILE2_COUNTER_1.add_shift_mode       (sig_TILE2_COUNTER_1_add_shift_mode);
        TILE2_COUNTER_1.add_shift_on_event_en(sig_TILE2_COUNTER_1_add_shift_on_event_en);
        TILE2_COUNTER_1.global_clk_en        (sig_TILE2_COUNTER_1_global_clk_en);//Unused
        TILE2_COUNTER_1.glbl_load_en         (sig_TILE2_COUNTER_1_glbl_load_en);//Unused
        TILE2_COUNTER_1.event_load_val       (sig_TILE2_COUNTER_1_event_load_val);
        TILE2_COUNTER_1.match_en             (sig_TILE2_COUNTER_1_match_en);//Unused
        TILE2_COUNTER_1.match1_val           (sig_TILE2_COUNTER_1_match1_val);
        TILE2_COUNTER_1.match2_val           (sig_TILE2_COUNTER_1_match2_val);
        TILE2_COUNTER_1.match1_reg_out       (sig_TILE2_COUNTER_1_match1_out);
        TILE2_COUNTER_1.match2_reg_out       (sig_TILE2_COUNTER_1_match2_out);
        TILE2_COUNTER_1.glbl_serializer_mode (sig_TILE2_COUNTER_1_glbl_serializer_mode);
        TILE2_COUNTER_1.hlc_count_load_val   (sig_TILE2_COUNTER_hlc_count_load_val);
        TILE2_COUNTER_1.hlc_count_load_en    (sig_TILE2_COUNTER_1_hlc_count_load_en);
        TILE2_COUNTER_1.hlc_match1_load_en   (sig_TILE2_COUNTER_1_hlc_match1_load_en);
        TILE2_COUNTER_1.hlc_match2_load_en   (sig_TILE2_COUNTER_1_hlc_match2_load_en);
        TILE2_COUNTER_1.count_out            (sig_TILE2_COUNTER_1_count_out);
        TILE2_COUNTER_1.count_zero           (sig_TILE2_COUNTER_1_count_zero);
        TILE2_COUNTER_1.count_match1         (sig_TILE2_COUNTER_1_count_match1);
        TILE2_COUNTER_1.count_match2         (sig_TILE2_COUNTER_1_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE2_COUNTER_1.lfsr_mode               (sig_TILE2_COUNTER_1_lfsr_mode);
        TILE2_COUNTER_1.match1_tap_en           (sig_TILE2_COUNTER_1_match1_tap_en);
        TILE2_COUNTER_1.match1_tap              (sig_TILE2_COUNTER_1_match1_tap);
        TILE2_COUNTER_1.match2_tap_en           (sig_TILE2_COUNTER_1_match2_tap_en);
        TILE2_COUNTER_1.match2_tap              (sig_TILE2_COUNTER_1_match2_tap);
#endif
#if TYPE == 3
        TILE2_COUNTER_1.RECONFIG_PIPELINE_EN    (sig_TILE2_COUNTER_1_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE2_COUNTER_1.clk,                 "TILE2_COUNTER_1.TILE2_COUNTER_1_clock");
        sc_trace(tf, TILE2_COUNTER_1.glbl_en,             "TILE2_COUNTER_1.TILE2_COUNTER_1_global_en");
        sc_trace(tf, TILE2_COUNTER_1.glbl_rst_n,          "TILE2_COUNTER_1.TILE2_COUNTER_1_global_reset");
        sc_trace(tf, TILE2_COUNTER_1.add_shift_dir,       "TILE2_COUNTER_1.TILE2_COUNTER_1_add_or_shift_dir");
        sc_trace(tf, TILE2_COUNTER_1.add_shift_mode,      "TILE2_COUNTER_1.TILE2_COUNTER_1_add_or_shift_mode");
        sc_trace(tf, TILE2_COUNTER_1.add_shift_on_event_en, "TILE2_COUNTER_1.TILE2_COUNTER_1_add_or_shift_on_event_en");
        sc_trace(tf, TILE2_COUNTER_1.event_load_val,      "TILE2_COUNTER_1.TILE2_COUNTER_1_event_load_val");
        sc_trace(tf, TILE2_COUNTER_1.match1_reg_out,      "TILE2_COUNTER_1.TILE2_COUNTER_1_match1_val");
        sc_trace(tf, TILE2_COUNTER_1.match2_reg_out,      "TILE2_COUNTER_1.TILE2_COUNTER_1_match2_val");
        sc_trace(tf, TILE2_COUNTER_1.glbl_serializer_mode,"TILE2_COUNTER_1.TILE2_COUNTER_1_global_serializer_en");
        sc_trace(tf, TILE2_COUNTER_1.hlc_count_load_val,  "TILE2_COUNTER_1.TILE2_COUNTER_1_hlc_counter_load_val");
        sc_trace(tf, TILE2_COUNTER_1.hlc_count_load_en,   "TILE2_COUNTER_1.TILE2_COUNTER_1_hlc_counter_load_en");
        sc_trace(tf, TILE2_COUNTER_1.hlc_match1_load_en,  "TILE2_COUNTER_1.TILE2_COUNTER_1_hlc_match1_load_en");
        sc_trace(tf, TILE2_COUNTER_1.hlc_match2_load_en,  "TILE2_COUNTER_1.TILE2_COUNTER_1_hlc_match2_load_en");
        sc_trace(tf, TILE2_COUNTER_1.count_out,           "TILE2_COUNTER_1.TILE2_COUNTER_1_counter_output");
        sc_trace(tf, TILE2_COUNTER_1.count_zero,          "TILE2_COUNTER_1.TILE2_COUNTER_1_counter_equals_zero");
        sc_trace(tf, TILE2_COUNTER_1.count_match1,        "TILE2_COUNTER_1.TILE2_COUNTER_1_counter_equals_match1");
        sc_trace(tf, TILE2_COUNTER_1.count_match2,        "TILE2_COUNTER_1.TILE2_COUNTER_1_counter_equals_match2");
        sc_trace(tf, TILE2_COUNTER_1.reset,               "TILE2_COUNTER_1.TILE2_COUNTER_1_counter_reset");
        sc_trace(tf, TILE2_COUNTER_1.event,               "TILE2_COUNTER_1.TILE2_COUNTER_1_event");
        sc_trace(tf, TILE2_COUNTER_1.mode0,        	 "TILE2_COUNTER_1.TILE2_COUNTER_1_mode0");
        sc_trace(tf, TILE2_COUNTER_1.mode1,        	 "TILE2_COUNTER_1.TILE2_COUNTER_1_mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE2_COUNTER_1.lfsr_mode    ,     "TILE2_COUNTER_1.TILE2_COUNTER_1_lfsr_en");
        sc_trace(tf, TILE2_COUNTER_1.match1_tap_en,     "TILE2_COUNTER_1.TILE2_COUNTER_1_match1_tap_en");
        sc_trace(tf, TILE2_COUNTER_1.match1_tap   ,     "TILE2_COUNTER_1.TILE2_COUNTER_1_match1_tap");
        sc_trace(tf, TILE2_COUNTER_1.match2_tap_en,     "TILE2_COUNTER_1.TILE2_COUNTER_1_match2_tap_en");
        sc_trace(tf, TILE2_COUNTER_1.match2_tap   ,     "TILE2_COUNTER_1.TILE2_COUNTER_1_match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE2_COUNTER_1.RECONFIG_PIPELINE_EN,     "TILE2_COUNTER_1.TILE2_COUNTER_1_reconfig_pipeline_en");
#endif
        TILE2_COUNTER_2.reset        (sig_TILE2_LUT_2_OUT);
        TILE2_COUNTER_2.event        (sc_zero);
        TILE2_COUNTER_2.mode0        (sig_TILE2_BOUNDARY_IN_out0);
        TILE2_COUNTER_2.mode1        (sc_one);
        TILE2_COUNTER_2.clk                  (sc_top_clock);
        TILE2_COUNTER_2.glbl_en              (sc_top_enable);
        TILE2_COUNTER_2.glbl_rst_n           (sc_top_reset);
        TILE2_COUNTER_2.add_shift_dir        (sig_TILE2_COUNTER_2_add_shift_dir);
        TILE2_COUNTER_2.add_shift_mode       (sig_TILE2_COUNTER_2_add_shift_mode);
        TILE2_COUNTER_2.add_shift_on_event_en(sig_TILE2_COUNTER_2_add_shift_on_event_en);
        TILE2_COUNTER_2.global_clk_en        (sig_TILE2_COUNTER_2_global_clk_en);//Unused
        TILE2_COUNTER_2.glbl_load_en         (sig_TILE2_COUNTER_2_glbl_load_en);//Unused
        TILE2_COUNTER_2.event_load_val       (sig_TILE2_COUNTER_2_event_load_val);
        TILE2_COUNTER_2.match_en             (sig_TILE2_COUNTER_2_match_en);//Unused
        TILE2_COUNTER_2.match1_val           (sig_TILE2_COUNTER_2_match1_val);
        TILE2_COUNTER_2.match2_val           (sig_TILE2_COUNTER_2_match2_val);
        TILE2_COUNTER_2.match1_reg_out       (sig_TILE2_COUNTER_2_match1_out);
        TILE2_COUNTER_2.match2_reg_out       (sig_TILE2_COUNTER_2_match2_out);
        TILE2_COUNTER_2.glbl_serializer_mode (sig_TILE2_COUNTER_2_glbl_serializer_mode);
        TILE2_COUNTER_2.hlc_count_load_val   (sig_TILE2_COUNTER_hlc_count_load_val);
        TILE2_COUNTER_2.hlc_count_load_en    (sig_TILE2_COUNTER_2_hlc_count_load_en);
        TILE2_COUNTER_2.hlc_match1_load_en   (sig_TILE2_COUNTER_2_hlc_match1_load_en);
        TILE2_COUNTER_2.hlc_match2_load_en   (sig_TILE2_COUNTER_2_hlc_match2_load_en);
        TILE2_COUNTER_2.count_out            (sig_TILE2_COUNTER_2_count_out);
        TILE2_COUNTER_2.count_zero           (sig_TILE2_COUNTER_2_count_zero);
        TILE2_COUNTER_2.count_match1         (sig_TILE2_COUNTER_2_count_match1);
        TILE2_COUNTER_2.count_match2         (sig_TILE2_COUNTER_2_count_match2);
#if TYPE == 2 || TYPE == 3
        TILE2_COUNTER_2.lfsr_mode               (sig_TILE2_COUNTER_2_lfsr_mode);
        TILE2_COUNTER_2.match1_tap_en           (sig_TILE2_COUNTER_2_match1_tap_en);
        TILE2_COUNTER_2.match1_tap              (sig_TILE2_COUNTER_2_match1_tap);
        TILE2_COUNTER_2.match2_tap_en           (sig_TILE2_COUNTER_2_match2_tap_en);
        TILE2_COUNTER_2.match2_tap              (sig_TILE2_COUNTER_2_match2_tap);
#endif
#if TYPE == 3
        TILE2_COUNTER_2.RECONFIG_PIPELINE_EN    (sig_TILE2_COUNTER_2_RECONFIG_PIPELINE_EN);
#endif
        sc_trace(tf, TILE2_COUNTER_2.clk,                 "TILE2_COUNTER_2.TILE2_COUNTER_2_clock");
        sc_trace(tf, TILE2_COUNTER_2.glbl_en,             "TILE2_COUNTER_2.TILE2_COUNTER_2_global_en");
        sc_trace(tf, TILE2_COUNTER_2.glbl_rst_n,          "TILE2_COUNTER_2.TILE2_COUNTER_2_global_reset");
        sc_trace(tf, TILE2_COUNTER_2.add_shift_dir,       "TILE2_COUNTER_2.TILE2_COUNTER_2_add_or_shift_dir");
        sc_trace(tf, TILE2_COUNTER_2.add_shift_mode,      "TILE2_COUNTER_2.TILE2_COUNTER_2_add_or_shift_mode");
        sc_trace(tf, TILE2_COUNTER_2.add_shift_on_event_en, "TILE2_COUNTER_2.TILE2_COUNTER_2_add_or_shift_on_event_en");
        sc_trace(tf, TILE2_COUNTER_2.event_load_val,      "TILE2_COUNTER_2.TILE2_COUNTER_2_event_load_val");
        sc_trace(tf, TILE2_COUNTER_2.match1_reg_out,      "TILE2_COUNTER_2.TILE2_COUNTER_2_match1_val");
        sc_trace(tf, TILE2_COUNTER_2.match2_reg_out,      "TILE2_COUNTER_2.TILE2_COUNTER_2_match2_val");
        sc_trace(tf, TILE2_COUNTER_2.glbl_serializer_mode,"TILE2_COUNTER_2.TILE2_COUNTER_2_global_serializer_en");
        sc_trace(tf, TILE2_COUNTER_2.hlc_count_load_val,  "TILE2_COUNTER_2.TILE2_COUNTER_2_hlc_counter_load_val");
        sc_trace(tf, TILE2_COUNTER_2.hlc_count_load_en,   "TILE2_COUNTER_2.TILE2_COUNTER_2_hlc_counter_load_en");
        sc_trace(tf, TILE2_COUNTER_2.hlc_match1_load_en,  "TILE2_COUNTER_2.TILE2_COUNTER_2_hlc_match1_load_en");
        sc_trace(tf, TILE2_COUNTER_2.hlc_match2_load_en,  "TILE2_COUNTER_2.TILE2_COUNTER_2_hlc_match2_load_en");
        sc_trace(tf, TILE2_COUNTER_2.count_out,           "TILE2_COUNTER_2.TILE2_COUNTER_2_counter_output");
        sc_trace(tf, TILE2_COUNTER_2.count_zero,          "TILE2_COUNTER_2.TILE2_COUNTER_2_counter_equals_zero");
        sc_trace(tf, TILE2_COUNTER_2.count_match1,        "TILE2_COUNTER_2.TILE2_COUNTER_2_counter_equals_match1");
        sc_trace(tf, TILE2_COUNTER_2.count_match2,        "TILE2_COUNTER_2.TILE2_COUNTER_2_counter_equals_match2");
        sc_trace(tf, TILE2_COUNTER_2.reset,               "TILE2_COUNTER_2.TILE2_COUNTER_2_counter_reset");
        sc_trace(tf, TILE2_COUNTER_2.event,               "TILE2_COUNTER_2.TILE2_COUNTER_2_event");
        sc_trace(tf, TILE2_COUNTER_2.mode0,        	 "TILE2_COUNTER_2.TILE2_COUNTER_2_mode0");
        sc_trace(tf, TILE2_COUNTER_2.mode1,        	 "TILE2_COUNTER_2.TILE2_COUNTER_2_mode1");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE2_COUNTER_2.lfsr_mode    ,     "TILE2_COUNTER_2.TILE2_COUNTER_2_lfsr_en");
        sc_trace(tf, TILE2_COUNTER_2.match1_tap_en,     "TILE2_COUNTER_2.TILE2_COUNTER_2_match1_tap_en");
        sc_trace(tf, TILE2_COUNTER_2.match1_tap   ,     "TILE2_COUNTER_2.TILE2_COUNTER_2_match1_tap");
        sc_trace(tf, TILE2_COUNTER_2.match2_tap_en,     "TILE2_COUNTER_2.TILE2_COUNTER_2_match2_tap_en");
        sc_trace(tf, TILE2_COUNTER_2.match2_tap   ,     "TILE2_COUNTER_2.TILE2_COUNTER_2_match2_tap");
#endif
#if TYPE == 3
        sc_trace(tf, TILE2_COUNTER_2.RECONFIG_PIPELINE_EN,     "TILE2_COUNTER_2.TILE2_COUNTER_2_reconfig_pipeline_en");
#endif
        TILE2_HLC.e0        (sig_TILE2_HLC_e0);
        sc_trace(tf, TILE2_HLC.e0, "TILE2_HLC.TILE2_HLC_program0_event_source");
        TILE2_HLC.e1        (sig_TILE2_HLC_e1);
        sc_trace(tf, TILE2_HLC.e1, "TILE2_HLC.TILE2_HLC_program1_event_source");
        TILE2_HLC.e2        (sig_TILE2_HLC_e2);
        sc_trace(tf, TILE2_HLC.e2, "TILE2_HLC.TILE2_HLC_program2_event_source");
        TILE2_HLC.e3        (sig_TILE2_HLC_e3);
        sc_trace(tf, TILE2_HLC.e3, "TILE2_HLC.TILE2_HLC_program3_event_source");
#if TYPE == 2 || TYPE == 3
        TILE2_HLC.ae0       (sig_TILE2_HLC_ae0);
        TILE2_HLC.ae1       (sig_TILE2_HLC_ae1);
        TILE2_HLC.ae2       (sig_TILE2_HLC_ae2);
        TILE2_HLC.ae3       (sig_TILE2_HLC_ae3);
        sc_trace(tf, TILE2_HLC.ae0,            "TILE2_HLC.TILE2_HLC_alternate_event_input_select0");
        sc_trace(tf, TILE2_HLC.ae1,            "TILE2_HLC.TILE2_HLC_alternate_event_input_select1");
        sc_trace(tf, TILE2_HLC.ae2,            "TILE2_HLC.TILE2_HLC_alternate_event_input_select2");
        sc_trace(tf, TILE2_HLC.ae3,            "TILE2_HLC.TILE2_HLC_alternate_event_input_select3");

        TILE2_HLC.clb_result_in[0] (sig_TILE2_OUTLUT_0_OUT);
        TILE2_HLC.clb_result_in[1] (sig_TILE2_OUTLUT_1_OUT);
        TILE2_HLC.clb_result_in[2] (sig_TILE2_OUTLUT_2_OUT);
        TILE2_HLC.clb_result_in[3] (sig_TILE2_OUTLUT_3_OUT);
        TILE2_HLC.clb_result_in[4] (sig_TILE2_OUTLUT_4_OUT);
        TILE2_HLC.clb_result_in[5] (sig_TILE2_OUTLUT_5_OUT);
        TILE2_HLC.clb_result_in[6] (sig_TILE2_OUTLUT_6_OUT);
        TILE2_HLC.clb_result_in[7] (sig_TILE2_OUTLUT_7_OUT);
        sc_trace(tf, TILE2_HLC.clb_result_in[0],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(0)");
        sc_trace(tf, TILE2_HLC.clb_result_in[1],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(1)");
        sc_trace(tf, TILE2_HLC.clb_result_in[2],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(2)");
        sc_trace(tf, TILE2_HLC.clb_result_in[3],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(3)");
        sc_trace(tf, TILE2_HLC.clb_result_in[4],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(4)");
        sc_trace(tf, TILE2_HLC.clb_result_in[5],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(5)");
        sc_trace(tf, TILE2_HLC.clb_result_in[6],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(6)");
        sc_trace(tf, TILE2_HLC.clb_result_in[7],           "TILE2_HLC.TILE2_HLC_alternate_event_clb_output(7)");

        TILE2_HLC.clb_async_result_in[0] (sig_TILE2_BOUNDARY_OUT_out0);
        TILE2_HLC.clb_async_result_in[1] (sig_TILE2_BOUNDARY_OUT_out1);
        TILE2_HLC.clb_async_result_in[2] (sig_TILE2_BOUNDARY_OUT_out2);
        TILE2_HLC.clb_async_result_in[3] (sig_TILE2_BOUNDARY_OUT_out3);
        TILE2_HLC.clb_async_result_in[4] (sig_TILE2_BOUNDARY_OUT_out4);
        TILE2_HLC.clb_async_result_in[5] (sig_TILE2_BOUNDARY_OUT_out5);
        TILE2_HLC.clb_async_result_in[6] (sig_TILE2_BOUNDARY_OUT_out6);
        TILE2_HLC.clb_async_result_in[7] (sig_TILE2_BOUNDARY_OUT_out7);
        sc_trace(tf, TILE2_HLC.clb_async_result_in[0],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(0)");
        sc_trace(tf, TILE2_HLC.clb_async_result_in[1],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(1)");
        sc_trace(tf, TILE2_HLC.clb_async_result_in[2],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(2)");
        sc_trace(tf, TILE2_HLC.clb_async_result_in[3],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(3)");
        sc_trace(tf, TILE2_HLC.clb_async_result_in[4],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(4)");
        sc_trace(tf, TILE2_HLC.clb_async_result_in[5],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(5)");
        sc_trace(tf, TILE2_HLC.clb_async_result_in[6],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(6)");
        sc_trace(tf, TILE2_HLC.clb_async_result_in[7],     "TILE2_HLC.TILE2_HLC_alternate_event_clb_async_output(7)");
#endif
#if TYPE == 3
        TILE2_HLC.RECONFIG_PIPELINE_EN       (sig_TILE2_HLC_RECONFIG_PIPELINE_EN);
        sc_trace(tf, TILE2_HLC.RECONFIG_PIPELINE_EN,            "TILE2_HLC.TILE2_HLC_reconfig_pipeline_enable");

        TILE2_HLC.SPI_RXBUFF_EN                    (sig_TILE2_HLC_SPI_EN);
        TILE2_HLC.P_spi_event_trig                 (sig_TILE2_HLC_SPI_EVENT_TRIGGER);
        TILE2_HLC.P_spi_shift_val                  (sig_TILE2_HLC_SPI_SHIFT_VAL);
        TILE2_HLC.P_spi_export                     (sig_TILE2_HLC_SPI_EXPORT_RXBUFF);

        sc_trace(tf, TILE2_HLC.SPI_RXBUFF_EN,      "TILE2_HLC.TILE2_HLC_spi_export_enable");
        sc_trace(tf, TILE2_HLC.P_spi_event_trig,   "TILE2_HLC.TILE2_HLC_spi_event_trigger");
        sc_trace(tf, TILE2_HLC.P_spi_shift_val,    "TILE2_HLC.TILE2_HLC_spi_shift_value");
        sc_trace(tf, TILE2_HLC.P_spi_export,       "TILE2_HLC.TILE2_HLC_spi_export_receive_buffer");
#endif
        TILE2_HLC.P_clk(sc_top_clock);
        TILE2_HLC.P_glbl_load_en(sc_top_enable);
        TILE2_HLC.P_rst_n(sc_top_reset);
        TILE2_HLC.P_curr_instr(sig_TILE2_HLC_P_curr_instr);
        TILE2_HLC.P_counter_in_0(sig_TILE2_COUNTER_0_count_out);
        TILE2_HLC.P_counter_in_1(sig_TILE2_COUNTER_1_count_out);
        TILE2_HLC.P_counter_in_2(sig_TILE2_COUNTER_2_count_out);
        TILE2_HLC.P_local_count_load_enable_0(sig_TILE2_COUNTER_0_hlc_count_load_en);
        TILE2_HLC.P_local_count_load_enable_1(sig_TILE2_COUNTER_1_hlc_count_load_en);
        TILE2_HLC.P_local_count_load_enable_2(sig_TILE2_COUNTER_2_hlc_count_load_en);
        TILE2_HLC.P_local_count_match1_enable_0(sig_TILE2_COUNTER_0_hlc_match1_load_en);
        TILE2_HLC.P_local_count_match1_enable_1(sig_TILE2_COUNTER_1_hlc_match1_load_en);
        TILE2_HLC.P_local_count_match1_enable_2(sig_TILE2_COUNTER_2_hlc_match1_load_en);
        TILE2_HLC.P_local_count_match2_enable_0(sig_TILE2_COUNTER_0_hlc_match2_load_en);
        TILE2_HLC.P_local_count_match2_enable_1(sig_TILE2_COUNTER_1_hlc_match2_load_en);
        TILE2_HLC.P_local_count_match2_enable_2(sig_TILE2_COUNTER_2_hlc_match2_load_en);

        sc_trace(tf, TILE2_HLC.P_clk,                              "TILE2_HLC.TILE2_HLC_program_clock");
        sc_trace(tf, TILE2_HLC.P_glbl_load_en,                     "TILE2_HLC.TILE2_HLC_program_global_load_en");
        sc_trace(tf, TILE2_HLC.P_rst_n,                            "TILE2_HLC.TILE2_HLC_program_reset");
        sc_trace(tf, TILE2_HLC.P_curr_instr,                       "TILE2_HLC.TILE2_HLC_program_current_instruction");
        sc_trace(tf, TILE2_HLC.P_counter_in_0,                     "TILE2_HLC.TILE2_HLC_counter0_value");
        sc_trace(tf, TILE2_HLC.P_counter_in_1,                     "TILE2_HLC.TILE2_HLC_counter1_value");
        sc_trace(tf, TILE2_HLC.P_counter_in_2,                     "TILE2_HLC.TILE2_HLC_counter2_value");

        sc_trace(tf, TILE2_HLC.P_local_count_load_enable_0,        "TILE2_HLC.TILE2_HLC_hlc_counter0_load_en");
        sc_trace(tf, TILE2_HLC.P_local_count_load_enable_1,        "TILE2_HLC.TILE2_HLC_hlc_counter1_load_en");
        sc_trace(tf, TILE2_HLC.P_local_count_load_enable_2,        "TILE2_HLC.TILE2_HLC_hlc_counter2_load_en");

        sc_trace(tf, TILE2_HLC.P_local_count_match1_enable_0,      "TILE2_HLC.TILE2_HLC_hlc_counter0_match1_load_en");
        sc_trace(tf, TILE2_HLC.P_local_count_match1_enable_1,      "TILE2_HLC.TILE2_HLC_hlc_counter1_match1_load_en");
        sc_trace(tf, TILE2_HLC.P_local_count_match1_enable_2,      "TILE2_HLC.TILE2_HLC_hlc_counter2_match1_load_en");

        sc_trace(tf, TILE2_HLC.P_local_count_match2_enable_0,      "TILE2_HLC.TILE2_HLC_hlc_counter0_match2_load_en");
        sc_trace(tf, TILE2_HLC.P_local_count_match2_enable_1,      "TILE2_HLC.TILE2_HLC_hlc_counter1_match2_load_en");
        sc_trace(tf, TILE2_HLC.P_local_count_match2_enable_2,      "TILE2_HLC.TILE2_HLC_hlc_counter2_match2_load_en");

        TILE2_HLC.P_EVENT_BUS_IN[0](sc_zero);
        TILE2_HLC.P_EVENT_BUS_IN[1](sig_TILE2_COUNTER_0_count_match2);
        TILE2_HLC.P_EVENT_BUS_IN[2](sig_TILE2_COUNTER_0_count_zero);
        TILE2_HLC.P_EVENT_BUS_IN[3](sig_TILE2_COUNTER_0_count_match1);
        TILE2_HLC.P_EVENT_BUS_IN[4](sig_TILE2_FSM_0_S0);
        TILE2_HLC.P_EVENT_BUS_IN[5](sig_TILE2_FSM_0_S1);
        TILE2_HLC.P_EVENT_BUS_IN[6](sig_TILE2_FSM_0_OUT);
        TILE2_HLC.P_EVENT_BUS_IN[7](sig_TILE2_LUT_0_OUT);
        TILE2_HLC.P_EVENT_BUS_IN[8](sc_one);
        TILE2_HLC.P_EVENT_BUS_IN[9](sig_TILE2_COUNTER_1_count_match2);
        TILE2_HLC.P_EVENT_BUS_IN[10](sig_TILE2_COUNTER_1_count_zero);
        TILE2_HLC.P_EVENT_BUS_IN[11](sig_TILE2_COUNTER_1_count_match1);
        TILE2_HLC.P_EVENT_BUS_IN[12](sig_TILE2_FSM_1_S0);
        TILE2_HLC.P_EVENT_BUS_IN[13](sig_TILE2_FSM_1_S1);
        TILE2_HLC.P_EVENT_BUS_IN[14](sig_TILE2_FSM_1_OUT);
        TILE2_HLC.P_EVENT_BUS_IN[15](sig_TILE2_LUT_1_OUT);
        TILE2_HLC.P_EVENT_BUS_IN[16](sc_zero);
        TILE2_HLC.P_EVENT_BUS_IN[17](sig_TILE2_COUNTER_2_count_match2);
        TILE2_HLC.P_EVENT_BUS_IN[18](sig_TILE2_COUNTER_2_count_zero);
        TILE2_HLC.P_EVENT_BUS_IN[19](sig_TILE2_COUNTER_2_count_match1);
        TILE2_HLC.P_EVENT_BUS_IN[20](sig_TILE2_FSM_2_S0);
        TILE2_HLC.P_EVENT_BUS_IN[21](sig_TILE2_FSM_2_S1);
        TILE2_HLC.P_EVENT_BUS_IN[22](sig_TILE2_FSM_2_OUT);
        TILE2_HLC.P_EVENT_BUS_IN[23](sig_TILE2_LUT_2_OUT);
        TILE2_HLC.P_EVENT_BUS_IN[24](sig_TILE2_BOUNDARY_IN_out0);
        TILE2_HLC.P_EVENT_BUS_IN[25](sig_TILE2_BOUNDARY_IN_out1);
        TILE2_HLC.P_EVENT_BUS_IN[26](sig_TILE2_BOUNDARY_IN_out2);
        TILE2_HLC.P_EVENT_BUS_IN[27](sig_TILE2_BOUNDARY_IN_out3);
        TILE2_HLC.P_EVENT_BUS_IN[28](sig_TILE2_BOUNDARY_IN_out4);
        TILE2_HLC.P_EVENT_BUS_IN[29](sig_TILE2_BOUNDARY_IN_out5);
        TILE2_HLC.P_EVENT_BUS_IN[30](sig_TILE2_BOUNDARY_IN_out6);
        TILE2_HLC.P_EVENT_BUS_IN[31](sig_TILE2_BOUNDARY_IN_out7);

        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[0], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(0)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[1], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(1)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[2], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(2)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[3], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(3)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[4], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(4)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[5], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(5)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[6], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(6)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[7], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(7)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[8], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(8)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[9], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(9)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[10], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(10)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[11], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(11)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[12], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(12)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[13], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(13)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[14], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(14)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[15], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(15)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[16], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(16)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[17], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(17)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[18], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(18)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[19], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(19)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[20], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(20)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[21], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(21)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[22], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(22)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[23], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(23)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[24], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(24)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[25], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(25)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[26], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(26)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[27], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(27)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[28], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(28)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[29], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(29)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[30], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(30)");
        sc_trace(tf, TILE2_HLC.P_EVENT_BUS_IN[31], "TILE2_HLC.TILE2_HLC_hlc_event_trigger(31)");


		TILE2_HLC.hlc_instructions[0](sig_TILE2_HLC_hlc_instr_0);
		TILE2_HLC.hlc_instructions[1](sig_TILE2_HLC_hlc_instr_1);
		TILE2_HLC.hlc_instructions[2](sig_TILE2_HLC_hlc_instr_2);
		TILE2_HLC.hlc_instructions[3](sig_TILE2_HLC_hlc_instr_3);
		TILE2_HLC.hlc_instructions[4](sig_TILE2_HLC_hlc_instr_4);
		TILE2_HLC.hlc_instructions[5](sig_TILE2_HLC_hlc_instr_5);
		TILE2_HLC.hlc_instructions[6](sig_TILE2_HLC_hlc_instr_6);
		TILE2_HLC.hlc_instructions[7](sig_TILE2_HLC_hlc_instr_7);
		TILE2_HLC.hlc_instructions[8](sig_TILE2_HLC_hlc_instr_8);
		TILE2_HLC.hlc_instructions[9](sig_TILE2_HLC_hlc_instr_9);
		TILE2_HLC.hlc_instructions[10](sig_TILE2_HLC_hlc_instr_10);
		TILE2_HLC.hlc_instructions[11](sig_TILE2_HLC_hlc_instr_11);
		TILE2_HLC.hlc_instructions[12](sig_TILE2_HLC_hlc_instr_12);
		TILE2_HLC.hlc_instructions[13](sig_TILE2_HLC_hlc_instr_13);
		TILE2_HLC.hlc_instructions[14](sig_TILE2_HLC_hlc_instr_14);
		TILE2_HLC.hlc_instructions[15](sig_TILE2_HLC_hlc_instr_15);
		TILE2_HLC.hlc_instructions[16](sig_TILE2_HLC_hlc_instr_16);
		TILE2_HLC.hlc_instructions[17](sig_TILE2_HLC_hlc_instr_17);
		TILE2_HLC.hlc_instructions[18](sig_TILE2_HLC_hlc_instr_18);
		TILE2_HLC.hlc_instructions[19](sig_TILE2_HLC_hlc_instr_19);
		TILE2_HLC.hlc_instructions[20](sig_TILE2_HLC_hlc_instr_20);
		TILE2_HLC.hlc_instructions[21](sig_TILE2_HLC_hlc_instr_21);
		TILE2_HLC.hlc_instructions[22](sig_TILE2_HLC_hlc_instr_22);
		TILE2_HLC.hlc_instructions[23](sig_TILE2_HLC_hlc_instr_23);
		TILE2_HLC.hlc_instructions[24](sig_TILE2_HLC_hlc_instr_24);
		TILE2_HLC.hlc_instructions[25](sig_TILE2_HLC_hlc_instr_25);
		TILE2_HLC.hlc_instructions[26](sig_TILE2_HLC_hlc_instr_26);
		TILE2_HLC.hlc_instructions[27](sig_TILE2_HLC_hlc_instr_27);
		TILE2_HLC.hlc_instructions[28](sig_TILE2_HLC_hlc_instr_28);
		TILE2_HLC.hlc_instructions[29](sig_TILE2_HLC_hlc_instr_29);
		TILE2_HLC.hlc_instructions[30](sig_TILE2_HLC_hlc_instr_30);
		TILE2_HLC.hlc_instructions[31](sig_TILE2_HLC_hlc_instr_31);

        //sc_trace(tf, TILE2_HLC.hlc_instructions[0], "TILE2_HLC.TILE2_HLC_hlc_instruction(0)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[1], "TILE2_HLC.TILE2_HLC_hlc_instruction(1)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[2], "TILE2_HLC.TILE2_HLC_hlc_instruction(2)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[3], "TILE2_HLC.TILE2_HLC_hlc_instruction(3)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[4], "TILE2_HLC.TILE2_HLC_hlc_instruction(4)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[5], "TILE2_HLC.TILE2_HLC_hlc_instruction(5)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[6], "TILE2_HLC.TILE2_HLC_hlc_instruction(6)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[7], "TILE2_HLC.TILE2_HLC_hlc_instruction(7)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[8], "TILE2_HLC.TILE2_HLC_hlc_instruction(8)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[9], "TILE2_HLC.TILE2_HLC_hlc_instruction(9)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[10], "TILE2_HLC.TILE2_HLC_hlc_instruction(10)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[11], "TILE2_HLC.TILE2_HLC_hlc_instruction(11)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[12], "TILE2_HLC.TILE2_HLC_hlc_instruction(12)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[13], "TILE2_HLC.TILE2_HLC_hlc_instruction(13)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[14], "TILE2_HLC.TILE2_HLC_hlc_instruction(14)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[15], "TILE2_HLC.TILE2_HLC_hlc_instruction(15)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[16], "TILE2_HLC.TILE2_HLC_hlc_instruction(16)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[17], "TILE2_HLC.TILE2_HLC_hlc_instruction(17)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[18], "TILE2_HLC.TILE2_HLC_hlc_instruction(18)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[19], "TILE2_HLC.TILE2_HLC_hlc_instruction(19)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[20], "TILE2_HLC.TILE2_HLC_hlc_instruction(20)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[21], "TILE2_HLC.TILE2_HLC_hlc_instruction(21)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[22], "TILE2_HLC.TILE2_HLC_hlc_instruction(22)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[23], "TILE2_HLC.TILE2_HLC_hlc_instruction(23)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[24], "TILE2_HLC.TILE2_HLC_hlc_instruction(24)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[25], "TILE2_HLC.TILE2_HLC_hlc_instruction(25)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[26], "TILE2_HLC.TILE2_HLC_hlc_instruction(26)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[27], "TILE2_HLC.TILE2_HLC_hlc_instruction(27)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[28], "TILE2_HLC.TILE2_HLC_hlc_instruction(28)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[29], "TILE2_HLC.TILE2_HLC_hlc_instruction(29)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[30], "TILE2_HLC.TILE2_HLC_hlc_instruction(30)");
        //sc_trace(tf, TILE2_HLC.hlc_instructions[31], "TILE2_HLC.TILE2_HLC_hlc_instruction(31)");
		
		
        TILE2_HLC.P_counter_load_bus(sig_TILE2_COUNTER_hlc_count_load_val);
        sc_trace(tf, TILE2_HLC.P_counter_load_bus, "TILE2_HLC.TILE2_HLC_counter_hlc_load_value");

        TILE2_HLC.P_comm_R0_out(sig_TILE2_HLC_P_comm_R0_out);
        TILE2_HLC.P_comm_R1_out(sig_TILE2_HLC_P_comm_R1_out);
        TILE2_HLC.P_comm_R2_out(sig_TILE2_HLC_P_comm_R2_out);
        TILE2_HLC.P_comm_R3_out(sig_TILE2_HLC_P_comm_R3_out);

        sc_trace(tf, TILE2_HLC.P_comm_R0_out, "TILE2_HLC.TILE2_HLC_register(0)");
        sc_trace(tf, TILE2_HLC.P_comm_R1_out, "TILE2_HLC.TILE2_HLC_register(1)");
        sc_trace(tf, TILE2_HLC.P_comm_R2_out, "TILE2_HLC.TILE2_HLC_register(2)");
        sc_trace(tf, TILE2_HLC.P_comm_R3_out, "TILE2_HLC.TILE2_HLC_register(3)");

        TILE2_HLC.P_pull_fifo[0](sig_TILE2_HLC_P_pull_fifo0_out);
        TILE2_HLC.P_pull_fifo[1](sig_TILE2_HLC_P_pull_fifo1_out);
        TILE2_HLC.P_pull_fifo[2](sig_TILE2_HLC_P_pull_fifo2_out);
        TILE2_HLC.P_pull_fifo[3](sig_TILE2_HLC_P_pull_fifo3_out);
        
        TILE2_HLC.P_push_fifo[0](sig_TILE2_HLC_P_push_fifo0_out);
        TILE2_HLC.P_push_fifo[1](sig_TILE2_HLC_P_push_fifo1_out);
        TILE2_HLC.P_push_fifo[2](sig_TILE2_HLC_P_push_fifo2_out);
        TILE2_HLC.P_push_fifo[3](sig_TILE2_HLC_P_push_fifo3_out);

        TILE2_HLC.P_fifo_read_ptr(sig_TILE2_HLC_P_fifo_read_ptr);
        TILE2_HLC.P_fifo_write_ptr(sig_TILE2_HLC_P_fifo_write_ptr);
        TILE2_HLC.P_fifo_underflow(sig_TILE2_HLC_P_fifo_underflow);
        TILE2_HLC.P_fifo_overflow(sig_TILE2_HLC_P_fifo_overflow);
        TILE2_HLC.fifo_refill_enable(sig_TILE2_HLC_P_fifo_refill_enable);

        sc_trace(tf, TILE2_HLC.P_pull_fifo[0], "TILE2_HLC.TILE2_HLC_pull_fifo(0)");
        sc_trace(tf, TILE2_HLC.P_pull_fifo[1], "TILE2_HLC.TILE2_HLC_pull_fifo(1)");
        sc_trace(tf, TILE2_HLC.P_pull_fifo[2], "TILE2_HLC.TILE2_HLC_pull_fifo(2)");
        sc_trace(tf, TILE2_HLC.P_pull_fifo[3], "TILE2_HLC.TILE2_HLC_pull_fifo(3)");
        
        sc_trace(tf, TILE2_HLC.P_push_fifo[0], "TILE2_HLC.TILE2_HLC_push_fifo(0)");
        sc_trace(tf, TILE2_HLC.P_push_fifo[1], "TILE2_HLC.TILE2_HLC_push_fifo(1)");
        sc_trace(tf, TILE2_HLC.P_push_fifo[2], "TILE2_HLC.TILE2_HLC_push_fifo(2)");
        sc_trace(tf, TILE2_HLC.P_push_fifo[3], "TILE2_HLC.TILE2_HLC_push_fifo(3)");

        sc_trace(tf, TILE2_HLC.P_fifo_read_ptr,    "TILE2_HLC.TILE2_HLC_fifo_read_pointer");
        sc_trace(tf, TILE2_HLC.P_fifo_write_ptr,   "TILE2_HLC.TILE2_HLC_fifo_write_pointer");
        sc_trace(tf, TILE2_HLC.P_fifo_underflow,   "TILE2_HLC.TILE2_HLC_fifo_underflow_signal");
        sc_trace(tf, TILE2_HLC.P_fifo_overflow,    "TILE2_HLC.TILE2_HLC_fifo_overflow_signal");

        TILE2_HLC.P_push_data_en  (sig_TILE2_HLC_P_push_data_en);
        TILE2_HLC.P_push_data_out (sig_TILE2_HLC_P_push_data_out);
        TILE2_HLC.P_pull_data_en  (sig_TILE2_HLC_P_pull_data_en);
        TILE2_HLC.P_set_intr_flag (sig_TILE2_HLC_P_set_intr_flag);
        TILE2_HLC.P_intr_val      (sig_TILE2_HLC_P_intr_val);

        //sc_trace(tf, TILE2_HLC.P_push_data_en,  "TILE2_HLC.TILE2_HLC_program_push_data_en");
        //sc_trace(tf, TILE2_HLC.P_push_data_out, "TILE2_HLC.TILE2_HLC_program_push_data_out");
        //sc_trace(tf, TILE2_HLC.P_pull_data_en,  "TILE2_HLC.TILE2_HLC_program_pull_data_en");
        sc_trace(tf, TILE2_HLC.P_set_intr_flag, "TILE2_HLC.TILE2_HLC_program_interrupt_flag");
        sc_trace(tf, TILE2_HLC.P_intr_val,      "TILE2_HLC.TILE2_HLC_program_interrupt_number");

        TILE2_BOUNDARY_IN.clk                  (sc_top_clock);
        TILE2_BOUNDARY_IN.in0_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl0);
        TILE2_BOUNDARY_IN.in1_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl1);
        TILE2_BOUNDARY_IN.in2_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl2);
        TILE2_BOUNDARY_IN.in3_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl3);
        TILE2_BOUNDARY_IN.in4_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl4);
        TILE2_BOUNDARY_IN.in5_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl5);
        TILE2_BOUNDARY_IN.in6_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl6);
        TILE2_BOUNDARY_IN.in7_ctrl             (sig_TILE2_BOUNDARY_IN_ctrl7);
        TILE2_BOUNDARY_IN.out0                 (sig_TILE2_BOUNDARY_IN_out0);
        TILE2_BOUNDARY_IN.out1                 (sig_TILE2_BOUNDARY_IN_out1);
        TILE2_BOUNDARY_IN.out2                 (sig_TILE2_BOUNDARY_IN_out2);
        TILE2_BOUNDARY_IN.out3                 (sig_TILE2_BOUNDARY_IN_out3);
        TILE2_BOUNDARY_IN.out4                 (sig_TILE2_BOUNDARY_IN_out4);
        TILE2_BOUNDARY_IN.out5                 (sig_TILE2_BOUNDARY_IN_out5);
        TILE2_BOUNDARY_IN.out6                 (sig_TILE2_BOUNDARY_IN_out6);
        TILE2_BOUNDARY_IN.out7                 (sig_TILE2_BOUNDARY_IN_out7);

        if (TILE2_BOUNDARY_IN.in0.size() == 0) TILE2_BOUNDARY_IN.in0(sc_zero);
        if (TILE2_BOUNDARY_IN.in1.size() == 0) TILE2_BOUNDARY_IN.in1(sc_zero);
        if (TILE2_BOUNDARY_IN.in2.size() == 0) TILE2_BOUNDARY_IN.in2(sc_zero);
        if (TILE2_BOUNDARY_IN.in3.size() == 0) TILE2_BOUNDARY_IN.in3(sc_zero);
        if (TILE2_BOUNDARY_IN.in4.size() == 0) TILE2_BOUNDARY_IN.in4(sc_zero);
        if (TILE2_BOUNDARY_IN.in5.size() == 0) TILE2_BOUNDARY_IN.in5(sc_zero);
        if (TILE2_BOUNDARY_IN.in6.size() == 0) TILE2_BOUNDARY_IN.in6(sc_zero);
        if (TILE2_BOUNDARY_IN.in7.size() == 0) TILE2_BOUNDARY_IN.in7(sc_zero);
        sc_trace(tf, TILE2_BOUNDARY_IN.clk, "TILE2_BOUNDARY.TILE2_BOUNDARY_clock");
        sc_trace(tf, TILE2_BOUNDARY_IN.in0, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input0");
        sc_trace(tf, TILE2_BOUNDARY_IN.in1, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input1");
        sc_trace(tf, TILE2_BOUNDARY_IN.in2, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input2");
        sc_trace(tf, TILE2_BOUNDARY_IN.in3, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input3");
        sc_trace(tf, TILE2_BOUNDARY_IN.in4, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input4");
        sc_trace(tf, TILE2_BOUNDARY_IN.in5, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input5");
        sc_trace(tf, TILE2_BOUNDARY_IN.in6, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input6");
        sc_trace(tf, TILE2_BOUNDARY_IN.in7, "TILE2_BOUNDARY.TILE2_BOUNDARY_original_input7");
        sc_trace(tf, TILE2_BOUNDARY_IN.in0_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input0_ctrl");
        sc_trace(tf, TILE2_BOUNDARY_IN.in1_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input1_ctrl");
        sc_trace(tf, TILE2_BOUNDARY_IN.in2_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input2_ctrl");
        sc_trace(tf, TILE2_BOUNDARY_IN.in3_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input3_ctrl");
        sc_trace(tf, TILE2_BOUNDARY_IN.in4_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input4_ctrl");
        sc_trace(tf, TILE2_BOUNDARY_IN.in5_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input5_ctrl");
        sc_trace(tf, TILE2_BOUNDARY_IN.in6_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input6_ctrl");
        sc_trace(tf, TILE2_BOUNDARY_IN.in7_ctrl, "TILE2_BOUNDARY.TILE2_BOUNDARY_input7_ctrl");
#if TYPE == 2 || TYPE == 3
        sc_trace(tf, TILE2_AOC_0.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output0");
        sc_trace(tf, TILE2_AOC_1.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output1");
        sc_trace(tf, TILE2_AOC_2.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output2");
        sc_trace(tf, TILE2_AOC_3.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output3");
        sc_trace(tf, TILE2_AOC_4.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output4");
        sc_trace(tf, TILE2_AOC_5.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output5");
        sc_trace(tf, TILE2_AOC_6.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output6");
        sc_trace(tf, TILE2_AOC_7.aoc_out, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output7");
#elif TYPE == 1
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output0");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output1");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output2");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output3");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output4");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output5");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output6");
        sc_trace(tf, TILE2_OUTLUT_0.OUT, "TILE2_BOUNDARY.TILE2_BOUNDARY_CLB_output7");
#endif
        sc_trace(tf, TILE2_BOUNDARY_IN.out0, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input0");
        sc_trace(tf, TILE2_BOUNDARY_IN.out1, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input1");
        sc_trace(tf, TILE2_BOUNDARY_IN.out2, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input2");
        sc_trace(tf, TILE2_BOUNDARY_IN.out3, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input3");
        sc_trace(tf, TILE2_BOUNDARY_IN.out4, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input4");
        sc_trace(tf, TILE2_BOUNDARY_IN.out5, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input5");
        sc_trace(tf, TILE2_BOUNDARY_IN.out6, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input6");
        sc_trace(tf, TILE2_BOUNDARY_IN.out7, "TILE2_BOUNDARY.TILE2_BOUNDARY_muxed_and_filtered_input7");

        TILE2_AOC_0.clk                  (sc_top_clock);
        TILE2_AOC_0.aoc_mux_ctrl         (sig_TILE2_AOC_0_MUX_CTRL);
        TILE2_AOC_0.boundary_in          (sig_TILE2_BOUNDARY_IN_out0);
        TILE2_AOC_0.clb_tile_output      (sig_TILE2_OUTLUT_0_OUT);
        TILE2_AOC_0.aoc_gate_signal      (sig_TILE2_AOC_0_GATE);
        TILE2_AOC_0.aoc_release_signal   (sig_TILE2_AOC_0_RELEASE);
        TILE2_AOC_0.aoc_out              (sig_TILE2_BOUNDARY_OUT_out0);

        sc_trace(tf, TILE2_AOC_0.aoc_mux_ctrl,       "TILE2_AOC_0.TILE2_AOC_0_mux_ctrl");
        sc_trace(tf, TILE2_AOC_0.boundary_in,        "TILE2_AOC_0.TILE2_AOC_0_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_0.clb_tile_output,    "TILE2_AOC_0.TILE2_AOC_0_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_0.aoc_gate_signal,    "TILE2_AOC_0.TILE2_AOC_0_gate_signal");
        sc_trace(tf, TILE2_AOC_0.aoc_release_signal, "TILE2_AOC_0.TILE2_AOC_0_release_signal");
        sc_trace(tf, TILE2_AOC_0.aoc_out,            "TILE2_AOC_0.TILE2_AOC_0_clb_output");

        TILE2_AOC_0_gate_customWave.out   (sig_TILE2_AOC_0_GATE);
        TILE2_AOC_0_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_0_release_customWave.out   (sig_TILE2_AOC_0_RELEASE);
        TILE2_AOC_0_release_customWave.clk   (sc_top_clock);

        TILE2_AOC_1.clk                  (sc_top_clock);
        TILE2_AOC_1.aoc_mux_ctrl         (sig_TILE2_AOC_1_MUX_CTRL);
        TILE2_AOC_1.boundary_in          (sig_TILE2_BOUNDARY_IN_out1);
        TILE2_AOC_1.clb_tile_output      (sig_TILE2_OUTLUT_1_OUT);
        TILE2_AOC_1.aoc_gate_signal      (sig_TILE2_AOC_1_GATE);
        TILE2_AOC_1.aoc_release_signal   (sig_TILE2_AOC_1_RELEASE);
        TILE2_AOC_1.aoc_out              (sig_TILE2_BOUNDARY_OUT_out1);

        sc_trace(tf, TILE2_AOC_1.aoc_mux_ctrl,       "TILE2_AOC_1.TILE2_AOC_1_mux_ctrl");
        sc_trace(tf, TILE2_AOC_1.boundary_in,        "TILE2_AOC_1.TILE2_AOC_1_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_1.clb_tile_output,    "TILE2_AOC_1.TILE2_AOC_1_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_1.aoc_gate_signal,    "TILE2_AOC_1.TILE2_AOC_1_gate_signal");
        sc_trace(tf, TILE2_AOC_1.aoc_release_signal, "TILE2_AOC_1.TILE2_AOC_1_release_signal");
        sc_trace(tf, TILE2_AOC_1.aoc_out,            "TILE2_AOC_1.TILE2_AOC_1_clb_output");

        TILE2_AOC_1_gate_customWave.out   (sig_TILE2_AOC_1_GATE);
        TILE2_AOC_1_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_1_release_customWave.out   (sig_TILE2_AOC_1_RELEASE);
        TILE2_AOC_1_release_customWave.clk   (sc_top_clock);

        TILE2_AOC_2.clk                  (sc_top_clock);
        TILE2_AOC_2.aoc_mux_ctrl         (sig_TILE2_AOC_2_MUX_CTRL);
        TILE2_AOC_2.boundary_in          (sig_TILE2_BOUNDARY_IN_out2);
        TILE2_AOC_2.clb_tile_output      (sig_TILE2_OUTLUT_2_OUT);
        TILE2_AOC_2.aoc_gate_signal      (sig_TILE2_AOC_2_GATE);
        TILE2_AOC_2.aoc_release_signal   (sig_TILE2_AOC_2_RELEASE);
        TILE2_AOC_2.aoc_out              (sig_TILE2_BOUNDARY_OUT_out2);

        sc_trace(tf, TILE2_AOC_2.aoc_mux_ctrl,       "TILE2_AOC_2.TILE2_AOC_2_mux_ctrl");
        sc_trace(tf, TILE2_AOC_2.boundary_in,        "TILE2_AOC_2.TILE2_AOC_2_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_2.clb_tile_output,    "TILE2_AOC_2.TILE2_AOC_2_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_2.aoc_gate_signal,    "TILE2_AOC_2.TILE2_AOC_2_gate_signal");
        sc_trace(tf, TILE2_AOC_2.aoc_release_signal, "TILE2_AOC_2.TILE2_AOC_2_release_signal");
        sc_trace(tf, TILE2_AOC_2.aoc_out,            "TILE2_AOC_2.TILE2_AOC_2_clb_output");

        TILE2_AOC_2_gate_customWave.out   (sig_TILE2_AOC_2_GATE);
        TILE2_AOC_2_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_2_release_customWave.out   (sig_TILE2_AOC_2_RELEASE);
        TILE2_AOC_2_release_customWave.clk   (sc_top_clock);

        TILE2_AOC_3.clk                  (sc_top_clock);
        TILE2_AOC_3.aoc_mux_ctrl         (sig_TILE2_AOC_3_MUX_CTRL);
        TILE2_AOC_3.boundary_in          (sig_TILE2_BOUNDARY_IN_out3);
        TILE2_AOC_3.clb_tile_output      (sig_TILE2_OUTLUT_3_OUT);
        TILE2_AOC_3.aoc_gate_signal      (sig_TILE2_AOC_3_GATE);
        TILE2_AOC_3.aoc_release_signal   (sig_TILE2_AOC_3_RELEASE);
        TILE2_AOC_3.aoc_out              (sig_TILE2_BOUNDARY_OUT_out3);

        sc_trace(tf, TILE2_AOC_3.aoc_mux_ctrl,       "TILE2_AOC_3.TILE2_AOC_3_mux_ctrl");
        sc_trace(tf, TILE2_AOC_3.boundary_in,        "TILE2_AOC_3.TILE2_AOC_3_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_3.clb_tile_output,    "TILE2_AOC_3.TILE2_AOC_3_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_3.aoc_gate_signal,    "TILE2_AOC_3.TILE2_AOC_3_gate_signal");
        sc_trace(tf, TILE2_AOC_3.aoc_release_signal, "TILE2_AOC_3.TILE2_AOC_3_release_signal");
        sc_trace(tf, TILE2_AOC_3.aoc_out,            "TILE2_AOC_3.TILE2_AOC_3_clb_output");

        TILE2_AOC_3_gate_customWave.out   (sig_TILE2_AOC_3_GATE);
        TILE2_AOC_3_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_3_release_customWave.out   (sig_TILE2_AOC_3_RELEASE);
        TILE2_AOC_3_release_customWave.clk   (sc_top_clock);

        TILE2_AOC_4.clk                  (sc_top_clock);
        TILE2_AOC_4.aoc_mux_ctrl         (sig_TILE2_AOC_4_MUX_CTRL);
        TILE2_AOC_4.boundary_in          (sig_TILE2_BOUNDARY_IN_out4);
        TILE2_AOC_4.clb_tile_output      (sig_TILE2_OUTLUT_4_OUT);
        TILE2_AOC_4.aoc_gate_signal      (sig_TILE2_AOC_4_GATE);
        TILE2_AOC_4.aoc_release_signal   (sig_TILE2_AOC_4_RELEASE);
        TILE2_AOC_4.aoc_out              (sig_TILE2_BOUNDARY_OUT_out4);

        sc_trace(tf, TILE2_AOC_4.aoc_mux_ctrl,       "TILE2_AOC_4.TILE2_AOC_4_mux_ctrl");
        sc_trace(tf, TILE2_AOC_4.boundary_in,        "TILE2_AOC_4.TILE2_AOC_4_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_4.clb_tile_output,    "TILE2_AOC_4.TILE2_AOC_4_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_4.aoc_gate_signal,    "TILE2_AOC_4.TILE2_AOC_4_gate_signal");
        sc_trace(tf, TILE2_AOC_4.aoc_release_signal, "TILE2_AOC_4.TILE2_AOC_4_release_signal");
        sc_trace(tf, TILE2_AOC_4.aoc_out,            "TILE2_AOC_4.TILE2_AOC_4_clb_output");

        TILE2_AOC_4_gate_customWave.out   (sig_TILE2_AOC_4_GATE);
        TILE2_AOC_4_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_4_release_customWave.out   (sig_TILE2_AOC_4_RELEASE);
        TILE2_AOC_4_release_customWave.clk   (sc_top_clock);

        TILE2_AOC_5.clk                  (sc_top_clock);
        TILE2_AOC_5.aoc_mux_ctrl         (sig_TILE2_AOC_5_MUX_CTRL);
        TILE2_AOC_5.boundary_in          (sig_TILE2_BOUNDARY_IN_out5);
        TILE2_AOC_5.clb_tile_output      (sig_TILE2_OUTLUT_5_OUT);
        TILE2_AOC_5.aoc_gate_signal      (sig_TILE2_AOC_5_GATE);
        TILE2_AOC_5.aoc_release_signal   (sig_TILE2_AOC_5_RELEASE);
        TILE2_AOC_5.aoc_out              (sig_TILE2_BOUNDARY_OUT_out5);

        sc_trace(tf, TILE2_AOC_5.aoc_mux_ctrl,       "TILE2_AOC_5.TILE2_AOC_5_mux_ctrl");
        sc_trace(tf, TILE2_AOC_5.boundary_in,        "TILE2_AOC_5.TILE2_AOC_5_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_5.clb_tile_output,    "TILE2_AOC_5.TILE2_AOC_5_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_5.aoc_gate_signal,    "TILE2_AOC_5.TILE2_AOC_5_gate_signal");
        sc_trace(tf, TILE2_AOC_5.aoc_release_signal, "TILE2_AOC_5.TILE2_AOC_5_release_signal");
        sc_trace(tf, TILE2_AOC_5.aoc_out,            "TILE2_AOC_5.TILE2_AOC_5_clb_output");

        TILE2_AOC_5_gate_customWave.out   (sig_TILE2_AOC_5_GATE);
        TILE2_AOC_5_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_5_release_customWave.out   (sig_TILE2_AOC_5_RELEASE);
        TILE2_AOC_5_release_customWave.clk   (sc_top_clock);

        TILE2_AOC_6.clk                  (sc_top_clock);
        TILE2_AOC_6.aoc_mux_ctrl         (sig_TILE2_AOC_6_MUX_CTRL);
        TILE2_AOC_6.boundary_in          (sig_TILE2_BOUNDARY_IN_out6);
        TILE2_AOC_6.clb_tile_output      (sig_TILE2_OUTLUT_6_OUT);
        TILE2_AOC_6.aoc_gate_signal      (sig_TILE2_AOC_6_GATE);
        TILE2_AOC_6.aoc_release_signal   (sig_TILE2_AOC_6_RELEASE);
        TILE2_AOC_6.aoc_out              (sig_TILE2_BOUNDARY_OUT_out6);

        sc_trace(tf, TILE2_AOC_6.aoc_mux_ctrl,       "TILE2_AOC_6.TILE2_AOC_6_mux_ctrl");
        sc_trace(tf, TILE2_AOC_6.boundary_in,        "TILE2_AOC_6.TILE2_AOC_6_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_6.clb_tile_output,    "TILE2_AOC_6.TILE2_AOC_6_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_6.aoc_gate_signal,    "TILE2_AOC_6.TILE2_AOC_6_gate_signal");
        sc_trace(tf, TILE2_AOC_6.aoc_release_signal, "TILE2_AOC_6.TILE2_AOC_6_release_signal");
        sc_trace(tf, TILE2_AOC_6.aoc_out,            "TILE2_AOC_6.TILE2_AOC_6_clb_output");

        TILE2_AOC_6_gate_customWave.out   (sig_TILE2_AOC_6_GATE);
        TILE2_AOC_6_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_6_release_customWave.out   (sig_TILE2_AOC_6_RELEASE);
        TILE2_AOC_6_release_customWave.clk   (sc_top_clock);

        TILE2_AOC_7.clk                  (sc_top_clock);
        TILE2_AOC_7.aoc_mux_ctrl         (sig_TILE2_AOC_7_MUX_CTRL);
        TILE2_AOC_7.boundary_in          (sig_TILE2_BOUNDARY_IN_out7);
        TILE2_AOC_7.clb_tile_output      (sig_TILE2_OUTLUT_7_OUT);
        TILE2_AOC_7.aoc_gate_signal      (sig_TILE2_AOC_7_GATE);
        TILE2_AOC_7.aoc_release_signal   (sig_TILE2_AOC_7_RELEASE);
        TILE2_AOC_7.aoc_out              (sig_TILE2_BOUNDARY_OUT_out7);

        sc_trace(tf, TILE2_AOC_7.aoc_mux_ctrl,       "TILE2_AOC_7.TILE2_AOC_7_mux_ctrl");
        sc_trace(tf, TILE2_AOC_7.boundary_in,        "TILE2_AOC_7.TILE2_AOC_7_mux_input_boundary_input");
        sc_trace(tf, TILE2_AOC_7.clb_tile_output,    "TILE2_AOC_7.TILE2_AOC_7_mux_input_clb_tile_output");
        sc_trace(tf, TILE2_AOC_7.aoc_gate_signal,    "TILE2_AOC_7.TILE2_AOC_7_gate_signal");
        sc_trace(tf, TILE2_AOC_7.aoc_release_signal, "TILE2_AOC_7.TILE2_AOC_7_release_signal");
        sc_trace(tf, TILE2_AOC_7.aoc_out,            "TILE2_AOC_7.TILE2_AOC_7_clb_output");

        TILE2_AOC_7_gate_customWave.out   (sig_TILE2_AOC_7_GATE);
        TILE2_AOC_7_gate_customWave.clk   (sc_top_clock);
        TILE2_AOC_7_release_customWave.out   (sig_TILE2_AOC_7_RELEASE);
        TILE2_AOC_7_release_customWave.clk   (sc_top_clock);


        sc_trace(tf, sc_top_clock, "sc_top_clock");
        sc_trace(tf, sc_top_reset, "sc_top_reset");
        sc_trace(tf, sc_top_enable, "sc_top_enable");
    }

    // Reset Generator Thread
    void reset_generator(void)
    {
        sc_top_reset.write(false);
        wait(40000, SC_PS);
        sc_top_reset.write(true);
    }

    //SystemC End-Of-Elaboration function to connect the signals to constants
    void end_of_elaboration()
    {
        sc_top_enable.write((bool) 1);
        sc_zero.write((bool) 0);
        sc_one.write((bool) 1);
        sig_TILE1_OUTLUT_0_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_1_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_2_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_3_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_4_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_5_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_6_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_OUTLUT_7_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE1_LUT_0_OUT.write    ((bool) 0);
        sig_TILE1_LUT_0_fn.write     ((sc_uint<16>) 0x4444);

        sig_TILE1_LUT_1_OUT.write    ((bool) 0);
        sig_TILE1_LUT_1_fn.write     ((sc_uint<16>) 0x8200);

        sig_TILE1_LUT_2_OUT.write    ((bool) 0);
        sig_TILE1_LUT_2_fn.write     ((sc_uint<16>) 0xbbbb);

        sig_TILE1_FSM_0_OUT_LUT_fn.write     ((sc_uint<16>) 0x2222);
        sig_TILE1_FSM_0_S0_fn.write          ((sc_uint<16>) 0x1302);
        sig_TILE1_FSM_0_S1_fn.write          ((sc_uint<16>) 0x0);
        sig_TILE1_FSM_0_xe0_sel.write        ((bool)        false);
        sig_TILE1_FSM_0_xe1_sel.write        ((bool)        false);
        sig_TILE1_FSM_0_S0.write             ((bool) 0);
        sig_TILE1_FSM_0_S1.write             ((bool) 0);
        sig_TILE1_FSM_0_OUT.write            ((bool) 0);
        sig_TILE1_FSM_1_OUT_LUT_fn.write     ((sc_uint<16>) 0x8000);
        sig_TILE1_FSM_1_S0_fn.write          ((sc_uint<16>) 0x5a00);
        sig_TILE1_FSM_1_S1_fn.write          ((sc_uint<16>) 0x6c00);
        sig_TILE1_FSM_1_xe0_sel.write        ((bool)        false);
        sig_TILE1_FSM_1_xe1_sel.write        ((bool)        false);
        sig_TILE1_FSM_1_S0.write             ((bool) 0);
        sig_TILE1_FSM_1_S1.write             ((bool) 0);
        sig_TILE1_FSM_1_OUT.write            ((bool) 0);
        sig_TILE1_FSM_2_OUT_LUT_fn.write     ((sc_uint<16>) 0xf000);
        sig_TILE1_FSM_2_S0_fn.write          ((sc_uint<16>) 0x0);
        sig_TILE1_FSM_2_S1_fn.write          ((sc_uint<16>) 0x0);
        sig_TILE1_FSM_2_xe0_sel.write        ((bool)        false);
        sig_TILE1_FSM_2_xe1_sel.write        ((bool)        false);
        sig_TILE1_FSM_2_S0.write             ((bool) 0);
        sig_TILE1_FSM_2_S1.write             ((bool) 0);
        sig_TILE1_FSM_2_OUT.write            ((bool) 0);

        sig_TILE1_COUNTER_0_add_shift_dir.write          ((bool) 0);
        sig_TILE1_COUNTER_0_add_shift_mode.write         ((bool) 0);
        sig_TILE1_COUNTER_0_add_shift_on_event_en.write  ((bool) 1);
        sig_TILE1_COUNTER_0_global_clk_en.write          ((bool) 1);
        sig_TILE1_COUNTER_0_glbl_load_en.write           ((bool) 0);
        sig_TILE1_COUNTER_0_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_0_glbl_en.write                ((bool) 1);
        sig_TILE1_COUNTER_0_match1_val.write             ((sc_uint<32>) 0x3FFFF);
        sig_TILE1_COUNTER_0_match2_val.write             ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_0_match1_out.write             ((sc_uint<32>) 0x3FFFF);
        sig_TILE1_COUNTER_0_match2_out.write             ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_0_match_en.write               ((bool) 1);
        sig_TILE1_COUNTER_0_glbl_serializer_mode.write   ((bool) 1);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_COUNTER_0_lfsr_mode.write                 ((bool) 0);
        sig_TILE1_COUNTER_0_match1_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_0_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE1_COUNTER_0_match2_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_0_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE1_COUNTER_0_RECONFIG_PIPELINE_EN.write      ((bool) TILE1_PIPELINE_MODE);
#endif

        sig_TILE1_COUNTER_1_add_shift_dir.write          ((bool) 0);
        sig_TILE1_COUNTER_1_add_shift_mode.write         ((bool) 0);
        sig_TILE1_COUNTER_1_add_shift_on_event_en.write  ((bool) 1);
        sig_TILE1_COUNTER_1_global_clk_en.write          ((bool) 1);
        sig_TILE1_COUNTER_1_glbl_load_en.write           ((bool) 0);
        sig_TILE1_COUNTER_1_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_1_glbl_en.write                ((bool) 1);
        sig_TILE1_COUNTER_1_match1_val.write             ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_1_match2_val.write             ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_1_match1_out.write             ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_1_match2_out.write             ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_1_match_en.write               ((bool) 1);
        sig_TILE1_COUNTER_1_glbl_serializer_mode.write   ((bool) 1);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_COUNTER_1_lfsr_mode.write                 ((bool) 0);
        sig_TILE1_COUNTER_1_match1_tap_en.write             ((bool) 1);
        sig_TILE1_COUNTER_1_match1_tap.write                ((sc_uint<5>) 1);
        sig_TILE1_COUNTER_1_match2_tap_en.write             ((bool) 1);
        sig_TILE1_COUNTER_1_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE1_COUNTER_1_RECONFIG_PIPELINE_EN.write      ((bool) TILE1_PIPELINE_MODE);
#endif

        sig_TILE1_COUNTER_2_add_shift_dir.write          ((bool) 0);
        sig_TILE1_COUNTER_2_add_shift_mode.write         ((bool) 0);
        sig_TILE1_COUNTER_2_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE1_COUNTER_2_global_clk_en.write          ((bool) 1);
        sig_TILE1_COUNTER_2_glbl_load_en.write           ((bool) 0);
        sig_TILE1_COUNTER_2_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE1_COUNTER_2_glbl_en.write                ((bool) 1);
        sig_TILE1_COUNTER_2_match1_val.write             ((sc_uint<32>) 16);
        sig_TILE1_COUNTER_2_match2_val.write             ((sc_uint<32>) 17);
        sig_TILE1_COUNTER_2_match1_out.write             ((sc_uint<32>) 16);
        sig_TILE1_COUNTER_2_match2_out.write             ((sc_uint<32>) 17);
        sig_TILE1_COUNTER_2_match_en.write               ((bool) 1);
        sig_TILE1_COUNTER_2_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_COUNTER_2_lfsr_mode.write                 ((bool) 0);
        sig_TILE1_COUNTER_2_match1_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_2_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE1_COUNTER_2_match2_tap_en.write             ((bool) 0);
        sig_TILE1_COUNTER_2_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE1_COUNTER_2_RECONFIG_PIPELINE_EN.write      ((bool) TILE1_PIPELINE_MODE);
#endif
        sig_TILE1_HLC_e0.write((sc_uint<32>) 19);
        sig_TILE1_HLC_e1.write((sc_uint<32>) 22);
        sig_TILE1_HLC_e2.write((sc_uint<32>) 14);
        sig_TILE1_HLC_e3.write((sc_uint<32>) 15);
        sig_TILE1_HLC_P_intr_val.write((sc_uint<32>) 0xFFFF);
        sig_TILE1_HLC_P_fifo_read_ptr.write((sc_uint<2>) 0);
        sig_TILE1_HLC_P_fifo_write_ptr.write((sc_uint<2>) 0);
        sig_TILE1_HLC_P_fifo_underflow.write((bool) 0);
        sig_TILE1_HLC_P_fifo_overflow.write((bool) 0);
        sig_TILE1_HLC_P_fifo_refill_enable.write((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE1_HLC_ae0.write          ((bool) 0);
        sig_TILE1_HLC_ae1.write          ((bool) 0);
        sig_TILE1_HLC_ae2.write          ((bool) 0);
        sig_TILE1_HLC_ae3.write          ((bool) 0);
#endif
#if TYPE == 3
        sig_TILE1_HLC_RECONFIG_PIPELINE_EN.write   ((bool) TILE1_PIPELINE_MODE);
        sig_TILE1_HLC_SPI_EN.write                 ((bool) TILE1_SPI_EN);
        sig_TILE1_HLC_SPI_EVENT_TRIGGER.write      ((sc_uint<5>) 0);
        sig_TILE1_HLC_SPI_SHIFT_VAL.write          ((sc_uint<5>) 0);
        sig_TILE1_HLC_SPI_EXPORT_RXBUFF.write      ((sc_uint<16>) 0);
#endif
		sig_TILE1_HLC_hlc_instr_0.write((sc_uint<32>) TILE1_HLCINSTR_0);
		sig_TILE1_HLC_hlc_instr_1.write((sc_uint<32>) TILE1_HLCINSTR_1);
		sig_TILE1_HLC_hlc_instr_2.write((sc_uint<32>) TILE1_HLCINSTR_2);
		sig_TILE1_HLC_hlc_instr_3.write((sc_uint<32>) TILE1_HLCINSTR_3);
		sig_TILE1_HLC_hlc_instr_4.write((sc_uint<32>) TILE1_HLCINSTR_4);
		sig_TILE1_HLC_hlc_instr_5.write((sc_uint<32>) TILE1_HLCINSTR_5);
		sig_TILE1_HLC_hlc_instr_6.write((sc_uint<32>) TILE1_HLCINSTR_6);
		sig_TILE1_HLC_hlc_instr_7.write((sc_uint<32>) TILE1_HLCINSTR_7);
		sig_TILE1_HLC_hlc_instr_8.write((sc_uint<32>) TILE1_HLCINSTR_8);
		sig_TILE1_HLC_hlc_instr_9.write((sc_uint<32>) TILE1_HLCINSTR_9);
		sig_TILE1_HLC_hlc_instr_10.write((sc_uint<32>) TILE1_HLCINSTR_10);
		sig_TILE1_HLC_hlc_instr_11.write((sc_uint<32>) TILE1_HLCINSTR_11);
		sig_TILE1_HLC_hlc_instr_12.write((sc_uint<32>) TILE1_HLCINSTR_12);
		sig_TILE1_HLC_hlc_instr_13.write((sc_uint<32>) TILE1_HLCINSTR_13);
		sig_TILE1_HLC_hlc_instr_14.write((sc_uint<32>) TILE1_HLCINSTR_14);
		sig_TILE1_HLC_hlc_instr_15.write((sc_uint<32>) TILE1_HLCINSTR_15);
		sig_TILE1_HLC_hlc_instr_16.write((sc_uint<32>) TILE1_HLCINSTR_16);
		sig_TILE1_HLC_hlc_instr_17.write((sc_uint<32>) TILE1_HLCINSTR_17);
		sig_TILE1_HLC_hlc_instr_18.write((sc_uint<32>) TILE1_HLCINSTR_18);
		sig_TILE1_HLC_hlc_instr_19.write((sc_uint<32>) TILE1_HLCINSTR_19);
		sig_TILE1_HLC_hlc_instr_20.write((sc_uint<32>) TILE1_HLCINSTR_20);
		sig_TILE1_HLC_hlc_instr_21.write((sc_uint<32>) TILE1_HLCINSTR_21);
		sig_TILE1_HLC_hlc_instr_22.write((sc_uint<32>) TILE1_HLCINSTR_22);
		sig_TILE1_HLC_hlc_instr_23.write((sc_uint<32>) TILE1_HLCINSTR_23);
		sig_TILE1_HLC_hlc_instr_24.write((sc_uint<32>) TILE1_HLCINSTR_24);
		sig_TILE1_HLC_hlc_instr_25.write((sc_uint<32>) TILE1_HLCINSTR_25);
		sig_TILE1_HLC_hlc_instr_26.write((sc_uint<32>) TILE1_HLCINSTR_26);
		sig_TILE1_HLC_hlc_instr_27.write((sc_uint<32>) TILE1_HLCINSTR_27);
		sig_TILE1_HLC_hlc_instr_28.write((sc_uint<32>) TILE1_HLCINSTR_28);
		sig_TILE1_HLC_hlc_instr_29.write((sc_uint<32>) TILE1_HLCINSTR_29);
		sig_TILE1_HLC_hlc_instr_30.write((sc_uint<32>) TILE1_HLCINSTR_30);
		sig_TILE1_HLC_hlc_instr_31.write((sc_uint<32>) TILE1_HLCINSTR_31);


        sig_TILE1_BOUNDARY_IN_in0.write((bool) 0);//Original input to CLB before input pipeline filtering or synchronization
        sig_TILE1_BOUNDARY_IN_in1.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in2.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in3.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in4.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in5.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in6.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_in7.write((bool) 0);

        sig_TILE1_BOUNDARY_IN_ctrl0.write((sc_uint<32>) 17);
        sig_TILE1_BOUNDARY_IN_ctrl1.write((sc_uint<32>) 16);
        sig_TILE1_BOUNDARY_IN_ctrl2.write((sc_uint<32>) 18);
        sig_TILE1_BOUNDARY_IN_ctrl3.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl4.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl5.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl6.write((sc_uint<32>) 0);
        sig_TILE1_BOUNDARY_IN_ctrl7.write((sc_uint<32>) 0);

        sig_TILE1_BOUNDARY_IN_out0.write((bool) 0);//Output after synchronization/pipelining/edge detection
        sig_TILE1_BOUNDARY_IN_out1.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out2.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out3.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out4.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out5.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out6.write((bool) 0);
        sig_TILE1_BOUNDARY_IN_out7.write((bool) 0);

        sig_TILE1_BOUNDARY_OUT_out0.write((bool) 0);//Output from CLB (either comes from AOC or OUTLUT, depending on device)
        sig_TILE1_BOUNDARY_OUT_out1.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out2.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out3.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out4.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out5.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out6.write((bool) 0);
        sig_TILE1_BOUNDARY_OUT_out7.write((bool) 0);

        sig_TILE1_AOC_0_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_0_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_0_GATE.write               ((bool) 0);
        sig_TILE1_AOC_0_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_0_OUTPUT.write             ((bool) 0);

        sig_TILE1_AOC_1_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_1_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_1_GATE.write               ((bool) 0);
        sig_TILE1_AOC_1_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_1_OUTPUT.write             ((bool) 0);

        sig_TILE1_AOC_2_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_2_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_2_GATE.write               ((bool) 0);
        sig_TILE1_AOC_2_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_2_OUTPUT.write             ((bool) 0);

        sig_TILE1_AOC_3_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_3_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_3_GATE.write               ((bool) 0);
        sig_TILE1_AOC_3_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_3_OUTPUT.write             ((bool) 0);

        sig_TILE1_AOC_4_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_4_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_4_GATE.write               ((bool) 0);
        sig_TILE1_AOC_4_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_4_OUTPUT.write             ((bool) 0);

        sig_TILE1_AOC_5_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_5_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_5_GATE.write               ((bool) 0);
        sig_TILE1_AOC_5_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_5_OUTPUT.write             ((bool) 0);

        sig_TILE1_AOC_6_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_6_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_6_GATE.write               ((bool) 0);
        sig_TILE1_AOC_6_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_6_OUTPUT.write             ((bool) 0);

        sig_TILE1_AOC_7_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE1_AOC_7_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE1_AOC_7_GATE.write               ((bool) 0);
        sig_TILE1_AOC_7_RELEASE.write            ((bool) 0);
        sig_TILE1_AOC_7_OUTPUT.write             ((bool) 0);

        sig_TILE2_OUTLUT_0_fn.write     ((sc_uint<8>) 0xaa);
        sig_TILE2_OUTLUT_1_fn.write     ((sc_uint<8>) 0xaa);
        sig_TILE2_OUTLUT_2_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE2_OUTLUT_3_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE2_OUTLUT_4_fn.write     ((sc_uint<8>) 0xee);
        sig_TILE2_OUTLUT_5_fn.write     ((sc_uint<8>) 0xaa);
        sig_TILE2_OUTLUT_6_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE2_OUTLUT_7_fn.write     ((sc_uint<8>) 0x0);
        sig_TILE2_LUT_0_OUT.write    ((bool) 0);
        sig_TILE2_LUT_0_fn.write     ((sc_uint<16>) 0xeeee);

        sig_TILE2_LUT_1_OUT.write    ((bool) 0);
        sig_TILE2_LUT_1_fn.write     ((sc_uint<16>) 0xdddd);

        sig_TILE2_LUT_2_OUT.write    ((bool) 0);
        sig_TILE2_LUT_2_fn.write     ((sc_uint<16>) 0xeeee);

        sig_TILE2_FSM_0_OUT_LUT_fn.write     ((sc_uint<16>) 0xdddd);
        sig_TILE2_FSM_0_S0_fn.write          ((sc_uint<16>) 0x302);
        sig_TILE2_FSM_0_S1_fn.write          ((sc_uint<16>) 0x6420);
        sig_TILE2_FSM_0_xe0_sel.write        ((bool)        false);
        sig_TILE2_FSM_0_xe1_sel.write        ((bool)        false);
        sig_TILE2_FSM_0_S0.write             ((bool) 0);
        sig_TILE2_FSM_0_S1.write             ((bool) 0);
        sig_TILE2_FSM_0_OUT.write            ((bool) 0);
        sig_TILE2_FSM_1_OUT_LUT_fn.write     ((sc_uint<16>) 0x0);
        sig_TILE2_FSM_1_S0_fn.write          ((sc_uint<16>) 0x0);
        sig_TILE2_FSM_1_S1_fn.write          ((sc_uint<16>) 0x0);
        sig_TILE2_FSM_1_xe0_sel.write        ((bool)        false);
        sig_TILE2_FSM_1_xe1_sel.write        ((bool)        false);
        sig_TILE2_FSM_1_S0.write             ((bool) 0);
        sig_TILE2_FSM_1_S1.write             ((bool) 0);
        sig_TILE2_FSM_1_OUT.write            ((bool) 0);
        sig_TILE2_FSM_2_OUT_LUT_fn.write     ((sc_uint<16>) 0x80);
        sig_TILE2_FSM_2_S0_fn.write          ((sc_uint<16>) 0x5a);
        sig_TILE2_FSM_2_S1_fn.write          ((sc_uint<16>) 0x6c);
        sig_TILE2_FSM_2_xe0_sel.write        ((bool)        false);
        sig_TILE2_FSM_2_xe1_sel.write        ((bool)        false);
        sig_TILE2_FSM_2_S0.write             ((bool) 0);
        sig_TILE2_FSM_2_S1.write             ((bool) 0);
        sig_TILE2_FSM_2_OUT.write            ((bool) 0);

        sig_TILE2_COUNTER_0_add_shift_dir.write          ((bool) 0);
        sig_TILE2_COUNTER_0_add_shift_mode.write         ((bool) 0);
        sig_TILE2_COUNTER_0_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE2_COUNTER_0_global_clk_en.write          ((bool) 1);
        sig_TILE2_COUNTER_0_glbl_load_en.write           ((bool) 0);
        sig_TILE2_COUNTER_0_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_0_glbl_en.write                ((bool) 1);
        sig_TILE2_COUNTER_0_match1_val.write             ((sc_uint<32>) 8);
        sig_TILE2_COUNTER_0_match2_val.write             ((sc_uint<32>) 9);
        sig_TILE2_COUNTER_0_match1_out.write             ((sc_uint<32>) 8);
        sig_TILE2_COUNTER_0_match2_out.write             ((sc_uint<32>) 9);
        sig_TILE2_COUNTER_0_match_en.write               ((bool) 1);
        sig_TILE2_COUNTER_0_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE2_COUNTER_0_lfsr_mode.write                 ((bool) 0);
        sig_TILE2_COUNTER_0_match1_tap_en.write             ((bool) 0);
        sig_TILE2_COUNTER_0_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE2_COUNTER_0_match2_tap_en.write             ((bool) 0);
        sig_TILE2_COUNTER_0_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE2_COUNTER_0_RECONFIG_PIPELINE_EN.write      ((bool) TILE2_PIPELINE_MODE);
#endif

        sig_TILE2_COUNTER_1_add_shift_dir.write          ((bool) 0);
        sig_TILE2_COUNTER_1_add_shift_mode.write         ((bool) 0);
        sig_TILE2_COUNTER_1_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE2_COUNTER_1_global_clk_en.write          ((bool) 1);
        sig_TILE2_COUNTER_1_glbl_load_en.write           ((bool) 0);
        sig_TILE2_COUNTER_1_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_1_glbl_en.write                ((bool) 1);
        sig_TILE2_COUNTER_1_match1_val.write             ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_1_match2_val.write             ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_1_match1_out.write             ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_1_match2_out.write             ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_1_match_en.write               ((bool) 1);
        sig_TILE2_COUNTER_1_glbl_serializer_mode.write   ((bool) 1);
#if TYPE == 2 || TYPE == 3
        sig_TILE2_COUNTER_1_lfsr_mode.write                 ((bool) 0);
        sig_TILE2_COUNTER_1_match1_tap_en.write             ((bool) 1);
        sig_TILE2_COUNTER_1_match1_tap.write                ((sc_uint<5>) 15);
        sig_TILE2_COUNTER_1_match2_tap_en.write             ((bool) 1);
        sig_TILE2_COUNTER_1_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE2_COUNTER_1_RECONFIG_PIPELINE_EN.write      ((bool) TILE2_PIPELINE_MODE);
#endif

        sig_TILE2_COUNTER_2_add_shift_dir.write          ((bool) 0);
        sig_TILE2_COUNTER_2_add_shift_mode.write         ((bool) 0);
        sig_TILE2_COUNTER_2_add_shift_on_event_en.write  ((bool) 0);
        sig_TILE2_COUNTER_2_global_clk_en.write          ((bool) 1);
        sig_TILE2_COUNTER_2_glbl_load_en.write           ((bool) 0);
        sig_TILE2_COUNTER_2_event_load_val.write         ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_2_glbl_en.write                ((bool) 1);
        sig_TILE2_COUNTER_2_match1_val.write             ((sc_uint<32>) 17);
        sig_TILE2_COUNTER_2_match2_val.write             ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_2_match1_out.write             ((sc_uint<32>) 17);
        sig_TILE2_COUNTER_2_match2_out.write             ((sc_uint<32>) 0);
        sig_TILE2_COUNTER_2_match_en.write               ((bool) 1);
        sig_TILE2_COUNTER_2_glbl_serializer_mode.write   ((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE2_COUNTER_2_lfsr_mode.write                 ((bool) 0);
        sig_TILE2_COUNTER_2_match1_tap_en.write             ((bool) 0);
        sig_TILE2_COUNTER_2_match1_tap.write                ((sc_uint<5>) 0);
        sig_TILE2_COUNTER_2_match2_tap_en.write             ((bool) 0);
        sig_TILE2_COUNTER_2_match2_tap.write                ((sc_uint<5>) 0);
#endif
#if TYPE == 3
        sig_TILE2_COUNTER_2_RECONFIG_PIPELINE_EN.write      ((bool) TILE2_PIPELINE_MODE);
#endif
        sig_TILE2_HLC_e0.write((sc_uint<32>) 19);
        sig_TILE2_HLC_e1.write((sc_uint<32>) 22);
        sig_TILE2_HLC_e2.write((sc_uint<32>) 3);
        sig_TILE2_HLC_e3.write((sc_uint<32>) 0);
        sig_TILE2_HLC_P_intr_val.write((sc_uint<32>) 0xFFFF);
        sig_TILE2_HLC_P_fifo_read_ptr.write((sc_uint<2>) 0);
        sig_TILE2_HLC_P_fifo_write_ptr.write((sc_uint<2>) 0);
        sig_TILE2_HLC_P_fifo_underflow.write((bool) 0);
        sig_TILE2_HLC_P_fifo_overflow.write((bool) 0);
        sig_TILE2_HLC_P_fifo_refill_enable.write((bool) 0);
#if TYPE == 2 || TYPE == 3
        sig_TILE2_HLC_ae0.write          ((bool) 0);
        sig_TILE2_HLC_ae1.write          ((bool) 0);
        sig_TILE2_HLC_ae2.write          ((bool) 0);
        sig_TILE2_HLC_ae3.write          ((bool) 0);
#endif
#if TYPE == 3
        sig_TILE2_HLC_RECONFIG_PIPELINE_EN.write   ((bool) TILE2_PIPELINE_MODE);
        sig_TILE2_HLC_SPI_EN.write                 ((bool) TILE2_SPI_EN);
        sig_TILE2_HLC_SPI_EVENT_TRIGGER.write      ((sc_uint<5>) 0);
        sig_TILE2_HLC_SPI_SHIFT_VAL.write          ((sc_uint<5>) 0);
        sig_TILE2_HLC_SPI_EXPORT_RXBUFF.write      ((sc_uint<16>) 0);
#endif
		sig_TILE2_HLC_hlc_instr_0.write((sc_uint<32>) TILE2_HLCINSTR_0);
		sig_TILE2_HLC_hlc_instr_1.write((sc_uint<32>) TILE2_HLCINSTR_1);
		sig_TILE2_HLC_hlc_instr_2.write((sc_uint<32>) TILE2_HLCINSTR_2);
		sig_TILE2_HLC_hlc_instr_3.write((sc_uint<32>) TILE2_HLCINSTR_3);
		sig_TILE2_HLC_hlc_instr_4.write((sc_uint<32>) TILE2_HLCINSTR_4);
		sig_TILE2_HLC_hlc_instr_5.write((sc_uint<32>) TILE2_HLCINSTR_5);
		sig_TILE2_HLC_hlc_instr_6.write((sc_uint<32>) TILE2_HLCINSTR_6);
		sig_TILE2_HLC_hlc_instr_7.write((sc_uint<32>) TILE2_HLCINSTR_7);
		sig_TILE2_HLC_hlc_instr_8.write((sc_uint<32>) TILE2_HLCINSTR_8);
		sig_TILE2_HLC_hlc_instr_9.write((sc_uint<32>) TILE2_HLCINSTR_9);
		sig_TILE2_HLC_hlc_instr_10.write((sc_uint<32>) TILE2_HLCINSTR_10);
		sig_TILE2_HLC_hlc_instr_11.write((sc_uint<32>) TILE2_HLCINSTR_11);
		sig_TILE2_HLC_hlc_instr_12.write((sc_uint<32>) TILE2_HLCINSTR_12);
		sig_TILE2_HLC_hlc_instr_13.write((sc_uint<32>) TILE2_HLCINSTR_13);
		sig_TILE2_HLC_hlc_instr_14.write((sc_uint<32>) TILE2_HLCINSTR_14);
		sig_TILE2_HLC_hlc_instr_15.write((sc_uint<32>) TILE2_HLCINSTR_15);
		sig_TILE2_HLC_hlc_instr_16.write((sc_uint<32>) TILE2_HLCINSTR_16);
		sig_TILE2_HLC_hlc_instr_17.write((sc_uint<32>) TILE2_HLCINSTR_17);
		sig_TILE2_HLC_hlc_instr_18.write((sc_uint<32>) TILE2_HLCINSTR_18);
		sig_TILE2_HLC_hlc_instr_19.write((sc_uint<32>) TILE2_HLCINSTR_19);
		sig_TILE2_HLC_hlc_instr_20.write((sc_uint<32>) TILE2_HLCINSTR_20);
		sig_TILE2_HLC_hlc_instr_21.write((sc_uint<32>) TILE2_HLCINSTR_21);
		sig_TILE2_HLC_hlc_instr_22.write((sc_uint<32>) TILE2_HLCINSTR_22);
		sig_TILE2_HLC_hlc_instr_23.write((sc_uint<32>) TILE2_HLCINSTR_23);
		sig_TILE2_HLC_hlc_instr_24.write((sc_uint<32>) TILE2_HLCINSTR_24);
		sig_TILE2_HLC_hlc_instr_25.write((sc_uint<32>) TILE2_HLCINSTR_25);
		sig_TILE2_HLC_hlc_instr_26.write((sc_uint<32>) TILE2_HLCINSTR_26);
		sig_TILE2_HLC_hlc_instr_27.write((sc_uint<32>) TILE2_HLCINSTR_27);
		sig_TILE2_HLC_hlc_instr_28.write((sc_uint<32>) TILE2_HLCINSTR_28);
		sig_TILE2_HLC_hlc_instr_29.write((sc_uint<32>) TILE2_HLCINSTR_29);
		sig_TILE2_HLC_hlc_instr_30.write((sc_uint<32>) TILE2_HLCINSTR_30);
		sig_TILE2_HLC_hlc_instr_31.write((sc_uint<32>) TILE2_HLCINSTR_31);


        sig_TILE2_BOUNDARY_IN_in0.write((bool) 0);//Original input to CLB before input pipeline filtering or synchronization
        sig_TILE2_BOUNDARY_IN_in1.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_in2.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_in3.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_in4.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_in5.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_in6.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_in7.write((bool) 0);

        sig_TILE2_BOUNDARY_IN_ctrl0.write((sc_uint<32>) 18);
        sig_TILE2_BOUNDARY_IN_ctrl1.write((sc_uint<32>) 16);
        sig_TILE2_BOUNDARY_IN_ctrl2.write((sc_uint<32>) 0);
        sig_TILE2_BOUNDARY_IN_ctrl3.write((sc_uint<32>) 16);
        sig_TILE2_BOUNDARY_IN_ctrl4.write((sc_uint<32>) 0);
        sig_TILE2_BOUNDARY_IN_ctrl5.write((sc_uint<32>) 0);
        sig_TILE2_BOUNDARY_IN_ctrl6.write((sc_uint<32>) 0);
        sig_TILE2_BOUNDARY_IN_ctrl7.write((sc_uint<32>) 0);

        sig_TILE2_BOUNDARY_IN_out0.write((bool) 0);//Output after synchronization/pipelining/edge detection
        sig_TILE2_BOUNDARY_IN_out1.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_out2.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_out3.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_out4.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_out5.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_out6.write((bool) 0);
        sig_TILE2_BOUNDARY_IN_out7.write((bool) 0);

        sig_TILE2_BOUNDARY_OUT_out0.write((bool) 0);//Output from CLB (either comes from AOC or OUTLUT, depending on device)
        sig_TILE2_BOUNDARY_OUT_out1.write((bool) 0);
        sig_TILE2_BOUNDARY_OUT_out2.write((bool) 0);
        sig_TILE2_BOUNDARY_OUT_out3.write((bool) 0);
        sig_TILE2_BOUNDARY_OUT_out4.write((bool) 0);
        sig_TILE2_BOUNDARY_OUT_out5.write((bool) 0);
        sig_TILE2_BOUNDARY_OUT_out6.write((bool) 0);
        sig_TILE2_BOUNDARY_OUT_out7.write((bool) 0);

        sig_TILE2_AOC_0_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_0_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_0_GATE.write               ((bool) 0);
        sig_TILE2_AOC_0_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_0_OUTPUT.write             ((bool) 0);

        sig_TILE2_AOC_1_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_1_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_1_GATE.write               ((bool) 0);
        sig_TILE2_AOC_1_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_1_OUTPUT.write             ((bool) 0);

        sig_TILE2_AOC_2_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_2_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_2_GATE.write               ((bool) 0);
        sig_TILE2_AOC_2_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_2_OUTPUT.write             ((bool) 0);

        sig_TILE2_AOC_3_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_3_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_3_GATE.write               ((bool) 0);
        sig_TILE2_AOC_3_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_3_OUTPUT.write             ((bool) 0);

        sig_TILE2_AOC_4_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_4_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_4_GATE.write               ((bool) 0);
        sig_TILE2_AOC_4_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_4_OUTPUT.write             ((bool) 0);

        sig_TILE2_AOC_5_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_5_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_5_GATE.write               ((bool) 0);
        sig_TILE2_AOC_5_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_5_OUTPUT.write             ((bool) 0);

        sig_TILE2_AOC_6_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_6_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_6_GATE.write               ((bool) 0);
        sig_TILE2_AOC_6_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_6_OUTPUT.write             ((bool) 0);

        sig_TILE2_AOC_7_MUX_CTRL.write           ((sc_uint<16>) 0);
        sig_TILE2_AOC_7_BOUNDARY_INPUT.write     ((bool) 0);
        sig_TILE2_AOC_7_GATE.write               ((bool) 0);
        sig_TILE2_AOC_7_RELEASE.write            ((bool) 0);
        sig_TILE2_AOC_7_OUTPUT.write             ((bool) 0);

    }
};

//SystemC sc_main function
int sc_main(int argc, char *argv[])
{
    sc_trace_file *tf = sc_create_vcd_trace_file("CLB");
    tf->set_time_unit(1, SC_PS);
    Top top("top", tf);
    sc_start(100000, SC_PS);
    sc_close_vcd_trace_file(tf);
    return 0;
}

#endif //CLB_SIM
